{"version":3,"sources":["utils/DeriNumberFormat.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/pending.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","div","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","bg","toFixed","decimalScale","countDecimal","toPlainString","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","inputWidth","unitPadding","Input","unit","max","step","onChange","styles","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","ref","e","regStr","reg","RegExp","target","gt","integerValue","filter","substring","indexOf","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","showListFrom","showListTo","getValid","fromChainId","toString","getBalance","select_from","Init","JSON","parse","stringify","select_to","to_arr","from_one","p","from_two","from_three","disabledDown","down","arrow","deriLogo","rel","href"],"mappings":"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","file":"static/js/16.8589e363.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toPlainString,countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.div`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \n          || ((Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \n\n    if(isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if(!allowZero && others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\n      }\n      others.value = toPlainString(others.value)\n      if(others.value && /\\d+.9{6}/.test(others.value)){\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else if(firstTime){\n      const {width,height} = props\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\n      if(closeShowLoadingEffectAfterLoaded){\n        setFirstTime(false)\n      }\n    } \n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if(!isValidate()){\n        setRenderablity(defaultValue)\n      }\n    },60000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value,props.decimalScale,props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: 56px;\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',className,disabled = false,onBlur,onFocus}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\n    const reg = new RegExp(regStr)\n    const {value} = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(value < 0 || isNaN(value)) {\n      onChange && onChange('')\n    } else if(value){\n      if(minTradeVolume >= 1) {\n        if(value / minTradeVolume >=1) {\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \n        } else {\n          const validValue = value * minTradeVolume\n          onChange && onChange(validValue) \n        }\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\n        onChange && onChange(filter)\n      } else {\n        onChange && onChange(value)\n      }\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  useEffect(()=>{\n    inputRef.current.setCustomValidity('')\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\n      <input placeholder={placeholder} type='number'  onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unit}</div>\n    </Wrapper>    \n  )\n}","import './spinner.less'\nexport default function Spinner() {\n  return (\n    <div class=\"sleepContentView\">\n      <div class=\"circle\">\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/stage-one.9bfaa393.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.1ce521f2.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.507b43c5.svg\";","export default __webpack_public_path__ + \"static/media/succeed.1057d4b2.svg\";","export default __webpack_public_path__ + \"static/media/pending.598ea867.svg\";","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button'\nimport { PRIMARY } from '../../utils/Constants';\nimport useConfig from '../../hooks/useConfig'\nimport { useAlert } from 'react-alert'\nimport Spinner from './Spinner'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport stageOne from './img/stage-one.svg'\nimport stageTwo from './img/stage-two.svg'\nimport stageThree from './img/stage-three.svg'\nimport apiProxy from '../../model/ApiProxy';\nimport succeed from './img/succeed.svg'\nimport pending from './img/pending.svg'\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\n  const config = useConfig();\n  const alert = useAlert();\n  const history = useHistory();\n  const [isApprove, setIsApprove] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [bridgeState, setBridgeState] = useState({});\n  const [claimState, setClaimState] = useState({});\n  const [isClickClaim, setIsClickClaim] = useState(false);\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\n  const connect = () => {\n    wallet.connect()\n  }\n  const valid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        wallet.switchNetwork(config[res.toChainId])\n        setIsClaim(true)\n\n      }\n      setIsValid(res.valid)\n    }\n  }\n  const send = async () => {\n    if (amount === '' || amount === 0) {\n      alert.error(lang['amount-must-be-greater-than-zero'])\n      return;\n    }\n    if (+amount > balance) {\n      alert.error(lang['there-is-not-enough-amount'])\n      return;\n    }\n    if (!isWalletConnected.isFromConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setSending(true)\n    setBridgeState({\n      stageOne: false\n    })\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\n    if (res.success) {\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      setBridgeState({\n        stageOne: true,\n        stageTwo: false\n      })\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setSending(false)\n    }\n  }\n  const claim = async () => {\n    if (!isWalletConnected.isToConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setIsClickClaim(true)\n    setClaimState({\n      stageOne: false,\n    })\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: false,\n      })\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      alert.error(lang['claim-faild'])\n    }\n  }\n  const reset = ()=>{\n    history.push('/bridge')\n  }\n  const approve = async () => {\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setIsApprove(true);\n      loadApprove();\n    } else {\n      setIsApprove(false)\n      alert.error(lang['approve-faild'])\n    }\n  }\n  const loadApprove = async () => {\n    if (wallet.isConnected()) {\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\n      setIsApprove(result);\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      loadApprove();\n      valid()\n    }\n  }, [wallet.detail, initialize]);\n  useEffect(() => {\n    if (isValid) {\n      setBridgeState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n    } else if (isClickClaim) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n      setSending(false)\n      setAmount('')\n    } else {\n    }\n  }, [isValid, initialize]);\n  useEffect(() => {\n    let element;\n    if (wallet.isConnected()) {\n      if (isValid) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\n      } else if (!isApprove) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\n      } else if(isClickClaim){\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\n      }else {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\n      }\n    } else {\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\n    }\n    setActionElement(element)\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\n  return (\n    <div className='operate'>\n      <div className='from-to-title'>\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\n      </div>\n      <div className='btn'>\n        {actionElement}\n      </div>\n      <div className='hint'>\n        {!isClaim && <div className='sending'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!sending && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && <>\n                  {bridgeState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['bridge-signed']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\n                  {bridgeState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n        {isClaim && <div className='claiming'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!isClickClaim && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && <>\n                  {claimState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['finished']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && claimState.stageTwo && <>\n                  {claimState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/arrow-left.f14b02ac.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.e8dbb78e.svg\";","import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\nimport Input from '../../components/Input/Input'\nimport Operate from './Operate'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport apiProxy from '../../model/ApiProxy'\nimport arrow from './img/arrow-left.svg'\nimport disabledDown from './img/disabled-down.svg'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport deriLogo from '../../assets/img/logo.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport down from '../../assets/img/arrow-down.svg'\nimport classNames from 'classnames' \nimport './bridge.less'\nfunction Bridge({ wallet, lang }) {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState(0);\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\n  const netWork_text = isdev ?\n    [\n      {\n        text: lang['ropsten'],\n        id: 3,\n        img: ETH,\n      },\n      {\n        text: lang['bsc-testnet'],\n        id: 97,\n        img: BSC,\n      },\n      {\n        text: lang['heco-testnet'],\n        id: 256,\n        img: HECO,\n      }\n    ]\n    : [\n\n      {\n        text: lang['ethereum'],\n        id: 1,\n        img: ETH,\n      },\n      {\n        text: lang['bsc'],\n        id: 56,\n        img: BSC,\n      },\n      {\n        text: lang['heco'],\n        id: 128,\n        img: HECO,\n      }\n\n    ]\n\n  const [fromList, setFromList] = useState(netWork_text)\n  const [toList, setToList] = useState(netWork_text)\n  const [sending, setSending] = useState(false);\n  const [initialize, setInitialize] = useState(isdev ?\n    {\n      from_chainId: 97,\n      from_network: lang['bsc-testnet'],\n      to_chainId: 3,\n      to_network: lang['ropsten']\n    } : {\n      from_chainId: 1,\n      from_network: lang['ethereum'],\n      to_chainId: 56,\n      to_network: lang['bsc']\n    });\n  const [isClaim, setIsClaim] = useState(false);\n  const [dropdownList_from, setDropdownList_from] = useState(false);\n  const [dropdownList_to, setDropdownList_to] = useState(false);\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\n  const [isWalletConnected, setIsWalletConnected] = useState(\n    {\n      isFromConnected: false,\n      isToConnected: false\n    }\n  );\n  const isConnected = () => {\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\n    let obj = {\n      isFromConnected: isFromConnected,\n      isToConnected: isToConnected\n    }\n    setIsWalletConnected(obj)\n  }\n\n  const showListFrom = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_from(!dropdownList_from)\n  }\n  const showListTo = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_to(!dropdownList_to)\n  }\n\n  const getValid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        setInitialize({\n          from_chainId: res.fromChainId,\n          from_network: isNetwork(res.fromChainId, lang).netWork,\n          to_chainId: res.toChainId,\n          to_network: isNetwork(res.toChainId, lang).netWork,\n        })\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\n        setTo_img(isNetwork(res.toChainId, lang).img)\n        setAmount(bg(res.amount, -18).toString())\n        setSending(res.valid)\n      }\n    }\n  }\n\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n\n  useEffect(() => {\n    getBalance()\n  }, [wallet.detail, initialize]);\n\n  useEffect(() => {\n    getValid()\n  }, [wallet.detail])\n\n  const select_from = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.to_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.from_chainId = obj.id;\n      Init.from_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_from(!dropdownList_from)\n  }\n  const select_to = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.from_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.to_chainId = obj.id;\n      Init.to_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_to(!dropdownList_to)\n\n  }\n\n  useEffect(() => {\n    let from_arr;\n    let to_arr;\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\n    from_arr = [from_one, from_two, from_three]\n    to_arr = [to_one, to_two, to_three]\n    setFromList(from_arr)\n    setToList(to_arr)\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\n    isConnected()\n\n  }, [initialize,wallet.detail])\n\n  const getAmount = (value) => {\n    setAmount(value)\n  }\n\n  return (\n    <div className='bridge-big-box'>\n      <div className='bridge-box'>\n        <div className='bridge-title'>\n          <div className='title'>\n            {lang['bridge']}\n          </div>\n          <div className='birdge-des'>\n            {lang['bridge-des']}\n          </div>\n        </div>\n        <div className='bridge-info'>\n          <div className='select-network-box'>\n            <div className='select-network-title'>\n              {lang['select-networks']}\n            </div>\n            <div className='select-network-from-to'>\n              <div className='from-network'>\n                <div className='from-title'>\n                  {lang['from']}\n                </div>\n                <div className='from-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\n                    <div className='network-logo-connected'>\n                      <img src={From_img} alt='' />\n                      <span>{initialize.from_network}</span>\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\n                  </div>\n                  <ul className={selectListClassFrom}>\n                    <li className='wallet-li' onClick={() => select_from(fromList[0])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[0].img} /> <span> {fromList[0].text} </span>\n                      </div>\n                      <div className='up-icon-btn' onClick={() => { showListFrom() }}>\n                        <img alt='' src={down} className='up-icon' />\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_from(fromList[1])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[1].img} /> <span> {fromList[1].text} </span>\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_from(fromList[2])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[2].img} /> <span> {fromList[2].text} </span>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className='arrow'>\n                <img src={arrow} alt='' />\n              </div>\n              <div className='to-network'>\n                <div className='to-title'>\n                  {lang['to']}\n                </div>\n                <div className='to-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\n                    <div className='network-logo-connected'>\n                      <img src={To_img} alt='' />\n                      <span>{initialize.to_network}</span>\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\n                  </div>\n                  <ul className={selectListClassTo}>\n                    <li className='wallet-li' onClick={() => select_to(toList[0])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[0].img} /> <span> {toList[0].text} </span>\n                      </div>\n                      <div className='up-icon-btn' onClick={() => { showListTo() }}>\n                        <img alt='' src={down} className='up-icon' />\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_to(toList[1])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[1].img} /> <span> {toList[1].text} </span>\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_to(toList[2])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[2].img} /> <span> {toList[2].text} </span>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='set-amount'>\n            <div className='set-amount-title'>\n              {lang['set-amount']}\n            </div>\n            <div className='set-amount-box'>\n              <div className='input-deri'>\n                <Input placeholder='0' value={amount} onChange={getAmount} disabled={sending} className='input-box' />\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\n              </div>\n              <div className='total-deri'>\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true}  /> DERI\n              </div>\n            </div>\n          </div>\n          <div className='bridge-operate-hint'>\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\n          </div>\n          <div className='bridge-to-polygon'>\n            <div>\n              <div className='birdge-to-polygon-title'>\n                {lang['bridge-to-polygon']} <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'>Polygon</a>\n                </span>\n              </div>\n              <div className='bridge-to-polygon-des'>\n                {lang['bridge-to-polygon-des']}\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}