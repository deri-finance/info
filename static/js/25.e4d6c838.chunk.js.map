{"version":3,"sources":["desktop/pages/trade/Lite/Lite.js","desktop/pages/trade/Tab/Tab.js"],"names":["Lite","lang","className","lite","Tab","history","useHistory","clazz","classNames","pro","redirect","path","push","type","isFuture","onClick","isOption"],"mappings":"8HAAA,6GAOe,SAASA,GAAK,KAACC,IAC5B,OACE,sBAAKC,UAAU,kBAAf,UACE,cAAC,IAAD,CAAYD,KAAMA,IAClB,sBAAKC,UAAU,kBAAf,UACI,cAAC,IAAD,CAAKC,MAAM,EAAMF,KAAMA,IACvB,cAAC,IAAD,CAAWA,KAAMA,Y,iCCb3B,qFAMe,SAASG,GAAI,KAAED,GAAO,EAAT,KAAgBF,IAC1C,MAAMI,EAAUC,uBAGVC,EAAQC,IAAW,iBAAkB,CACzCL,KAAMA,EACNM,KAAMN,IAGFO,EAAWC,IACfN,EAAQO,KAAKD,IAIf,OACE,sBAAKT,UAAWK,EAAhB,UACGM,IAAKC,UAAY,qCAChB,qBAAKZ,UAAU,OAAOa,QAAS,IAAML,EAAS,iBAA9C,SAAkET,EAAI,OACtE,sBAAKC,UAAU,MAAMa,QAAS,IAAML,EAAS,gBAA7C,cAAgET,EAAI,UAGrEY,IAAKG,UAAY,qCAChB,qBAAKd,UAAU,OAAOa,QAAS,IAAML,EAAS,iBAA9C,SAAkET,EAAI,OACtE,sBAAKC,UAAU,MAAMa,QAAS,IAAML,EAAS,gBAA7C,cAAgET,EAAI,e","file":"static/js/25.e4d6c838.chunk.js","sourcesContent":["import LiteTrade from '../../../../components/Trade/LiteTrade';\nimport AreaPicker from '../../../../components/AreaPicker/AreaPicker';\nimport Tab from '../Tab/Tab';\nimport './lite.less'\nimport './zh-lite.less'\nimport './de-lite.less'\n\nexport default function Lite({lang}){\n  return (\n    <div className='trade-container'>\n      <AreaPicker lang={lang} ></AreaPicker> \n      <div className='trade-body lite'>\n          <Tab lite={true} lang={lang} />\n          <LiteTrade lang={lang} /> \n      </div>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport classNames from 'classnames';\nimport type from '../../../../model/Type'\n\n\nexport default function Tab({ lite = false, lang }) {\n  const history = useHistory();\n  // const [isLite, setIsLite] = useState(true);\n\n  const clazz = classNames('check-lite-pro', {\n    lite: lite,\n    pro: !lite\n  })\n\n  const redirect = path => {\n    history.push(path)\n  }\n\n\n  return (\n    <div className={clazz}>\n      {type.isFuture && <>\n        <div className='lite' onClick={() => redirect('/futures/lite')} >{lang['lite']}</div>\n        <div className='pro' onClick={() => redirect('/futures/pro')}> {lang['pro']}\n        </div>\n      </>}\n      {type.isOption && <>\n        <div className='lite' onClick={() => redirect('/options/lite')} >{lang['lite']}</div>\n        <div className='pro' onClick={() => redirect('/options/pro')}> {lang['pro']}\n        </div>\n      </>}\n    </div>\n  )\n}"],"sourceRoot":""}