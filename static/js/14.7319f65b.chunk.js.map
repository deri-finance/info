{"version":3,"sources":["pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/pending.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js","utils/DeriNumberFormat.js","components/Input/Input.js"],"names":["Spinner","class","Operate","lang","wallet","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","useState","isApprove","setIsApprove","isValid","setIsValid","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","type","PRIMARY","className","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","window","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","useEffect","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","showListFrom","showListTo","getValid","fromChainId","bg","toString","getBalance","select_from","Init","JSON","parse","stringify","select_to","to_arr","from_one","filter","p","from_two","from_three","disabledDown","down","arrow","Input","value","onChange","disabled","deriLogo","DeriNumberFormat","decimalScale","thousandSeparator","rel","target","href","Wrapper","styled","NumberFormat","props","width","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","useRef","allowZero","undefined","isNaN","Math","abs","defaultValue","others","test","toFixed","console","log","countDecimal","toPlainString","displayType","fixedDecimalScale","style","height","timeout","setTimeout","clearTimeout","div","inputWidth","unitPadding","unit","max","step","styles","focus","minTradeVolume","decimal","readOnly","inputRef","current","setCustomValidity","ref","e","regStr","reg","RegExp","gt","integerValue","substring","indexOf"],"mappings":"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","file":"static/js/14.7319f65b.chunk.js","sourcesContent":["import './spinner.less'\nexport default function Spinner() {\n  return (\n    <div class=\"sleepContentView\">\n      <div class=\"circle\">\n      </div>\n    </div>\n  )\n}","export default __webpack_public_path__ + \"static/media/stage-one.9bfaa393.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.1ce521f2.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.507b43c5.svg\";","export default __webpack_public_path__ + \"static/media/succeed.1057d4b2.svg\";","export default __webpack_public_path__ + \"static/media/pending.598ea867.svg\";","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport Button from '../../components/Button/Button'\nimport { PRIMARY } from '../../utils/Constants';\nimport useConfig from '../../hooks/useConfig'\nimport { useAlert } from 'react-alert'\nimport Spinner from './Spinner'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport stageOne from './img/stage-one.svg'\nimport stageTwo from './img/stage-two.svg'\nimport stageThree from './img/stage-three.svg'\nimport apiProxy from '../../model/ApiProxy';\nimport succeed from './img/succeed.svg'\nimport pending from './img/pending.svg'\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\n  const config = useConfig();\n  const alert = useAlert();\n  const history = useHistory();\n  const [isApprove, setIsApprove] = useState(false);\n  const [isValid, setIsValid] = useState(false);\n  const [bridgeState, setBridgeState] = useState({});\n  const [claimState, setClaimState] = useState({});\n  const [isClickClaim, setIsClickClaim] = useState(false);\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\n  const connect = () => {\n    wallet.connect()\n  }\n  const valid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        wallet.switchNetwork(config[res.toChainId])\n        setIsClaim(true)\n\n      }\n      setIsValid(res.valid)\n    }\n  }\n  const send = async () => {\n    if (amount === '' || amount === 0) {\n      alert.error(lang['amount-must-be-greater-than-zero'])\n      return;\n    }\n    if (+amount > balance) {\n      alert.error(lang['there-is-not-enough-amount'])\n      return;\n    }\n    if (!isWalletConnected.isFromConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setSending(true)\n    setBridgeState({\n      stageOne: false\n    })\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\n    if (res.success) {\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      setBridgeState({\n        stageOne: true,\n        stageTwo: false\n      })\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      setSending(false)\n    }\n  }\n  const claim = async () => {\n    if (!isWalletConnected.isToConnected) {\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\n      return;\n    }\n    setIsClickClaim(true)\n    setClaimState({\n      stageOne: false,\n    })\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: false,\n      })\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\n      window.setInterval(() => {\n        valid()\n      }, 3000)\n    } else {\n      alert.error(lang['claim-faild'])\n    }\n  }\n  const reset = ()=>{\n    history.push('/bridge')\n  }\n  const approve = async () => {\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\n    if (res.success) {\n      setIsApprove(true);\n      loadApprove();\n    } else {\n      setIsApprove(false)\n      alert.error(lang['approve-faild'])\n    }\n  }\n  const loadApprove = async () => {\n    if (wallet.isConnected()) {\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\n      setIsApprove(result);\n    }\n  }\n  useEffect(() => {\n    if (wallet.isConnected()) {\n      loadApprove();\n      valid()\n    }\n  }, [wallet.detail, initialize]);\n  useEffect(() => {\n    if (isValid) {\n      setBridgeState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n    } else if (isClickClaim) {\n      setClaimState({\n        stageOne: true,\n        stageTwo: true,\n        stageThree: true,\n      })\n      setSending(false)\n      setAmount('')\n    } else {\n    }\n  }, [isValid, initialize]);\n  useEffect(() => {\n    let element;\n    if (wallet.isConnected()) {\n      if (isValid) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\n      } else if (!isApprove) {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\n      } else if(isClickClaim){\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\n      }else {\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\n      }\n    } else {\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\n    }\n    setActionElement(element)\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\n  return (\n    <div className='operate'>\n      <div className='from-to-title'>\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\n      </div>\n      <div className='btn'>\n        {actionElement}\n      </div>\n      <div className='hint'>\n        {!isClaim && <div className='sending'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!sending && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && <>\n                  {bridgeState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['bridge-signed']}</div>\n            </div>\n            <div className='ok-pending'>\n              {sending && <>\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\n                  {bridgeState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n        {isClaim && <div className='claiming'>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne ? <div className='succeed'>\n                  <img alt='' src={succeed} />\n                </div> : <div className='pending'>\n                    <Spinner />\n                  </div>}\n              </>}\n              {!isClickClaim && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && <>\n                  {claimState.stageTwo ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n              </>}\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\n            </div>\n          </div>\n          <div className='stage'>\n            <div className='stage-img-text'>\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\n              <div className='stage-text'>{lang['finished']}</div>\n            </div>\n            <div className='ok-pending'>\n              {isClickClaim && <>\n                {claimState.stageOne && claimState.stageTwo && <>\n                  {claimState.stageThree ? <div className='succeed'>\n                    <img alt='' src={succeed} />\n                  </div> : <div className='pending'>\n                      <Spinner />\n                    </div>}\n                </>}\n\n              </>}\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\n            </div>\n          </div>\n        </div>}\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}","export default __webpack_public_path__ + \"static/media/arrow-left.f14b02ac.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.e8dbb78e.svg\";","import React, { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\nimport Input from '../../components/Input/Input'\nimport Operate from './Operate'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport apiProxy from '../../model/ApiProxy'\nimport arrow from './img/arrow-left.svg'\nimport disabledDown from './img/disabled-down.svg'\nimport BSC from '../../assets/img/bsc-logo.svg';\nimport ETH from '../../assets/img/ethereum.svg'\nimport deriLogo from '../../assets/img/logo.svg'\nimport HECO from '../../assets/img/heco.svg'\nimport down from '../../assets/img/arrow-down.svg'\nimport classNames from 'classnames' \nimport './bridge.less'\nfunction Bridge({ wallet, lang }) {\n  const [amount, setAmount] = useState(0);\n  const [balance, setBalance] = useState(0);\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\n  const netWork_text = isdev ?\n    [\n      {\n        text: lang['ropsten'],\n        id: 3,\n        img: ETH,\n      },\n      {\n        text: lang['bsc-testnet'],\n        id: 97,\n        img: BSC,\n      },\n      {\n        text: lang['heco-testnet'],\n        id: 256,\n        img: HECO,\n      }\n    ]\n    : [\n\n      {\n        text: lang['ethereum'],\n        id: 1,\n        img: ETH,\n      },\n      {\n        text: lang['bsc'],\n        id: 56,\n        img: BSC,\n      },\n      {\n        text: lang['heco'],\n        id: 128,\n        img: HECO,\n      }\n\n    ]\n\n  const [fromList, setFromList] = useState(netWork_text)\n  const [toList, setToList] = useState(netWork_text)\n  const [sending, setSending] = useState(false);\n  const [initialize, setInitialize] = useState(isdev ?\n    {\n      from_chainId: 97,\n      from_network: lang['bsc-testnet'],\n      to_chainId: 3,\n      to_network: lang['ropsten']\n    } : {\n      from_chainId: 1,\n      from_network: lang['ethereum'],\n      to_chainId: 56,\n      to_network: lang['bsc']\n    });\n  const [isClaim, setIsClaim] = useState(false);\n  const [dropdownList_from, setDropdownList_from] = useState(false);\n  const [dropdownList_to, setDropdownList_to] = useState(false);\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\n  const [isWalletConnected, setIsWalletConnected] = useState(\n    {\n      isFromConnected: false,\n      isToConnected: false\n    }\n  );\n  const isConnected = () => {\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\n    let obj = {\n      isFromConnected: isFromConnected,\n      isToConnected: isToConnected\n    }\n    setIsWalletConnected(obj)\n  }\n\n  const showListFrom = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_from(!dropdownList_from)\n  }\n  const showListTo = () => {\n    if (sending) {\n      return;\n    }\n    setDropdownList_to(!dropdownList_to)\n  }\n\n  const getValid = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\n      if (res.valid) {\n        setInitialize({\n          from_chainId: res.fromChainId,\n          from_network: isNetwork(res.fromChainId, lang).netWork,\n          to_chainId: res.toChainId,\n          to_network: isNetwork(res.toChainId, lang).netWork,\n        })\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\n        setTo_img(isNetwork(res.toChainId, lang).img)\n        setAmount(bg(res.amount, -18).toString())\n        setSending(res.valid)\n      }\n    }\n  }\n\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n\n  useEffect(() => {\n    getBalance()\n  }, [wallet.detail, initialize]);\n\n  useEffect(() => {\n    getValid()\n  }, [wallet.detail])\n\n  const select_from = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.to_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.from_chainId = obj.id;\n      Init.from_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_from(!dropdownList_from)\n  }\n  const select_to = obj => {\n    let Init = JSON.parse(JSON.stringify(initialize));\n    if (Init.from_chainId === obj.id) {\n      Init.from_chainId = initialize.to_chainId;\n      Init.from_network = initialize.to_network;\n      Init.to_chainId = initialize.from_chainId;\n      Init.to_network = initialize.from_network;\n    } else {\n      Init.to_chainId = obj.id;\n      Init.to_network = obj.text;\n    }\n    setInitialize(Init)\n    setDropdownList_to(!dropdownList_to)\n\n  }\n\n  useEffect(() => {\n    let from_arr;\n    let to_arr;\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\n    from_arr = [from_one, from_two, from_three]\n    to_arr = [to_one, to_two, to_three]\n    setFromList(from_arr)\n    setToList(to_arr)\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\n    isConnected()\n\n  }, [initialize,wallet.detail])\n\n  const getAmount = (value) => {\n    setAmount(value)\n  }\n\n  return (\n    <div className='bridge-big-box'>\n      <div className='bridge-box'>\n        <div className='bridge-title'>\n          <div className='title'>\n            {lang['bridge']}\n          </div>\n          <div className='birdge-des'>\n            {lang['bridge-des']}\n          </div>\n        </div>\n        <div className='bridge-info'>\n          <div className='select-network-box'>\n            <div className='select-network-title'>\n              {lang['select-networks']}\n            </div>\n            <div className='select-network-from-to'>\n              <div className='from-network'>\n                <div className='from-title'>\n                  {lang['from']}\n                </div>\n                <div className='from-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\n                    <div className='network-logo-connected'>\n                      <img src={From_img} alt='' />\n                      <span>{initialize.from_network}</span>\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\n                  </div>\n                  <ul className={selectListClassFrom}>\n                    <li className='wallet-li' onClick={() => select_from(fromList[0])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[0].img} /> <span> {fromList[0].text} </span>\n                      </div>\n                      <div className='up-icon-btn' onClick={() => { showListFrom() }}>\n                        <img alt='' src={down} className='up-icon' />\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_from(fromList[1])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[1].img} /> <span> {fromList[1].text} </span>\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_from(fromList[2])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={fromList[2].img} /> <span> {fromList[2].text} </span>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div className='arrow'>\n                <img src={arrow} alt='' />\n              </div>\n              <div className='to-network'>\n                <div className='to-title'>\n                  {lang['to']}\n                </div>\n                <div className='to-dropdown-list'>\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\n                    <div className='network-logo-connected'>\n                      <img src={To_img} alt='' />\n                      <span>{initialize.to_network}</span>\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\n                      </div>\n                    </div>\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\n                  </div>\n                  <ul className={selectListClassTo}>\n                    <li className='wallet-li' onClick={() => select_to(toList[0])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[0].img} /> <span> {toList[0].text} </span>\n                      </div>\n                      <div className='up-icon-btn' onClick={() => { showListTo() }}>\n                        <img alt='' src={down} className='up-icon' />\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_to(toList[1])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[1].img} /> <span> {toList[1].text} </span>\n                      </div>\n                    </li>\n                    <li className='wallet-li' onClick={() => select_to(toList[2])}>\n                      <div className='li-logo-network'>\n                        <img alt='' src={toList[2].img} /> <span> {toList[2].text} </span>\n                      </div>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='set-amount'>\n            <div className='set-amount-title'>\n              {lang['set-amount']}\n            </div>\n            <div className='set-amount-box'>\n              <div className='input-deri'>\n                <Input value={amount} onChange={getAmount} disabled={sending} className='input-box' />\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\n              </div>\n              <div className='total-deri'>\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true}  /> DERI\n              </div>\n            </div>\n          </div>\n          <div className='bridge-operate-hint'>\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\n          </div>\n          <div className='bridge-to-polygon'>\n            <div>\n              <div className='birdge-to-polygon-title'>\n                {lang['bridge-to-polygon']} <span className='polygon-title'>\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'>Polygon</a>\n                </span>\n              </div>\n              <div className='bridge-to-polygon-des'>\n                {lang['bridge-to-polygon-des']}\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nfunction isNetwork(chainId, lang) {\n  chainId = +chainId\n  let obj = {}\n  switch (chainId) {\n    case 1:\n      obj.netWork = lang[\"ethereum\"];\n      obj.chainId = 1;\n      obj.img = ETH;\n      break;\n    case 56:\n      obj.netWork = lang[\"bsc\"];\n      obj.chainId = 56;\n      obj.img = BSC;\n      break;\n    case 128:\n      obj.netWork = lang[\"heco\"];\n      obj.chainId = 128;\n      obj.img = HECO;\n      break;\n    case 97:\n      obj.netWork = lang[\"bsc-testnet\"];\n      obj.chainId = 97;\n      obj.img = BSC;\n      break;\n    case 3:\n      obj.netWork = lang[\"ropsten\"];\n      obj.chainId = 3;\n      obj.img = ETH;\n      break;\n    case 256:\n      obj.netWork = lang[\"heco-testnet\"];\n      obj.chainId = 256;\n      obj.img = HECO;\n      break;\n    default:\n      break;\n  }\n  return obj;\n}\nexport default inject('wallet')(observer(Bridge))","import React,{useState,useEffect,useRef} from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toPlainString,countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\n\n\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const ref = useRef()\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN') \n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,defaultValue = '--',...others} = props \n    if(isValidate()) {\n      if(others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\n        console.log(others.value)\n        others.decimalScale = countDecimal(others.value) + 1\n      }\n      others.value = toPlainString(others.value)\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n      setFirstTime(false)\n    } else if(firstTime){\n      setRenderablity(<span className='loading-line' style={{width:props.width,height : props.height}}></span>)\n    } \n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if(!isValidate()){\n        setRenderablity(defaultValue)\n      }\n    },30000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value,props.decimalScale]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport { bg } from '../../lib/web3js';\n\nconst Wrapper = styled.div`\ndisplay : flex;\nfont-size : 14px;\nalign-items : center;\nbackground: rgba(85, 119, 253, 0.1);\nborder-radius: 4px;\njustify-content: space-between;\ninput {\n  background: transparent;\n  border-radius: 4px;\n  // min-width: 240px;\n  border: 0;\n  width : ${props => props.inputWidth};\n  height: 56px;\n  color : #E0ECFF;\n  font-size : 18px;\n  padding-left: 16px;\n}\ninput:focus {\n  outline: none;\n}\n.unit {\n  margin-right: ${props => props.unitPadding};\n}\n`\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',className,disabled = false}){\n  const inputRef = useRef(null);\n  const change = e => {\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\n    const reg = new RegExp(regStr)\n    const {value} = e.target\n    if(max && bg(value).gt(max)){    \n      onChange && onChange(max)\n    } else if(value < 0 || isNaN(value)) {\n      onChange && onChange('')\n    } else if(value){\n      if(minTradeVolume >= 1) {\n        if(value / minTradeVolume >=1) {\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \n        } else {\n          const validValue = value * minTradeVolume\n          onChange && onChange(validValue) \n        }\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\n        onChange && onChange(filter)\n      } else {\n        onChange && onChange(value)\n      }\n    } else {\n      onChange && onChange(value)\n    }\n  }\n\n  useEffect(()=>{\n    inputRef.current.setCustomValidity('')\n    if(inputRef.current && focus){\n      inputRef.current.focus();\n    }\n  },[focus])\n\n\n  return (\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\n      <input type='number' disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\n      <div className='unit'>{unit}</div>\n    </Wrapper>    \n  )\n}"],"sourceRoot":""}