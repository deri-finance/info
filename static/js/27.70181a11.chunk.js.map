{"version":3,"sources":["pages/Faucet/Faucet.js"],"names":["inject","observer","wallet","lang","alert","useAlert","className","token","map","item","index","width","height","fontWeight","label","onClick","async","isConnected","param","detail","chainId","account","res","apiProxy","request","includeResponse","success","error","mint","rel","target","href"],"mappings":"2IAAA,2EAiGeA,sBAAO,SAAPA,CAAiBC,aA1FhC,UAAgB,OAAEC,EAAF,KAAUC,IACxB,MAAMC,EAAQC,cAqDd,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACGH,EAAK,0BAER,qBAAKG,UAAU,aAAf,SA1Da,CACjB,CACEC,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,SAET,CACEA,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,QAwBSC,KAAI,CAACC,EAAMC,IAEnB,sBAAKJ,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAMC,MAAOE,EAAKF,MAAOI,MAAO,GAAIC,OAAQ,OAE9C,qBAAKN,UAAU,aAAf,SACGG,EAAKF,QAER,qBAAKD,UAAU,eAAf,SACE,cAAC,IAAD,CAAQO,WAAY,IAAKC,MAAOX,EAAI,KAAUQ,MAAO,GAAIC,OAAQ,GAAIG,QAAS,IA/BjFC,WACX,GAAId,EAAOe,cAAe,CACxB,IAAIC,EAAQ,CAAChB,EAAOiB,OAAOC,QAAQlB,EAAOiB,OAAOE,QAASd,GACtDe,QAAYC,IAASC,QAAQ,cAAeN,EAAO,CAAEO,iBAAiB,IACtEH,GAAQA,EAAII,QAGdtB,EAAMsB,QAAQ,gBAFdtB,EAAMuB,MAAM,kBAKdvB,EAAMuB,MAAM,0BAqBoFC,CAAKnB,EAAKF,aAR7DG,OAc3C,sBAAKJ,UAAU,WAAf,UACE,8BAAMH,EAAK,mBACX,qBAAKG,UAAU,aAAf,SACE,mBAAGuB,IAAI,aAAaC,OAAO,SAASC,KAAK,2CAAzC","file":"static/js/27.70181a11.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Icon from '../../components/Icon/Icon'\r\nimport Button from '../../components/Button/Button'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport { useAlert } from 'react-alert'\r\nimport './faucet.less'\r\nimport { inject, observer } from 'mobx-react'\r\nfunction Faucet({ wallet, lang }) {\r\n  const alert = useAlert();\r\n  const tonkenList = [\r\n    {\r\n      token: 'BUSD'\r\n    },\r\n    {\r\n      token: 'SXP'\r\n    },\r\n    {\r\n      token: 'ETH'\r\n    },\r\n    {\r\n      token: 'LTC'\r\n    },\r\n    {\r\n      token: 'XRP'\r\n    },\r\n    {\r\n      token: 'BTCB'\r\n    },\r\n    {\r\n      token: 'ADA'\r\n    },\r\n    {\r\n      token: 'CAKE'\r\n    },\r\n    {\r\n      token: 'MATIC'\r\n    },\r\n    {\r\n      token: 'AAVE'\r\n    },\r\n    {\r\n      token: 'TUSD'\r\n    },\r\n    {\r\n      token: 'TRX'\r\n    },\r\n  ]\r\n  const mint = async (token) => {\r\n    if (wallet.isConnected()) {\r\n      let param = [wallet.detail.chainId,wallet.detail.account, token]\r\n      let res = await apiProxy.request('mintTokenV3', param, { includeResponse: true })\r\n      if(!res || !res.success){\r\n        alert.error('mint fail')\r\n      }else{\r\n        alert.success('mint success')\r\n      }\r\n    }else{\r\n      alert.error('Please connect wallet')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <div className='testnet-faucet'>\r\n      <div className='faucet-info'>\r\n        <div className='faucet-title'>\r\n          {lang['obtain-testnet-token']}\r\n        </div>\r\n        <div className='mint-token'>\r\n          {tonkenList.map((item, index) => {\r\n            return (\r\n              <div className='mint-token-box' key={index}>\r\n                <div className='token-logo'>\r\n                  <Icon token={item.token} width={60} height={60} />\r\n                </div>\r\n                <div className='token-name'>\r\n                  {item.token}\r\n                </div>\r\n                <div className='token-button'>\r\n                  <Button fontWeight={300} label={lang['mint']} width={88} height={31} onClick={() => mint(item.token)} />\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n        <div className='mint-bnb'>\r\n          <div>{lang['go-to-min-bnb']}</div>\r\n          <div className='bnb-button'>\r\n            <a rel='norelerror' target='_blank' href='https://testnet.binance.org/faucet-smart'>\r\n              BNB\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default inject('wallet')(observer(Faucet))"],"sourceRoot":""}