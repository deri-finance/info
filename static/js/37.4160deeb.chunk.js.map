{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","history","useHistory","isController","setIsController","useParams","version","chainId","symbol","baseToken","address","type","query","useQuery","networkText","name","props","url","has","isPoolAdmin","a","isPoolController","detail","account","catch","e","console","log","res","openConfigList","openConfigListCache","update","useEffect","poolInfoClass","classnames","className","onClick","push","goToMining"],"mappings":"2UAaOA,EAAaC,EADRC,IAAQC,OACbH,UAoEQI,sBAAO,SAAPA,CAAiBC,aAlEhC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KAAM,EACMC,mBAAS,aADf,mBACtBC,EADsB,KACXC,EADW,KAEvBC,EAAUC,uBAFa,EAGUJ,oBAAS,GAHnB,mBAGtBK,EAHsB,KAGTC,EAHS,OAI4BC,sBAAlDC,EAJsB,EAItBA,QAAQC,EAJc,EAIdA,QAAQC,EAJM,EAINA,OAAOC,EAJD,EAICA,UAAUC,EAJX,EAIWA,QAAQC,EAJnB,EAImBA,KAC1CC,EAAQC,cACRC,EAAcxB,EAAUiB,IAAYjB,EAAUiB,GAASQ,KACvDC,EAAQ,CAACV,UAAQC,UAAQC,SAAOC,YAAUC,UAAQd,SAAOe,OAAKd,QAC9DoB,EAAG,qBAAiBX,GAAW,KAA5B,YAAoCC,EAApC,YAA+CI,EAA/C,YAAuDH,EAAvD,YAAiEC,EAAjE,YAA8EC,GACpFE,EAAMM,IAAI,iBACZF,EAAK,YAAkBJ,EAAMnB,IAAI,gBAE/BmB,EAAMM,IAAI,cACZF,EAAK,SAAeJ,EAAMnB,IAAI,aAE/B,IAEM0B,EAAW,uCAAG,4BAAAC,EAAA,sEACHC,YAAiBzB,EAAO0B,OAAOf,QAAQG,EAAQd,EAAO0B,OAAOC,SAASC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAD1F,OACfG,EADe,OAEnBxB,EAAgBwB,GAFG,2CAAH,qDAKXC,EAAc,uCAAG,sBAAAT,EAAA,sEAChBU,KAAoBC,SADJ,2CAAH,qDAQpBC,qBAAU,WAfqBpC,GAAUA,EAAO0B,QAAU1B,EAAO0B,OAAOC,SAiBvD,iBAAZjB,IACFa,IACAU,OAGD,CAACjC,EAAOA,EAAO0B,OAAOZ,IAExB,IAAMuB,EAAgBC,IAAW,cAAcnC,EAAW,CAAC,YAA0B,iBAAZO,IACzE,OACG,sBAAK6B,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATxB,GAAgE,OAAZL,GAAgC,YAAZA,GAAqC,iBAAZA,GAA0C,WAAZA,EAA/H,UAAmBG,EAAnB,cAAkCK,GAAiB,UAAyIN,EAAzI,YAAmJC,EAAnJ,cAAkKK,KAE1M,iBAAZR,GAA8B,qBAAK6B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMpC,EAAc,cAA/D,SACGH,EAAK,2BAIZ,qBAAKsC,UAAU,YAAf,SACE,cAAC,IAAD,eAAqBnB,MAErBb,GAA4B,iBAAZG,GAA+B,mCAChD,qBAAK6B,UAAU,aAAf,SACC,wBAAQC,QAAS,kBA/BF,SAACnB,GACnBhB,EAAQoC,KAAKpB,GA8BaqB,CAAWrB,IAAlC,SACEpB,EAAK","file":"static/js/37.4160deeb.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\nimport {useParams,useHistory} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport './mining.less'\nimport './zh-mining.less'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst history = useHistory();\n\tconst [isController,setIsController] = useState(false)\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\n\tconst url = `/addsymbol/${version || 'v1'}/${chainId}/${type}/${symbol}/${baseToken}/${address}`\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n\tconst isPoolAdmin = async () => {\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account).catch(e => console.log(e))\n\t\tsetIsController(res)\n\t}\n\n\tconst openConfigList = async ()=>{\n\t\tawait openConfigListCache.update()\n\t}\n\n\tconst goToMining = (url)=>{\n\t\thistory.push(url)\n\t}\n\n\tuseEffect(()=>{\n\t\tif(hasConnectWallet()){\n\t\t\tif(version === 'v2_lite_open'){\n\t\t\t\tisPoolAdmin()\n\t\t\t\topenConfigList()\n\t\t\t}\n\t\t}\n\t},[wallet,wallet.detail,address])\n\n\tconst poolInfoClass = classnames('mining-info',currentTab,{'open-zone' : version === 'v2_lite_open'})\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  (version === 'v2' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\n\t\t\t\t\t</div>\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t\t{(isController && version === 'v2_lite_open') && <>\n\t\t\t\t<div className='add-symbol'>\n\t\t\t\t\t<button onClick={() => goToMining(url)} >\n\t\t\t\t\t\t{lang['add-symbol']}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>}\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}