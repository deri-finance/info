{"version":3,"sources":["desktop/pages/Info/List.js","utils/DeriNumberFormat.js","desktop/pages/Info/Table.js","desktop/pages/Info/Chart.js"],"names":["HEADERS","COLUMNS","GET_POOL_URL","process","columnFormat","catalog","data","className","toUpperCase","zone","indexOf","substring","length","address","formatAddress","liquidity","value","suffix","bToken","split","thousandSeparator","decimalScale","notional","inject","observer","loading","useState","allPoolData","setAllPoolData","history","useHistory","loadAllPoolData","a","axios","get","res","status","loaded","useEffect","title","url","seriesType","cycle","defaultCycle","Object","keys","map","chain","headers","columns","columnRenders","onRowClick","d","push","dataSet","DeriNumberFormat","props","renderablity","setRenderablity","allowZero","others","undefined","isNaN","Math","abs","displayType","pagination","setData","page","setPage","count","setCount","pageSize","loadData","restUrl","Array","isArray","floor","header","onClick","style","cursor","col","call","AreaSeries","chartRef","useRef","seriesChartRef","series","curValue","setCurValue","curDate","setCurDate","curCycle","setCurCycle","lastDataRef","crosshairMove","param","point","current","seriesPrices","forEach","item","time","year","month","day","addAreaSeries","chart","areaSeries","priceLineVisible","lastValueVisible","topColor","bottomColor","lineColor","priceFormat","precision","minMove","sort","item1","item2","timestamp","dateFormat","Date","last","timeScale","fitContent","loadHistogramData","histogramSeries","Number","last_24h","addHistogramSeries","color","type","priceFormatter","price","priceScale","applyOptions","scaleMargins","top","bottom","rect","document","querySelector","getBoundingClientRect","createChart","localization","convertToInternationalCurrencySystem","locale","rightOffset","leftOffset","timeVisible","borderColor","borderVisible","width","height","position","mode","handleScroll","handleScale","crosshair","CrosshairMode","Normal","vertLine","labelVisible","visible","horzLine","grid","vertLines","horzLines","layout","backgroundColor","textColor","fontSize","initChart","subscribeCrosshairMove","unsubscribeCrosshairMove","removeSeries","remove","test","cycleSelect","ref"],"mappings":"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","file":"static/js/31.d7e03795.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './info.less'\nimport Table from './Table'\nimport axios from 'axios'\nimport { formatAddress } from '../../../utils/utils'\nimport DeriNumberFormat from '../../../utils/DeriNumberFormat'\nimport { useHistory } from 'react-router-dom'\nimport Chart from './Chart'\nimport { inject, observer } from 'mobx-react'\nconst HEADERS = ['ZONE','POOL','BASE TOKEN','POOL ADDRESS','LIQUIDITY','TRADE VOLUME']\nconst COLUMNS = ['zone','catalog','bToken','address','liquidity','notional']\n\nconst GET_POOL_URL=`${process.env.REACT_APP_INFO_HTTP_URL}/get_pools`\n\nconst columnFormat = {\n  catalog : data => <span className='catalog'>{data.catalog.toUpperCase()}</span>,\n  zone : data => data.catalog.indexOf('-') > 0 ? data.catalog.substring(data.catalog.indexOf('-') + 1,data.catalog.length).toUpperCase() : '',\n  address : data => formatAddress(data.address),\n  liquidity : data => <DeriNumberFormat value={data.liquidity}  suffix={` ${data.bToken.split('|')[0]}`}  thousandSeparator={true} decimalScale={2}/>,  \n  notional : data =>  <DeriNumberFormat value={data.notional} suffix={` ${data.bToken.split('|')[0]}`}  thousandSeparator={true} decimalScale={2}/> ,\n}\nfunction List({loading}){\n  const [allPoolData, setAllPoolData] = useState({})\n  const history = useHistory()\n  const loadAllPoolData = async () => {\n    loading.loading();\n    const res = await axios.get(GET_POOL_URL);\n    if(res.status === 200 && res.data.data){\n      setAllPoolData(res.data.data)\n    }\n    loading.loaded();\n  }\n\n  const onRowClick = d => {\n    history.push(`/info/${d.address}/${d.catalog}/${d.bToken}/${d.chain}`)\n  }\n\n  useEffect(() => {\n    loadAllPoolData();\n    \n  }, [])\n\n\n  return(\n    <div className='info'>\n      <div className='title'>Deri Overview</div>\n      <div className='chart-box'>\n        <div className='chart'><Chart title='TVL' url = {`${process.env.REACT_APP_INFO_HTTP_URL}/get_liquidity_history`} seriesType='area'/> </div>\n        <div className='chart'><Chart title='Volume 24H' url = {`${process.env.REACT_APP_INFO_HTTP_URL}/get_trade_history`} seriesType='histogram' cycle={['W','M']} defaultCycle='M'/> </div>\n      </div>\n      <div className='table-by-network'>\n        {Object.keys(allPoolData).map(chain => <Table title={chain} headers={HEADERS} columns={COLUMNS} columnRenders={columnFormat} onRowClick={d => onRowClick(d)} dataSet={allPoolData[chain]}/>)}\n      </div>\n    </div>\n  )\n}\nexport default inject('loading')(observer(List))","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { inject, observer } from 'mobx-react'\n\nfunction Table({title,dataSet,url,headers,columns,columnRenders = {},pagination,loading,onRowClick}){\n  const [data, setData] = useState([])\n  const [page, setPage] = useState(1)\n  const [count, setCount] = useState()\n  const [pageSize, setPageSize] = useState(10)\n\n  const loadData = async (url,page) => {\n    let restUrl = url;\n    if(pagination){\n      restUrl = `${restUrl}&page=${page}&page_amount=${pageSize}`\n    }\n    loading.loading()\n    const res = await axios.get(restUrl);\n    if(res.status === 200 && Array.isArray(res.data.data)){\n      setCount(res.data.count / pageSize)\n      if(res.data.count % pageSize > 0 ){\n        setCount(Math.floor(res.data.count / pageSize) +1)\n      }\n      setData(res.data.data)\n      setPage(page)\n      loading.loaded()\n    }\n  }\n\n  const prePage = () => {\n    if(page === 1){\n      return;\n    }\n    loadData(url,page - 1)\n  }\n  const nextPage = () => {\n    if(page === count){\n      return;\n    }\n\n    loadData(url,page +1)\n  }\n\n  useEffect(() => {\n    if(dataSet){\n      setData(dataSet)\n    } else {\n      loadData(url,1);\n    }\n  }, [url])\n  return(\n    <div className='info-table'>\n      <div className='t-title'>{title}</div>\n      <div className='tbody'>\n        <div className='theader'>\n          {headers.map(header => <div className='col'>{header}</div>)}\n        </div>\n        {data.length > 0 ? data.map(d => (\n          <div className='row' onClick={() => onRowClick && onRowClick(d)} style={{cursor : onRowClick ? 'pointer' : 'normal'}}>\n            {columns.map(col => <div className='col'>{columnRenders[col] ? columnRenders[col].call(null,d) :d[col]}</div>)}\n          </div>))\n          :\n          <div className='row'><div className='col no-data'>No Data</div></div>\n          }\n         \n\n        {pagination && data.length > 0 && <div className='pagination row'>\n          <span className='arrow' onClick={prePage}> &lt; </span><span>Page {page} of {count}</span><span className='arrow' onClick={nextPage}> &gt; </span>\n        </div>}\n      </div>\n    </div>\n  )\n}\nexport default inject('loading')(observer(Table))","import { useRef,useEffect,useState } from \"react\"\nimport { createChart, CrosshairMode } from \"lightweight-charts\";\nimport axios from \"axios\";\nimport dateFormat from 'dateformat'\nimport { convertToInternationalCurrencySystem } from \"../../../utils/utils\";\n\nexport default function AreaSeries({title,url,seriesType,cycle,defaultCycle}){\n  const chartRef = useRef(null);\n  const seriesChartRef = useRef(null);\n  const series = useRef(null)\n  const [curValue, setCurValue] = useState('')\n  const [curDate, setCurDate] = useState('')\n  const [curCycle, setCurCycle] = useState(defaultCycle)\n  const lastDataRef = useRef()\n\n\n  const initChart = () => {\n    const rect = document.querySelector('.info-chart').getBoundingClientRect()\n    const chart = createChart(chartRef.current, { \n      localization : {\n        priceFormatter: price => '$ ' + convertToInternationalCurrencySystem(price),\n        locale: 'en-US'\n      },\n      timeScale: {\n        rightOffset : 0,\n        leftOffset : 5,\n        timeVisible : true,\n        borderColor : '#fff',\n        borderVisible :  false\n      },\n      width: rect.width,\n      height: rect.height,\n      priceScale: {\n        position: 'none',\n        borderColor: '#fff',\n        borderVisible : false,\n        mode: 0,\n        scaleMargins: {\n          top: 0.35\n        },\n      },\n\n      handleScroll: false,\n      handleScale: false,\n      crosshair: {\n        mode: CrosshairMode.Normal,  \n        vertLine: {\n          labelVisible : false,  \n          visible : false\n        },\n        horzLine: {\n          labelVisible : false,  \n          visible : false\n        },\n      },\n      grid: {\n        vertLines: {\n          visible: false,\n        },\n        horzLines: {\n          visible: false,\n        },\n      },\n      layout: {\n        backgroundColor: '#212327',\n        textColor: '#fff',\n        fontSize: 12\n      },\n    });\n    seriesChartRef.current = chart\n    return chart;\n  }\n\n  const crosshairMove = param => {\n      if (!param.point) {\n        setCurDate('')\n        if(lastDataRef.current){\n          setCurValue(lastDataRef.current)\n        }\n        return;\n      }\n      param.seriesPrices.forEach(item => {\n        if(item){\n          setCurValue(item)\n        }\n      })\n      param.time && setCurDate(`${param.time.year}-${param.time.month}-${param.time.day} (UTC)`)\n  }\n\n  const addAreaSeries = async(chart) => {\n    const areaSeries = chart.addAreaSeries({\n      priceLineVisible : false,\n      lastValueVisible: false,\n      topColor: 'RGBA(0,101,159,.5)',\n      bottomColor: 'RGBA(0,101,159,0)',\n      lineColor: 'RGB(0,101,159)',\n      priceFormat: {        \n        precision: 1,\n        minMove : '1000',\n      }\n    })\n  \n    \n    const res = await axios.get(url)\n    if(res.status === 200 && Array.isArray(res.data.data)){\n      let data = res.data.data.sort((item1,item2) => {\n        if(item1.timestamp > item2.timestamp) {\n          return 1\n        } else if(item1.timestamp < item2.timestamp){\n          return -1\n        } else {\n          return 0\n        }\n      })\n      data = data.map(d => ({time : dateFormat(new Date(d.timestamp * 1000),'yyyy-mm-dd'),value : d.value}))\n      areaSeries.setData(data)\n      const last = data[data.length -1].value\n      setCurValue(last)\n      lastDataRef.current = last\n    }\n    series.current = areaSeries\n    chart.timeScale().fitContent();\n    return areaSeries;\n  }\n\n  const loadHistogramData = async (url,histogramSeries) => {\n    const res = await axios.get(url)\n    if(res.status === 200 && Array.isArray(res.data.data)){\n      const data = res.data.data.sort((item1,item2) => {\n        if(item1.timestamp > item2.timestamp) {\n          return 1\n        } else if(item1.timestamp < item2.timestamp){\n          return -1\n        } else {\n          return 0\n        }\n      }).map(d => ({time : dateFormat(new Date(d.timestamp * 1000),'yyyy-mm-dd'),value : Number(d.value)}))\n      const last = res.data.last_24h ? res.data.last_24h : res.data[data.length -1].value\n      histogramSeries.setData(data)\n      setCurValue(last)\n      lastDataRef.current = last\n      seriesChartRef.current && seriesChartRef.current.timeScale().fitContent();\n    }\n  }\n\n  const addHistogramSeries = async (chart) => {\n    const histogramSeries = chart.addHistogramSeries({\n      color: '#00659F',\n      priceLineVisible : false,\n      lastValueVisible: false,\n      priceFormat: {\n        type: \"volume\",\n        priceFormatter: price => '$ ' + price\n      }\n    })\n    histogramSeries.priceScale().applyOptions({\n      scaleMargins: {\n        top: 0.25,\n        bottom: 0,\n      },\n    });    \n    loadHistogramData(url,histogramSeries)\n    series.current = histogramSeries\n    return histogramSeries;\n  }\n\n  const cycleSelect = cycle => {\n    setCurCycle(cycle)\n    url = /\\?/.test(url) ? `${url}&cycle=${cycle}` : `${url}?cycle=${cycle}`\n    loadHistogramData(url,series.current)\n  }\n\n  useEffect(() => {\n    const chart = initChart();\n    if(seriesType === 'area'){\n      addAreaSeries(chart)\n    }\n    if(seriesType === 'histogram'){\n      addHistogramSeries(chart)\n    }\n    chart.subscribeCrosshairMove(crosshairMove);\n    return () => {\n      if(chart){\n        chart.unsubscribeCrosshairMove(crosshairMove)\n        if(series.current){\n          chart.removeSeries(series.current);\n        }\n        chart.remove();\n      }\n    }\n  }, [url,seriesType])\n\n  return(\n    <div className='info-chart'>\n      <div className='chart-title'>\n        <div className='title-label'>{title}</div>\n        <div className='title-value'>{curValue ? `$${convertToInternationalCurrencySystem(curValue)}` : ''} </div>\n        <div className='title-date'>{curDate} </div>\n      </div>\n      {cycle && <div className='cycle-c'>\n        {cycle.map(item => <div className={`cycle-item ${item === curCycle && 'selected'}`}  onClick={() => cycleSelect(item)}>{item}</div>)}\n      </div>}\n      <div className='series' ref={chartRef}></div>\n    </div>\n  )\n}\n"],"sourceRoot":""}