{"version":3,"sources":["pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/pending.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js","utils/DeriNumberFormat.js","components/Input/Input.js"],"names":["Spinner","class","Operate","lang","wallet","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","useState","isApprove","setIsApprove","isValid","setIsValid","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","type","PRIMARY","className","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","window","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","useEffect","stageThree","element","onClick","alt","src","succeed","toLowerCase","from_network","to_network","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","text","id","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","showListFrom","showListTo","getValid","fromChainId","bg","toString","getBalance","select_from","Init","JSON","parse","stringify","select_to","to_arr","from_one","filter","p","from_two","from_three","disabledDown","down","arrow","Input","value","onChange","disabled","deriLogo","DeriNumberFormat","decimalScale","thousandSeparator","rel","target","href","Wrapper","styled","NumberFormat","props","width","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","useRef","allowZero","undefined","isNaN","Math","abs","defaultValue","others","test","toFixed","countDecimal","toPlainString","displayType","fixedDecimalScale","style","height","timeout","setTimeout","clearTimeout","suffix","div","inputWidth","unitPadding","unit","max","step","styles","focus","minTradeVolume","decimal","readOnly","inputRef","current","setCustomValidity","ref","e","regStr","reg","RegExp","gt","integerValue","substring","indexOf"],"mappings":"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","file":"static/js/14.dd986096.chunk.js","sourcesContent":["import './spinner.less'\r\nexport default function Spinner() {\r\n  return (\r\n    <div class=\"sleepContentView\">\r\n      <div class=\"circle\">\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/stage-one.7a1f5b00.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.768445a6.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.ee3fc1c4.svg\";","export default __webpack_public_path__ + \"static/media/succeed.02ebda03.svg\";","export default __webpack_public_path__ + \"static/media/pending.8925603e.svg\";","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/Button/Button'\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { useAlert } from 'react-alert'\r\nimport Spinner from './Spinner'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport stageOne from './img/stage-one.svg'\r\nimport stageTwo from './img/stage-two.svg'\r\nimport stageThree from './img/stage-three.svg'\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport succeed from './img/succeed.svg'\r\nimport pending from './img/pending.svg'\r\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\r\n  const config = useConfig();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [bridgeState, setBridgeState] = useState({});\r\n  const [claimState, setClaimState] = useState({});\r\n  const [isClickClaim, setIsClickClaim] = useState(false);\r\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\r\n  const connect = () => {\r\n    wallet.connect()\r\n  }\r\n  const valid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        wallet.switchNetwork(config[res.toChainId])\r\n        setIsClaim(true)\r\n\r\n      }\r\n      setIsValid(res.valid)\r\n    }\r\n  }\r\n  const send = async () => {\r\n    if (amount === '' || amount === 0) {\r\n      alert.error(lang['amount-must-be-greater-than-zero'])\r\n      return;\r\n    }\r\n    if (+amount > balance) {\r\n      alert.error(lang['there-is-not-enough-amount'])\r\n      return;\r\n    }\r\n    if (!isWalletConnected.isFromConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setSending(true)\r\n    setBridgeState({\r\n      stageOne: false\r\n    })\r\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\r\n    if (res.success) {\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: false\r\n      })\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setSending(false)\r\n    }\r\n  }\r\n  const claim = async () => {\r\n    if (!isWalletConnected.isToConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setIsClickClaim(true)\r\n    setClaimState({\r\n      stageOne: false,\r\n    })\r\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: false,\r\n      })\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      alert.error(lang['claim-faild'])\r\n    }\r\n  }\r\n  const reset = ()=>{\r\n    history.push('/bridge')\r\n  }\r\n  const approve = async () => {\r\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setIsApprove(true);\r\n      loadApprove();\r\n    } else {\r\n      setIsApprove(false)\r\n      alert.error(lang['approve-faild'])\r\n    }\r\n  }\r\n  const loadApprove = async () => {\r\n    if (wallet.isConnected()) {\r\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\r\n      setIsApprove(result);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      loadApprove();\r\n      valid()\r\n    }\r\n  }, [wallet.detail, initialize]);\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n    } else if (isClickClaim) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n      setSending(false)\r\n      setAmount('')\r\n    } else {\r\n    }\r\n  }, [isValid, initialize]);\r\n  useEffect(() => {\r\n    let element;\r\n    if (wallet.isConnected()) {\r\n      if (isValid) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\r\n      } else if (!isApprove) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\r\n      } else if(isClickClaim){\r\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\r\n      }else {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\r\n      }\r\n    } else {\r\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\r\n    }\r\n    setActionElement(element)\r\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='from-to-title'>\r\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\r\n      </div>\r\n      <div className='btn'>\r\n        {actionElement}\r\n      </div>\r\n      <div className='hint'>\r\n        {!isClaim && <div className='sending'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!sending && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && <>\r\n                  {bridgeState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['bridge-signed']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\r\n                  {bridgeState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {isClaim && <div className='claiming'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!isClickClaim && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && <>\r\n                  {claimState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['finished']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && claimState.stageTwo && <>\r\n                  {claimState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}","export default __webpack_public_path__ + \"static/media/arrow-left.3530813d.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.3f7df0de.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\r\nimport Input from '../../components/Input/Input'\r\nimport Operate from './Operate'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport arrow from './img/arrow-left.svg'\r\nimport disabledDown from './img/disabled-down.svg'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport deriLogo from '../../assets/img/logo.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport down from '../../assets/img/arrow-down.svg'\r\nimport classNames from 'classnames' \r\nimport './bridge.less'\r\nfunction Bridge({ wallet, lang }) {\r\n  const [amount, setAmount] = useState(0);\r\n  const [balance, setBalance] = useState(0);\r\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\r\n  const netWork_text = isdev ?\r\n    [\r\n      {\r\n        text: lang['ropsten'],\r\n        id: 3,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc-testnet'],\r\n        id: 97,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco-testnet'],\r\n        id: 256,\r\n        img: HECO,\r\n      }\r\n    ]\r\n    : [\r\n\r\n      {\r\n        text: lang['ethereum'],\r\n        id: 1,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc'],\r\n        id: 56,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco'],\r\n        id: 128,\r\n        img: HECO,\r\n      }\r\n\r\n    ]\r\n\r\n  const [fromList, setFromList] = useState(netWork_text)\r\n  const [toList, setToList] = useState(netWork_text)\r\n  const [sending, setSending] = useState(false);\r\n  const [initialize, setInitialize] = useState(isdev ?\r\n    {\r\n      from_chainId: 97,\r\n      from_network: lang['bsc-testnet'],\r\n      to_chainId: 3,\r\n      to_network: lang['ropsten']\r\n    } : {\r\n      from_chainId: 1,\r\n      from_network: lang['ethereum'],\r\n      to_chainId: 56,\r\n      to_network: lang['bsc']\r\n    });\r\n  const [isClaim, setIsClaim] = useState(false);\r\n  const [dropdownList_from, setDropdownList_from] = useState(false);\r\n  const [dropdownList_to, setDropdownList_to] = useState(false);\r\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\r\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\r\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\r\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\r\n  const [isWalletConnected, setIsWalletConnected] = useState(\r\n    {\r\n      isFromConnected: false,\r\n      isToConnected: false\r\n    }\r\n  );\r\n  const isConnected = () => {\r\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\r\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\r\n    let obj = {\r\n      isFromConnected: isFromConnected,\r\n      isToConnected: isToConnected\r\n    }\r\n    setIsWalletConnected(obj)\r\n  }\r\n\r\n  const showListFrom = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const showListTo = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_to(!dropdownList_to)\r\n  }\r\n\r\n  const getValid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        setInitialize({\r\n          from_chainId: res.fromChainId,\r\n          from_network: isNetwork(res.fromChainId, lang).netWork,\r\n          to_chainId: res.toChainId,\r\n          to_network: isNetwork(res.toChainId, lang).netWork,\r\n        })\r\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\r\n        setTo_img(isNetwork(res.toChainId, lang).img)\r\n        setAmount(bg(res.amount, -18).toString())\r\n        setSending(res.valid)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n  }, [wallet.detail, initialize]);\r\n\r\n  useEffect(() => {\r\n    getValid()\r\n  }, [wallet.detail])\r\n\r\n  const select_from = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.to_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.from_chainId = obj.id;\r\n      Init.from_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const select_to = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.from_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.to_chainId = obj.id;\r\n      Init.to_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_to(!dropdownList_to)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let from_arr;\r\n    let to_arr;\r\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\r\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\r\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\r\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\r\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\r\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\r\n    from_arr = [from_one, from_two, from_three]\r\n    to_arr = [to_one, to_two, to_three]\r\n    setFromList(from_arr)\r\n    setToList(to_arr)\r\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\r\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\r\n    isConnected()\r\n\r\n  }, [initialize,wallet.detail])\r\n\r\n  const getAmount = (value) => {\r\n    setAmount(value)\r\n  }\r\n\r\n  return (\r\n    <div className='bridge-big-box'>\r\n      <div className='bridge-box'>\r\n        <div className='bridge-title'>\r\n          <div className='title'>\r\n            {lang['bridge']}\r\n          </div>\r\n          <div className='birdge-des'>\r\n            {lang['bridge-des']}\r\n          </div>\r\n        </div>\r\n        <div className='bridge-info'>\r\n          <div className='select-network-box'>\r\n            <div className='select-network-title'>\r\n              {lang['select-networks']}\r\n            </div>\r\n            <div className='select-network-from-to'>\r\n              <div className='from-network'>\r\n                <div className='from-title'>\r\n                  {lang['from']}\r\n                </div>\r\n                <div className='from-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={From_img} alt='' />\r\n                      <span>{initialize.from_network}</span>\r\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\r\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassFrom}>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[0])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[0].img} /> <span> {fromList[0].text} </span>\r\n                      </div>\r\n                      <div className='up-icon-btn' onClick={() => { showListFrom() }}>\r\n                        <img alt='' src={down} className='up-icon' />\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[1])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[1].img} /> <span> {fromList[1].text} </span>\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_from(fromList[2])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={fromList[2].img} /> <span> {fromList[2].text} </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='arrow'>\r\n                <img src={arrow} alt='' />\r\n              </div>\r\n              <div className='to-network'>\r\n                <div className='to-title'>\r\n                  {lang['to']}\r\n                </div>\r\n                <div className='to-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={To_img} alt='' />\r\n                      <span>{initialize.to_network}</span>\r\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\r\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassTo}>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[0])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[0].img} /> <span> {toList[0].text} </span>\r\n                      </div>\r\n                      <div className='up-icon-btn' onClick={() => { showListTo() }}>\r\n                        <img alt='' src={down} className='up-icon' />\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[1])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[1].img} /> <span> {toList[1].text} </span>\r\n                      </div>\r\n                    </li>\r\n                    <li className='wallet-li' onClick={() => select_to(toList[2])}>\r\n                      <div className='li-logo-network'>\r\n                        <img alt='' src={toList[2].img} /> <span> {toList[2].text} </span>\r\n                      </div>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='set-amount'>\r\n            <div className='set-amount-title'>\r\n              {lang['set-amount']}\r\n            </div>\r\n            <div className='set-amount-box'>\r\n              <div className='input-deri'>\r\n                <Input value={amount} onChange={getAmount} disabled={sending} className='input-box' />\r\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\r\n              </div>\r\n              <div className='total-deri'>\r\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true}  /> DERI\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='bridge-operate-hint'>\r\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\r\n          </div>\r\n          <div className='bridge-to-polygon'>\r\n            <div>\r\n              <div className='birdge-to-polygon-title'>\r\n                {lang['bridge-to-polygon']} <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'>Polygon</a>\r\n                </span>\r\n              </div>\r\n              <div className='bridge-to-polygon-des'>\r\n                {lang['bridge-to-polygon-des']}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}\r\nexport default inject('wallet')(observer(Bridge))","import React,{useState,useEffect,useRef} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toPlainString,countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\n\r\n\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const ref = useRef()\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN') \r\n          || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,defaultValue = '--',...others} = props \r\n    if(isValidate()) {\r\n      if(others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\r\n        others.decimalScale = countDecimal(others.value) + 1\r\n      }\r\n      others.value = toPlainString(others.value)\r\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n      setFirstTime(false)\r\n    } else if(firstTime){\r\n      setRenderablity(<span className='loading-line' style={{width:props.width,height : props.height}}></span>)\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if(!isValidate()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },30000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value,props.decimalScale,props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: 56px;\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,max,step,onChange,styles = {},focus,unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',className,disabled = false}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\r\n    const reg = new RegExp(regStr)\r\n    const {value} = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(value < 0 || isNaN(value)) {\r\n      onChange && onChange('')\r\n    } else if(value){\r\n      if(minTradeVolume >= 1) {\r\n        if(value / minTradeVolume >=1) {\r\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \r\n        } else {\r\n          const validValue = value * minTradeVolume\r\n          onChange && onChange(validValue) \r\n        }\r\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\r\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\r\n        onChange && onChange(filter)\r\n      } else {\r\n        onChange && onChange(value)\r\n      }\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    inputRef.current.setCustomValidity('')\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\r\n      <input type='number' disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}"],"sourceRoot":""}