{"version":3,"sources":["desktop/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","history","useHistory","isController","setIsController","useParams","version","chainId","symbol","baseToken","address","type","query","useQuery","networkText","name","props","url","has","isPoolAdmin","a","isPoolController","detail","account","catch","e","console","log","res","openConfigList","openConfigListCache","update","useEffect","poolInfoClass","classnames","className","onClick","push","goToMining"],"mappings":"2UAaOA,EAAaC,EADRC,IAAQC,OACbH,UAoEQI,sBAAO,SAAPA,CAAiBC,aAlEhC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KACvB,EAAmCC,mBAAS,aAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,uBAChB,EAAuCJ,oBAAS,GAAhD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAAyDC,sBAAlDC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,QAAQC,EAAvB,EAAuBA,OAAOC,EAA9B,EAA8BA,UAAUC,EAAxC,EAAwCA,QAAQC,EAAhD,EAAgDA,KAC1CC,EAAQC,cACRC,EAAcxB,EAAUiB,IAAYjB,EAAUiB,GAASQ,KACvDC,EAAQ,CAACV,UAAQC,UAAQC,SAAOC,YAAUC,UAAQd,SAAOe,OAAKd,QAC9DoB,EAAG,qBAAiBX,GAAW,KAA5B,YAAoCC,EAApC,YAA+CI,EAA/C,YAAuDH,EAAvD,YAAiEC,EAAjE,YAA8EC,GACpFE,EAAMM,IAAI,iBACZF,EAAK,YAAkBJ,EAAMnB,IAAI,gBAE/BmB,EAAMM,IAAI,cACZF,EAAK,SAAeJ,EAAMnB,IAAI,aAE/B,IAEM0B,EAAW,uCAAG,4BAAAC,EAAA,sEACHC,aAAiBzB,EAAO0B,OAAOf,QAAQG,EAAQd,EAAO0B,OAAOC,SAASC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,MAD1F,OACfG,EADe,OAEnBxB,EAAgBwB,GAFG,2CAAH,qDAKXC,EAAc,uCAAG,sBAAAT,EAAA,sEAChBU,KAAoBC,SADJ,2CAAH,qDAQpBC,qBAAU,WAfqBpC,GAAUA,EAAO0B,QAAU1B,EAAO0B,OAAOC,SAiBvD,iBAAZjB,IACFa,IACAU,OAGD,CAACjC,EAAOA,EAAO0B,OAAOZ,IAExB,IAAMuB,EAAgBC,IAAW,cAAcnC,EAAW,CAAC,YAA0B,iBAAZO,IACzE,OACG,sBAAK6B,UAAWF,EAAhB,UACD,sBAAKE,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACW,OAATxB,GAAgE,OAAZL,GAAgC,YAAZA,GAAqC,iBAAZA,GAA0C,WAAZA,EAA/H,UAAmBG,EAAnB,cAAkCK,GAAiB,UAAyIN,EAAzI,YAAmJC,EAAnJ,cAAkKK,KAE1M,iBAAZR,GAA8B,qBAAK6B,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAMpC,EAAc,cAA/D,SACGH,EAAK,2BAIZ,qBAAKsC,UAAU,YAAf,SACE,cAAC,IAAD,eAAqBnB,MAErBb,GAA4B,iBAAZG,GAA+B,mCAChD,qBAAK6B,UAAU,aAAf,SACC,wBAAQC,QAAS,kBA/BF,SAACnB,GACnBhB,EAAQoC,KAAKpB,GA8BaqB,CAAWrB,IAAlC,SACEpB,EAAK","file":"static/js/39.d08aefdf.chunk.js","sourcesContent":["import {useEffect, useState} from 'react'\r\nimport {useParams,useHistory} from \"react-router-dom\";\r\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\r\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\r\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\r\nimport config from '../../../config.json'\r\nimport './mining.less'\r\nimport './zh-mining.less'\r\nimport classnames from \"classnames\";\r\nimport { inject, observer } from 'mobx-react';\r\nimport useQuery from '../../../hooks/useQuery'\r\n\r\nconst env = DeriEnv.get();\r\nconst {chainInfo} = config[env]\r\n\r\nfunction Mining({wallet,lang}){\r\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\r\n\tconst history = useHistory();\r\n\tconst [isController,setIsController] = useState(false)\r\n\tconst {version,chainId,symbol,baseToken,address,type} =  useParams();\r\n\tconst query = useQuery();\r\n\tconst networkText = chainInfo[chainId] && chainInfo[chainId].name;\r\n\tconst props = {version,chainId,symbol,baseToken,address,wallet,type,lang}\r\n\tconst url = `/addsymbol/${version || 'v1'}/${chainId}/${type}/${symbol}/${baseToken}/${address}`\r\n\tif(query.has('baseTokenId')) {\r\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\r\n\t}\r\n\tif(query.has('symbolId')){\r\n\t\tprops['symbolId'] = query.get('symbolId')\r\n\t}\r\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\r\n\r\n\tconst isPoolAdmin = async () => {\r\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account).catch(e => console.log(e))\r\n\t\tsetIsController(res)\r\n\t}\r\n\r\n\tconst openConfigList = async ()=>{\r\n\t\tawait openConfigListCache.update()\r\n\t}\r\n\r\n\tconst goToMining = (url)=>{\r\n\t\thistory.push(url)\r\n\t}\r\n\r\n\tuseEffect(()=>{\r\n\t\tif(hasConnectWallet()){\r\n\t\t\tif(version === 'v2_lite_open'){\r\n\t\t\t\tisPoolAdmin()\r\n\t\t\t\topenConfigList()\r\n\t\t\t}\r\n\t\t}\r\n\t},[wallet,wallet.detail,address])\r\n\r\n\tconst poolInfoClass = classnames('mining-info',currentTab,{'open-zone' : version === 'v2_lite_open'})\r\n\treturn(\r\n    <div className={poolInfoClass}>\r\n\t\t\t<div className=\"pool-header\">\r\n\t\t\t\t\t<div className=\"pool-network\">\r\n\t\t\t\t\t\t{type === 'lp' ? `${baseToken} @ ${networkText}` :  (version === 'v2' || version === 'v2_lite' || version === 'v2_lite_open' || version === 'option') ? `${baseToken} @ ${networkText}` : `${symbol}/${baseToken} @ ${networkText}` }\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\r\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\r\n\t\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>}\r\n\t\t\t</div>\r\n\t\t\t<div className='pool-info'>\r\n\t\t\t\t\t<LiquidityMining {...props}/>\r\n\t\t\t</div>\r\n\t\t\t{(isController && version === 'v2_lite_open') && <>\r\n\t\t\t\t<div className='add-symbol'>\r\n\t\t\t\t\t<button onClick={() => goToMining(url)} >\r\n\t\t\t\t\t\t{lang['add-symbol']}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}