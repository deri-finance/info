{"version":3,"sources":["pages/AirDrop/img/time.svg","pages/AirDrop/AirDrop.js","utils/DeriNumberFormat.js"],"names":["inject","observer","lang","wallet","useState","balance","setBalance","disabled","setDisabled","alert","useAlert","info","setInfo","getBalance","a","isConnected","apiProxy","request","detail","chainId","account","res","getInfo","valid","Date","getTime","click","error","eqInNumber","includeResponse","success","useEffect","className","formatAddress","DeriNumberFormat","value","decimalScale","thousandSeparator","src","timeLogo","alt","Button","fontWeight","label","width","height","fontSize","onClick","Wrapper","styled","NumberFormat","props","LoadLine","div","test","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","undefined","isNaN","Math","abs","defaultValue","others","bg","toFixed","countDecimal","toPlainString","displayType","fixedDecimalScale","closeShowLoadingEffectAfterLoaded","timeout","window","setTimeout","clearTimeout","suffix"],"mappings":"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","file":"static/js/16.31c642ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/time.0b0bfc0e.svg\";","import { useState, useEffect } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { formatAddress, eqInNumber } from '../../utils/utils'\nimport { useAlert } from 'react-alert'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport Button from '../../components/Button/Button'\nimport apiProxy from '../../model/ApiProxy'\nimport timeLogo from './img/time.svg'\nimport './airdrop.less'\nfunction AriDrop({ lang, wallet = {} }) {\n  const [balance, setBalance] = useState(0);\n  const [disabled, setDisabled] = useState(true);\n  const alert = useAlert();\n  const [info, setInfo] = useState({})\n  const getBalance = async () => {\n    if (wallet.isConnected()) {\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\n      setBalance(res)\n    }\n  }\n  const getInfo = async () => {\n    if (wallet.isConnected()) {\n      let info = await apiProxy.request('getUserInfoAllForAirDrop', [wallet.detail.account])\n      setInfo(info)\n      setDisabled(!info.valid)\n      let timestamp = new Date()\n      if(timestamp.getTime() >= 1640253600000){\n        setDisabled(true)\n      }\n    }\n\n  }\n\n  const click = async () => {\n    if (!info.valid) {\n      alert.error(lang['no-deri-to-claim']);\n      return;\n    }\n    if (!eqInNumber(wallet.detail.chainId, info.chainId)) {\n      alert.error(lang['please-switch-to-BSC-to-claim-deri'])\n      return;\n    }\n    let res = await apiProxy.request('mintAirdrop', [info.chainId, wallet.detail.account], { includeResponse: true })\n    if (!res.success) {\n      alert.error(lang['claim-failed'])\n    }\n    if(res.success){\n      setDisabled(true)\n    }\n    getBalance()\n  }\n  useEffect(() => {\n    getBalance()\n    getInfo()\n  }, [wallet,wallet.detail])\n  return (\n    <div className='airdrop-box'>\n      <div className='airdrop-info'>\n        <div className='airdrop-info-box'>\n          <div className='airdrop-title'>\n            {lang['title']}\n          </div>\n          <div className='wallet-address'>\n            <span className='blue-logo'></span>\n            {formatAddress(wallet.detail.account)}\n          </div>\n          <div className='wallet-balance'>\n            {lang['wallet-balance']} : <DeriNumberFormat value={balance} decimalScale={0} thousandSeparator={true} /> DERI\n          </div>\n          <div className='airdrop-time'>\n            <div className='time-logo'>\n              <img src={timeLogo} alt='' />\n            </div>\n            <div className='time-text'>\n              <div className='time-title'>\n                <div>\n                  {lang['start-time']}\n                </div>\n                <div>\n                  {lang['expire-time']}\n                </div>\n              </div>\n              <div>\n                <div>\n                  2021-12-23 10:00:00 UTC\n                </div>\n                <div>\n                  2021-12-25 10:00:00 UTC\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='claim'>\n            <Button fontWeight='bold' disabled={disabled} label={lang['claim']} width='277' height='72' fontSize='32' onClick={click} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default inject('wallet', 'poolManager')(observer(AriDrop))","import React,{useState,useEffect,useRef} from 'react'\nimport ReactDOM from 'react-dom'\nimport NumberFormat from 'react-number-format'\nimport { inject, observer } from 'mobx-react';\nimport styled from 'styled-components';\nimport { toPlainString,countDecimal } from './utils';\nimport { bg } from '../lib/web3js';\nconst Wrapper = styled(NumberFormat)`\n  width : ${props => props.width}px;\n`\nconst LoadLine = styled.div`\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\n`\nfunction DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n  const [firstTime, setFirstTime] = useState(true)\n  const isValidate = () => {\n    const {allowZero} = props \n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && !isNaN(props.value) && props.value !== 'NaN') \n          || ((Math.abs(props.value)) === 0 && allowZero === true )\n  }\n\n  useEffect(() => {\n    const {allowZero,wallet,defaultValue = '--',...others} = props \n    if(isValidate()) {\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\n      if(!allowZero && others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 1\n      }\n      others.value = toPlainString(others.value)\n      if(others.value && /\\d+.9{6}/.test(others.value)){\n        others.value = (+others.value).toFixed(5)\n      }\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\n    } else if(firstTime){\n      setRenderablity(<LoadLine className='loading-line' {...props}></LoadLine>)\n      if(props.closeShowLoadingEffectAfterLoaded){\n        setFirstTime(false)\n      }\n    } \n    const timeout = window.setTimeout(() => {\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\n      if(!isValidate()){\n        setRenderablity(defaultValue)\n      }\n    },30000)\n    return () => {\n      clearTimeout(timeout)\n    };\n  }, [props.value,props.decimalScale,props.suffix]);\n\n  return renderablity;\n}\nexport default DeriNumberFormat\n// export default inject('wallet')(observer(DeriNumberFormat))"],"sourceRoot":""}