{"version":3,"sources":["mobile/pages/Token/Token.js","utils/DeriNumberFormat.js","components/Token/img/pancake.svg","components/Token/img/sushi.svg","components/Token/Token.js"],"names":["Token","lang","className","DeriNumberFormat","props","useState","renderablity","setRenderablity","useEffect","allowZero","others","value","undefined","isNaN","Math","abs","console","log","displayType","inject","observer","wallet","loading","deriTokenAddress","setDeriTokenAddress","deriInfo","setDeriInfo","config","useConfig","addToken","a","window","ethereum","request","method","params","type","options","address","symbol","decimals","getDeriInfo","fetch","resp","json","res","obj","price","current_price","market_cap","circulating_supply","parseInt","total_supply","hasConnectWallet","detail","account","sushiBuy","switchNetwork","open","pancakeBuy","loaded","chainId","interval","setInterval","clearInterval","onClick","target","src","pancake","sushi","thousandSeparator","decimalScale"],"mappings":"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","file":"static/js/36.5bd9639f.chunk.js","sourcesContent":["import TokenInfo from '../../../components/Token/Token';\nimport './token.less'\nexport default function Token({lang}){\n    return(\n        <div className='token'>\n           <TokenInfo lang={lang}></TokenInfo>\n        </div>\n    )\n}","import React,{useState,useEffect} from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default function DeriNumberFormat(props){\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\n\n  useEffect(() => {\n    const {allowZero,...others} = props \n    if(((typeof props.value !== 'object' && props.value !== undefined && props.value !== '' && props.value !== 'NaN') || ((isNaN(props.value) && Math.abs(props.value)) === 0 && allowZero === true ))) {\n      console.log(props.value)\n      console.log(props)\n      setRenderablity(<NumberFormat {...others} displayType = 'text' />)\n    } \n    return () => {};\n  }, [props.value]);\n\n  return renderablity;\n}","export default __webpack_public_path__ + \"static/media/pancake.c40eba3d.svg\";","export default __webpack_public_path__ + \"static/media/sushi.084b9b6d.svg\";","import React, { useEffect, useState } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\nimport useConfig from '../../hooks/useConfig';\nimport pancake from './img/pancake.svg'\nimport sushi from './img/sushi.svg'\nfunction Token({ wallet = {}, lang,loading }) {\n    const [deriTokenAddress, setDeriTokenAddress] = useState()\n    const [deriInfo, setDeriInfo] = useState()\n    const config = useConfig();\n    const addToken = async () => {\n        if (deriTokenAddress) {\n            const tokenSymbol = 'DERI';\n            const tokenDecimals = 18;\n            try {\n                const wasAdded = await window.ethereum.request({\n                    method: 'wallet_watchAsset',\n                    params: {\n                        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n                        options: {\n                            address: deriTokenAddress, // The address that the token is at.\n                            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n                            decimals: tokenDecimals, // The number of decimals in the token\n                        },\n                    },\n                });\n\n                if (wasAdded) {\n                    console.log('Thanks for your interest!');\n                } else {\n                    console.log('Your loss!');\n                }\n            } catch (error) {\n                console.log(error);\n            }\n        }\n    }\n    const getDeriInfo = async () => {\n        let path = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=deri-protocol&order=market_cap_desc&per_page=100&page=1&sparkline=false'\n        let resp = await fetch(path);\n        let res = await resp.json();\n        if (res) {\n            let obj = {}\n            obj.price = res[0].current_price\n            obj.market_cap = res[0].market_cap\n            obj.circulating_supply = parseInt(res[0].circulating_supply)\n            obj.total_supply = parseInt(res[0].total_supply)\n            setDeriInfo(obj)\n        }\n\n    }\n    const hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n    \n    const sushiBuy = async ()=> {\n        if(hasConnectWallet()){\n            await wallet.switchNetwork(config[1])\n            window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\n        }else{\n            window.open(\"https://app.sushi.com/swap?inputCurrency=&outputCurrency=0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9\")\n        }\n    }\n\n    const pancakeBuy = async ()=> {\n        if(hasConnectWallet()){\n            await wallet.switchNetwork(config[56])\n            window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\n        }else{\n            window.open(\"https://exchange.pancakeswap.finance/#/swap?inputCurrency=0xe60eaf5a997dfae83739e035b005a33afdcc6df5\")\n        }\n    }\n\n    useEffect(()=>{\n        loading.loading()\n        if(deriInfo){\n            loading.loaded() \n        }\n    },[deriInfo])\n\n    useEffect(() => {\n        if (hasConnectWallet()) {\n            let address;\n            if (wallet.detail.chainId == 56) {\n                address = '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5'\n            } else if (wallet.detail.chainId == 1) {\n                address = '0xa487bf43cf3b10dffc97a9a744cbb7036965d3b9'\n            } else if (wallet.detail.chainId == 128) {\n                address = '0x2bdA3e331Cf735D9420e41567ab843441980C4B8'\n            } else if (wallet.detail.chainId == 137) {\n                address = '0x3d1d2afd191b165d140e3e8329e634665ffb0e5e'\n            }\n            setDeriTokenAddress(address)\n        }\n\n    }, [wallet.detail])\n    useEffect(() => {\n        let interval = null;\n        //计数器\n        interval = window.setInterval(() => {\n            getDeriInfo()\n        }, 1000);\n        return () => {\n            interval && clearInterval(interval);\n        };\n    }, [])\n    return (\n        <div className='token-info'>\n            <div className='title'>\n                {lang['the-deri-token']}\n            </div>\n            <div className='add-to-matemask'>\n                <button onClick={addToken}>\n                    {lang['add-deri-to-matemask']}\n                </button>\n            </div>\n            <div className='buy-deri'>\n                <a target='_blank' onClick={pancakeBuy}>\n                    <div className='pancake-buy'>\n                        <div>\n                            <img src={pancake} />\n                        </div>\n                        <span>\n                            {lang['buy-deri']}\n                        </span>\n                    </div>\n                </a>\n                <a target='_blank' onClick={sushiBuy}>\n                    <div className='sushi-buy'>\n                        <div>\n                            <img src={sushi} />\n                        </div>\n                        <span>\n                            {lang['buy-deri']}\n                        </span>\n                    </div>\n                </a>\n            </div>\n            <div className='deri-info'>\n                <div className='bottom-square'></div>\n                <div className='line-of-box'>\n                    <div className='box'>\n                        <div className='num'>\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.price} displayType='text' thousandSeparator={true} decimalScale='4' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['price']}\n                        </div>\n                    </div>\n                    <div className='box'>\n                        <div className='num'>\n                            $ {deriInfo ? <DeriNumberFormat value={deriInfo.market_cap} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['market-cap']}\n                        </div>\n                    </div>\n                </div>\n                <div className='line-of-box'>\n                    <div className='box'>\n                        <div className='num'>\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.circulating_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['circulating-supply']}\n                        </div>\n                    </div>\n                    <div className='box'>\n                        <div className='num'>\n                            {deriInfo ? <DeriNumberFormat value={deriInfo.total_supply} displayType='text' thousandSeparator={true} decimalScale='0' /> : '--'}\n                        </div>\n                        <div className='text'>\n                            {lang['total-supply']}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default inject('wallet','loading')(observer(Token))"],"sourceRoot":""}