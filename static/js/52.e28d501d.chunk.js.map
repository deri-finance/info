{"version":3,"sources":["mobile/pages/Mining/Mining.js"],"names":["chainInfo","config","DeriEnv","get","inject","observer","wallet","lang","useState","currentTab","setCurrentTab","useParams","version","chainId","baseToken","address","type","query","useQuery","networkText","name","isController","setIsController","props","poolInfoClass","classnames","has","isPoolAdmin","a","isPoolController","detail","account","res","openConfigList","openConfigListCache","update","useEffect","className","onClick","alert"],"mappings":"8UAaOA,EAAaC,EADRC,IAAQC,OACbH,UAkEQI,sBAAO,SAAPA,CAAiBC,aAhEhC,YAA+B,IAAdC,EAAa,EAAbA,OAAOC,EAAM,EAANA,KAAM,EACMC,mBAAS,aADf,mBACtBC,EADsB,KACXC,EADW,OAEqBC,sBAA3CC,EAFsB,EAEtBA,QAAQC,EAFc,EAEdA,QAAQC,EAFM,EAENA,UAAUC,EAFJ,EAEIA,QAAQC,EAFZ,EAEYA,KACnCC,EAAQC,cACRC,EAAcnB,EAAUa,GAASO,KAJV,EAKUZ,oBAAS,GALnB,mBAKtBa,EALsB,KAKTC,EALS,KAMvBC,EAAQ,CAACX,UAAQC,UAAQC,YAAUC,UAAQT,SAAOU,OAAKT,QACvDiB,EAAgBC,IAAW,cAAchB,GAC5CQ,EAAMS,IAAI,iBACZH,EAAK,YAAkBN,EAAMd,IAAI,gBAE/Bc,EAAMS,IAAI,cACZH,EAAK,SAAeN,EAAMd,IAAI,aAE/B,IAEMwB,EAAW,uCAAG,4BAAAC,EAAA,sEACHC,aAAiBvB,EAAOwB,OAAOjB,QAAQE,EAAQT,EAAOwB,OAAOC,SAD1D,OACfC,EADe,OAEnBV,EAAgBU,GAFG,2CAAH,qDASXC,EAAc,uCAAG,sBAAAL,EAAA,sEAChBM,KAAoBC,SADJ,2CAAH,qDAapB,OATAC,qBAAU,WAfqB9B,GAAUA,EAAOwB,QAAUxB,EAAOwB,OAAOC,SAiBvD,iBAAZnB,IACFqB,IACAN,OAGD,CAACrB,EAAOA,EAAOwB,OAAOf,IAGrB,sBAAKsB,UAAWb,EAAhB,UACD,sBAAKa,UAAU,cAAf,UACE,sBAAKA,UAAU,eAAf,UACGvB,EADH,MACiBK,KAEJ,iBAAZP,GAA8B,qBAAKyB,UAAU,wBAAf,SAC7B,qBAAKA,UAAU,mBAAmBC,QAAS,kBAAM5B,EAAc,cAA/D,SACEH,EAAK,2BAIX,qBAAK8B,UAAU,YAAf,SACE,cAAC,IAAD,eAAqBd,MAEtBF,GAAgB,mCAChB,qBAAKgB,UAAU,aAAf,SACC,wBAAQC,QAAS,WAjCpBC,MAAMhC,EAAK,mBAiCR,SACEA,EAAK","file":"static/js/52.e28d501d.chunk.js","sourcesContent":["import {useEffect,useState} from 'react'\nimport {useParams} from \"react-router-dom\";\nimport LiquidityMining from \"../../../components/Mining/Liquidity/LiquidityMining\";\nimport TradeMining from \"../../../components/Mining/Trade/TradeMining\";\nimport {DeriEnv,isPoolController,openConfigListCache} from '../../../lib/web3js/indexV2'\nimport config from '../../../config.json'\nimport classnames from \"classnames\";\nimport { inject, observer } from 'mobx-react';\nimport useQuery from '../../../hooks/useQuery'\nimport './mining.less'\nimport './de-mining.less'\n\nconst env = DeriEnv.get();\nconst {chainInfo} = config[env]\n\nfunction Mining({wallet,lang}){\n\tconst [currentTab,setCurrentTab] = useState('liquidity')\n\tconst {version,chainId,baseToken,address,type} =  useParams();\n\tconst query = useQuery();\n\tconst networkText = chainInfo[chainId].name;\n\tconst [isController,setIsController] = useState(false)\n\tconst props = {version,chainId,baseToken,address,wallet,type,lang}\n\tconst poolInfoClass = classnames('mining-info',currentTab)\n\tif(query.has('baseTokenId')) {\n\t\tprops['baseTokenId'] = query.get('baseTokenId')\n\t}\n\tif(query.has('symbolId')){\n\t\tprops['symbolId'] = query.get('symbolId')\n\t}\n\tconst hasConnectWallet = () => wallet && wallet.detail && wallet.detail.account\n\n\tconst isPoolAdmin = async () => {\n\t\tlet res = await isPoolController(wallet.detail.chainId,address,wallet.detail.account)\n\t\tsetIsController(res)\n\t}\n\n\tconst gotoMining = ()=>{\n\t\talert(lang['please-operat'])\n\t}\n\n\tconst openConfigList = async ()=>{\n\t\tawait openConfigListCache.update()\n\t}\n\n\tuseEffect(()=>{\n\t\tif(hasConnectWallet()){\n\t\t\tif(version === 'v2_lite_open'){\n\t\t\t\topenConfigList()\n\t\t\t\tisPoolAdmin()\n\t\t\t}\n\t\t}\n\t},[wallet,wallet.detail,address])\n\t\n\treturn(\n    <div className={poolInfoClass}>\n\t\t\t<div className=\"pool-header\">\n\t\t\t\t\t<div className=\"pool-network\">\n\t\t\t\t\t\t\t{baseToken} @ {networkText}\n\t\t\t\t\t</div>\n\t\t\t\t\t{version !== 'v2_lite_open' && <div className=\"check-trade-liquidity\">\n\t\t\t\t\t\t\t<div className='liquidity-mining' onClick={() => setCurrentTab('liquidity')} >\n\t\t\t\t\t\t\t\t{lang['liquidity-mining']}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>}\n\t\t\t</div>\n\t\t\t<div className='pool-info'>\n\t\t\t\t\t<LiquidityMining {...props}/>\n\t\t\t</div>\n\t\t\t{isController && <>\n\t\t\t\t<div className='add-symbol'>\n\t\t\t\t\t<button onClick={() => gotoMining()} >\n\t\t\t\t\t\t{lang['add-symbol']}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</>}\n\t\t</div>\n\t)\n}\n\nexport default inject('wallet')(observer(Mining))"],"sourceRoot":""}