{"version":3,"sources":["pages/Faucet/Faucet.js"],"names":["inject","observer","wallet","lang","tonkenList","token","arbiList","alert","useAlert","useState","showList","setShowList","check","setCheck","mint","a","isConnected","detail","chainId","param","account","apiProxy","request","includeResponse","res","success","error","useEffect","className","onClick","rel","target","href","map","item","index","width","height","fontWeight","label"],"mappings":"sPAqKeA,sBAAO,SAAPA,CAAiBC,aA9JhC,YAAmC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAClBC,EAAa,CACjB,CACEC,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,SAET,CACEA,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,SAGLC,EAAW,CACf,CACED,MAAO,QAKT,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,SAGLE,EAAQC,cACd,EAAgCC,mBAASL,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,OAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACMC,EAAI,uCAAG,WAAOT,GAAP,qBAAAU,EAAA,0DACPb,EAAOc,cADA,oBAEK,QAAVJ,GAA8C,MAA1BV,EAAOe,OAAOC,QAF7B,uBAGHC,EAAQ,CAACjB,EAAOe,OAAOC,QAAShB,EAAOe,OAAOG,QAASf,GAHpD,SAISgB,IAASC,QAAQ,cAAeH,EAAO,CAAEI,iBAAiB,IAJnE,QAIHC,EAJG,SAKMA,EAAIC,QAGflB,EAAMkB,QAAQ,gBAFdlB,EAAMmB,MAAM,aANP,0BAUY,aAAVd,GAAmD,UAA1BV,EAAOe,OAAOC,QAVzC,wBAWHC,EAAQ,CAACjB,EAAOe,OAAOC,QAAShB,EAAOe,OAAOG,QAASf,GAXpD,UAYSgB,IAASC,QAAQ,cAAeH,EAAO,CAAEI,iBAAiB,IAZnE,SAYHC,EAZG,SAaMA,EAAIC,QAGflB,EAAMkB,QAAQ,gBAFdlB,EAAMmB,MAAM,aAdP,gCAqBTnB,EAAMmB,MAAM,yBArBH,4CAAH,sDAgCV,OAPAC,qBAAU,WAENhB,EADY,QAAVC,EACUR,EAEAE,KAEb,CAACM,IAEF,qBAAKgB,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACGzB,EAAK,0BAER,sBAAKyB,UAAU,MAAf,UACE,qBAAKA,UAAqB,QAAVhB,EAAkB,gBAAkB,UAAWiB,QAAS,kBAAMhB,EAAS,QAAvF,iBACA,qBAAKe,UAAqB,aAAVhB,EAAuB,qBAAuB,eAAgBiB,QAAS,kBAAMhB,EAAS,aAAtG,yBAEF,sBAAKe,UAAU,WAAf,UACE,8BACe,QAAVhB,EAAiBT,EAAK,iBAAiBA,EAAK,mBAEtC,QAAVS,GAAmB,qBAAKgB,UAAU,aAAf,SAClB,mBAAGE,IAAI,aAAaC,OAAO,SAASC,KAAK,2CAAzC,mBAIS,aAAVpB,GAAwB,qBAAKgB,UAAU,aAAf,SACvB,mBAAGE,IAAI,aAAaC,OAAO,SAASC,KAAK,6BAAzC,sBAMJ,qBAAKJ,UAAU,aAAf,SACGlB,EAASuB,KAAI,SAACC,EAAMC,GACnB,OACE,sBAAKP,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAMvB,MAAO6B,EAAK7B,MAAO+B,MAAO,GAAIC,OAAQ,OAE9C,qBAAKT,UAAU,aAAf,SACGM,EAAK7B,QAER,qBAAKuB,UAAU,eAAf,SACE,cAAC,IAAD,CAAQU,WAAY,IAAKC,MAAOpC,EAAI,KAAUiC,MAAO,GAAIC,OAAQ,GAAIR,QAAS,kBAAMf,EAAKoB,EAAK7B,cAR7D8B","file":"static/js/29.5ca8ed63.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Icon from '../../components/Icon/Icon'\r\nimport Button from '../../components/Button/Button'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport { useAlert } from 'react-alert'\r\nimport './faucet.less'\r\nimport { inject, observer } from 'mobx-react'\r\nfunction Faucet({ wallet, lang }) {\r\n  const tonkenList = [\r\n    {\r\n      token: 'BUSD'\r\n    },\r\n    {\r\n      token: 'SXP'\r\n    },\r\n    {\r\n      token: 'ETH'\r\n    },\r\n    {\r\n      token: 'LTC'\r\n    },\r\n    {\r\n      token: 'XRP'\r\n    },\r\n    {\r\n      token: 'BTCB'\r\n    },\r\n    {\r\n      token: 'ADA'\r\n    },\r\n    {\r\n      token: 'CAKE'\r\n    },\r\n    {\r\n      token: 'MATIC'\r\n    },\r\n    {\r\n      token: 'AAVE'\r\n    },\r\n    {\r\n      token: 'TUSD'\r\n    },\r\n    {\r\n      token: 'TRX'\r\n    },\r\n    {\r\n      token: 'USDT'\r\n    },\r\n    {\r\n      token: 'USDC'\r\n    },\r\n    {\r\n      token: 'UST'\r\n    },\r\n    {\r\n      token: 'LUNA'\r\n    },\r\n    {\r\n      token: 'DOGE'\r\n    },\r\n  ]\r\n  const arbiList = [\r\n    {\r\n      token: \"USDC\"\r\n    },\r\n    // {\r\n    //   token: \"USDT\"\r\n    // },\r\n    {\r\n      token: \"LINK\"\r\n    },\r\n    {\r\n      token: \"DAI\"\r\n    },\r\n    {\r\n      token: \"AAVE\"\r\n    },\r\n    {\r\n      token: \"WBTC\"\r\n    },\r\n  ]\r\n  const alert = useAlert();\r\n  const [showList, setShowList] = useState(tonkenList)\r\n  const [check, setCheck] = useState(\"BSC\")\r\n  const mint = async (token) => {\r\n    if (wallet.isConnected()) {\r\n      if (check === 'BSC' && +wallet.detail.chainId === 97) {\r\n        let param = [wallet.detail.chainId, wallet.detail.account, token]\r\n        let res = await apiProxy.request('mintTokenV3', param, { includeResponse: true })\r\n        if (!res || !res.success) {\r\n          alert.error('mint fail')\r\n        } else {\r\n          alert.success('mint success')\r\n        }\r\n      } else if (check === 'ARBITRUM' && +wallet.detail.chainId === 421611) {\r\n        let param = [wallet.detail.chainId, wallet.detail.account, token]\r\n        let res = await apiProxy.request('mintTokenV3', param, { includeResponse: true })\r\n        if (!res || !res.success) {\r\n          alert.error('mint fail')\r\n        } else {\r\n          alert.success('mint success')\r\n        }\r\n      }\r\n\r\n    } else {\r\n      alert.error('Please connect wallet')\r\n    }\r\n\r\n  }\r\n  useEffect(() => {\r\n    if (check === 'BSC') {\r\n      setShowList(tonkenList)\r\n    } else {\r\n      setShowList(arbiList)\r\n    }\r\n  }, [check])\r\n  return (\r\n    <div className='testnet-faucet'>\r\n      <div className='faucet-info'>\r\n        <div className='faucet-title'>\r\n          {lang['obtain-testnet-token']}\r\n        </div>\r\n        <div className='tab'>\r\n          <div className={check === \"BSC\" ? 'tab-bsc check' : 'tab-bsc'} onClick={() => setCheck('BSC')}>BSC</div>\r\n          <div className={check === \"ARBITRUM\" ? 'tab-arbitrum check' : 'tab-arbitrum'} onClick={() => setCheck('ARBITRUM')}>ARBITRUM</div>\r\n        </div>\r\n        <div className='mint-bnb'>\r\n          <div>\r\n              {check === \"BSC\"? lang['go-to-min-bnb']:lang['go-to-min-eth']}\r\n          </div>\r\n          {check === 'BSC' && <div className='bnb-button'>\r\n            <a rel='norelerror' target='_blank' href='https://testnet.binance.org/faucet-smart'>\r\n              BNB\r\n            </a>\r\n          </div>}\r\n          {check === 'ARBITRUM' && <div className='bnb-button'>\r\n            <a rel='norelerror' target='_blank' href='https://rinkebyfaucet.com/'>\r\n              ETH\r\n            </a>\r\n          </div> }\r\n          \r\n        </div>\r\n        <div className='mint-token'>\r\n          {showList.map((item, index) => {\r\n            return (\r\n              <div className='mint-token-box' key={index}>\r\n                <div className='token-logo'>\r\n                  <Icon token={item.token} width={60} height={60} />\r\n                </div>\r\n                <div className='token-name'>\r\n                  {item.token}\r\n                </div>\r\n                <div className='token-button'>\r\n                  <Button fontWeight={300} label={lang['mint']} width={88} height={31} onClick={() => mint(item.token)} />\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nexport default inject('wallet')(observer(Faucet))"],"sourceRoot":""}