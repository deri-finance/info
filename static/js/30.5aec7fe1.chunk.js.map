{"version":3,"sources":["pages/Governance/img/down.svg","pages/Governance/img/go.svg","pages/Governance/img/check.svg","pages/Governance/img/governance-discussion.svg","pages/Governance/img/pool-votes.svg","pages/Governance/img/executive-votes.svg","pages/Governance/Governance.js"],"names":["Governance","lang","getLang","inProgress","setInProgress","useState","executed","setExecuted","activePollVotes","setActivePollVotes","useEffect","async","res","apiProxy","request","count","getProposals","className","rel","target","href","src","down","alt","go","discussion","pollVotes","onClick","anchorName","anchorElement","document","getElementById","scrollIntoView","scrollToAnchor","executive","id","check","to","value"],"mappings":"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","file":"static/js/30.5aec7fe1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/down.3d69afba.svg\";","export default __webpack_public_path__ + \"static/media/go.1e56dece.svg\";","export default __webpack_public_path__ + \"static/media/check.142188b4.svg\";","export default __webpack_public_path__ + \"static/media/governance-discussion.7afb067b.svg\";","export default __webpack_public_path__ + \"static/media/pool-votes.d93e23cf.svg\";","export default __webpack_public_path__ + \"static/media/executive-votes.794e6e67.svg\";","\nimport React, { useState, useEffect } from 'react'\nimport down from './img/down.svg'\nimport go from './img/go.svg'\nimport check from './img/check.svg'\nimport discussion from './img/governance-discussion.svg'\nimport pollVotes from './img/pool-votes.svg'\nimport executive from './img/executive-votes.svg'\nimport apiProxy from '../../model/ApiProxy'\nimport './governance.less'\nimport { Link } from 'react-router-dom'\nexport default function Governance({ lang, getLang }) {\n  const [inProgress, setInProgress] = useState(true)\n  const [executed, setExecuted] = useState(true)\n  const [activePollVotes, setActivePollVotes] = useState('')\n  const scrollToAnchor = (anchorName) => {\n    if (anchorName) {\n      let anchorElement = document.getElementById(anchorName);\n      if (anchorElement) {\n        anchorElement.scrollIntoView()\n      }\n    }\n  }\n  const getProposals = async () => {\n    let res = await apiProxy.request('getProposals', [])\n    if (res) {\n      setActivePollVotes(res.count)\n    }\n  }\n  useEffect(() => {\n    getProposals()\n  }, [])\n  return (\n    <div className='governance-box'>\n      <div className='governance-box-info'>\n        <div className='governance-title'>\n          {lang['title']}\n        </div>\n        <div className='governance-des'>\n          {lang['governance-des']}\n        </div>\n        <a rel='noreferrer' target=\"_blank\" href='https://discord.gg/kb8ZbYgp8M'>\n          <div className='active-pool-votes-num'>\n            <div className={activePollVotes ? 'active-num' :'no-active-num'}>{activePollVotes}</div> {lang['active-pool-votes']}\n          </div>\n        </a>\n        <div className='active-esectutive-votes-num'>\n          <div className='no-active-num'>0</div>\n          {lang['active-esectutive-votes']}\n        </div>\n        <div className='down'>\n          <img src={down} alt='down' />\n        </div>\n        <div className='how-to-participate'>\n          {lang['how-to-participate']}\n        </div>\n        <div className='participate-step'>\n          <a rel='noreferrer' target=\"_blank\" href='https://discord.gg/kb8ZbYgp8M'>\n            <div className='step'>\n              <div className='step-one-info'>\n                <div className='hover-go'>\n                  <img src={go} alt='go' />\n                </div>\n                <div className='step-logo'>\n                  <img src={discussion} alt='discussion' />\n                </div>\n                <div className='step-text'>\n                  {lang['governance-discussion']}\n                </div>\n              </div>\n              <div className='hover'>\n                <div className='san'></div>\n                {lang['governance-discussion-hover']}\n              </div>\n            </div>\n          </a>\n          <a rel='noreferrer' target=\"_blank\" href='https://snapshot.org/#/deri.eth'>\n            <div className='step'>\n              <div className='step-one-info'>\n                <div className='hover-go'>\n                  <img src={go} alt='go' />\n                </div>\n                <div className='step-logo'>\n                  <img src={pollVotes} alt='discussion' />\n                </div>\n                <div className='step-text'>\n                  {lang['poll-votes']}\n                </div>\n              </div>\n              <div className='hover'>\n                <div className='san'></div>\n                {lang['poll-votes-hover']}\n              </div>\n            </div>\n          </a>\n\n          <div className='step' onClick={() => { scrollToAnchor(\"EXECUTIVEVOTES\") }}>\n            <div className='step-one-info'>\n              <div className='hover-go'>\n              </div>\n              <div className='step-logo'>\n                <img src={executive} alt='discussion' />\n              </div>\n              <div className='step-text'>\n                {lang['executive-votes']}\n              </div>\n            </div>\n            <div className='hover'>\n              <div className='san'></div>\n              {lang['executive-votes-hover']}\n            </div>\n          </div>\n        </div>\n        <div id='EXECUTIVEVOTES' className='executive-votes'>\n          {lang['executive-votes-l']}\n        </div>\n        <div className='dip-list'>\n          <div className='in-progress-executed'>\n            <div className={inProgress ? 'in-progress check' : 'in-progress'} onClick={() => setInProgress(!inProgress)}>\n              {lang['in-progress']}\n              {inProgress ? <img src={check} alt='' /> : ''}\n            </div>\n            <div className={executed ? 'executed check' : 'executed'} onClick={() => setExecuted(!executed)}>\n              {lang['executed']}\n              {executed ? <img src={check} alt='' /> : ''}\n            </div>\n          </div>\n          {executed && <div className='dip-list-box'>\n            <Link to='/diptwo'>\n              <div className='dip-list-box-info'>\n                <div className='dip-list-title'>\n                  <div className='title-text'>\n                    {lang['dip']}-002\n                  </div>\n                  <div className='dip-executed'>\n                    <div className='executed-bg'></div>  {lang['executed']}\n                  </div>\n                </div>\n                <div className='dip-list-des'>\n                  {lang['dip-two-des']}\n                </div>\n                <div className='leading-option'>\n                  <span>\n                    {lang['leading-option']}\n                    <span className='winner-option'>\n                      {lang['dip-two-winner']}\n                    </span>\n                    {getLang('dip-leading-option', { value: \"1,440,582 \" })}\n                  </span>\n                </div>\n                <div className='dip-time'>\n                  {lang['dip-two-time']}\n                </div>\n              </div>\n            </Link>\n            <Link to='/dipone'>\n              <div className='dip-list-box-info'>\n                <div className='dip-list-title'>\n                  <div className='title-text'>\n                    {lang['dip']}-001\n                </div>\n                  <div className='dip-executed'>\n                    <div className='executed-bg'></div>  {lang['executed']}\n                  </div>\n                </div>\n                <div className='dip-list-des'>\n                  {lang['dip-one-des']}\n                </div>\n                <div className='leading-option'>\n                  <span>\n                    {lang['leading-option']}\n                    <span className='winner-option'>\n                      {lang['dip-one-winner']}\n                    </span>\n                    {getLang('dip-leading-option', { value: \"334,253\" })}\n                  </span>\n                </div>\n                <div className='dip-time'>\n                  {lang['dip-one-time']}\n                </div>\n              </div>\n            </Link>\n          </div>}\n        </div>\n      </div>\n    </div>\n  )\n}"],"sourceRoot":""}