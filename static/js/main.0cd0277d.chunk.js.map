{"version":3,"sources":["utils/LoadableComponent.js","lib/web3js/shared/config/rest_server.js","lib/web3js/shared/config/env.js","lib/web3js/shared/config/version.js","lib/web3js/shared/config/chain.js","lib/web3js/shared/config/database.js","lib/web3js/shared/config/config.js","lib/web3js/shared/utils/validate.js","lib/web3js/shared/config/pool_v1.js","lib/web3js/shared/utils/factory.js","lib/web3js/shared/utils/network.js","lib/web3js/shared/utils/chain.js","lib/web3js/shared/factory/web3.js","lib/web3js/shared/utils/web3.js","lib/web3js/shared/utils/api.js","lib/web3js/shared/config/token.js","lib/web3js/shared/config/config_processor.js","lib/web3js/shared/config/oracle.js","lib/web3js/shared/contract/contract_base.js","lib/web3js/shared/contract/database/database.js","lib/web3js/shared/contract/database/database_wormhole.js","lib/web3js/shared/contract/database/database_airdrop.js","lib/web3js/shared/contract/abis.js","lib/web3js/shared/contract/b_token.js","lib/web3js/shared/contract/oracle/wrapped_oracle.js","lib/web3js/shared/contract/activity/broker_manager.js","lib/web3js/shared/contract/activity/ptoken_airdrop.js","lib/web3js/shared/utils/oracle.js","lib/web3js/shared/contract/oracle/symbol_oracle_off_chain.js","lib/web3js/shared/contract/oracle/woo_oracle.js","lib/web3js/shared/factory/oracle.js","lib/web3js/shared/factory/database.js","lib/web3js/shared/factory/contract/b_token.js","lib/web3js/shared/contract/deri/deri.js","lib/web3js/shared/contract/deri/mining_vault_pool.js","lib/web3js/shared/contract/deri/mining_vault_router.js","lib/web3js/shared/contract/deri/wormhole.js","lib/web3js/shared/factory/contract/deri.js","lib/web3js/shared/contract/lp_pool/slp_pool.js","lib/web3js/shared/contract/lp_pool/clp_pool.js","lib/web3js/shared/contract/lp_pool/clp2_pool.js","lib/web3js/shared/factory/contract/lp_pool.js","lib/web3js/shared/factory/contract/activity.js","lib/web3js/shared/api/wallet_api.js","lib/web3js/shared/api/database_api.js","lib/web3js/shared/api/deri_query_api.js","lib/web3js/shared/api/deri_transaction_api.js","lib/web3js/v2/contract/abis.js","lib/web3js/v2/contract/perpetual_pool.js","lib/web3js/v2/contract/perpetual_pool_router.js","lib/web3js/v2/contract/l_token.js","lib/web3js/v2/contract/p_token.js","lib/web3js/v2/factory.js","lib/web3js/shared/api/activity_api.js","lib/web3js/shared/api/slp_pool_api.js","lib/web3js/shared/api/clp2_pool_api.js","lib/web3js/v1/calculation/fundingRate.js","lib/web3js/v1/calculation/index.js","lib/web3js/v1/contract/perpetual_pool.js","lib/web3js/v1/contract/p_token.js","lib/web3js/v1/contract/l_token.js","lib/web3js/v1/factory.js","lib/web3js/shared/api/clp_pool_api.js","lib/web3js/shared/api/lp_pool_query_api.js","lib/web3js/shared/api/lp_pool_transaction_api.js","lib/web3js/v2_lite_open/config.js","lib/web3js/v2_lite_open/contract/abis.js","lib/web3js/v2_lite_open/contract/chainlink_feed.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryChainlinkAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryChainlink.js","lib/web3js/v2_lite_open/contract/abi/oracleFactoryOffChainAbi.js","lib/web3js/v2_lite_open/contract/gen/OracleFactoryOffChain.js","lib/web3js/v2_lite_open/contract/p_token.js","lib/web3js/v2_lite_open/contract/perpetual_pool.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_manager.js","lib/web3js/v2_lite_open/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite_open/factory.js","lib/web3js/v2_lite_open/api/query_api.js","lib/web3js/shared/config/pool.js","lib/web3js/shared/config/broker.js","lib/web3js/v1/api/api_v1_globals.js","lib/web3js/v1/api/contract_transaction_api.js","lib/web3js/v1/api/trade_history_api.js","lib/web3js/v1/api/rest_api.js","lib/web3js/v1/api/contract_query_api.js","lib/web3js/v2/calculation/position.js","lib/web3js/v2/calculation/funding_rate.js","lib/web3js/v2/calculation/liquidity.js","lib/web3js/v2/api/mining_query_api.js","lib/web3js/v2/api/mining_transaction_api.js","lib/web3js/shared/api/api_globals.js","lib/web3js/v2/api/trade_query_api.js","lib/web3js/v2/api/trade_transaction_api.js","lib/web3js/v2/api/trade_history_api.js","lib/web3js/v2_lite/contract/abis.js","lib/web3js/v2_lite/contract/perpetual_pool.js","lib/web3js/v2_lite/contract/l_token.js","lib/web3js/v2_lite/contract/p_token.js","lib/web3js/v2_lite/contract/perpetual_pool_lite_viewer.js","lib/web3js/v2_lite/factory.js","lib/web3js/v2_lite/api/mining_query_api.js","lib/web3js/v2_lite/api/mining_transaction_api.js","lib/web3js/v2_lite/api/trade_query_api.js","lib/web3js/v2_lite/api/trade_transaction_api.js","lib/web3js/v2_lite/api/trade_history_api.js","lib/web3js/option/calculation/findLiquidationPrice2.js","lib/web3js/option/calculation/trade.js","lib/web3js/option/contract/abis.js","lib/web3js/option/contract/everlasting_option_viewer.js","lib/web3js/option/contract/l_token_option.js","lib/web3js/option/contract/p_token_option.js","lib/web3js/option/factory/tokens.js","lib/web3js/option/utils.js","lib/web3js/option/contract/everlasting_option.js","lib/web3js/option/contract/option_pricer.js","lib/web3js/option/factory/pool.js","lib/web3js/option/api/mining_query_api.js","lib/web3js/option/api/mining_transaction_api.js","lib/web3js/option/calculation/PMM2.js","lib/web3js/option/api/trade_query_api.js","lib/web3js/option/api/trade_transaction_api.js","lib/web3js/option/api/trade_history_api.js","lib/web3js/v2_lite_open/api/transaction_api.js","lib/web3js/activity/config.js","lib/web3js/activity/contract/abi/pTokenAirdropNULSAbi.js","lib/web3js/activity/contract/factory.js","lib/web3js/activity/utils.js","lib/web3js/activity/contract/gen/PTokenAirdropNULS.js","lib/web3js/activity/api/ptoken_airdrop.js","lib/web3js/activity/api/deri_staking.js","lib/web3js/api_wrapper/config_api.js","lib/web3js/api_wrapper/mining_query_api.js","lib/web3js/api_wrapper/mining_transaction_api.js","lib/web3js/api_wrapper/trade_query_api.js","lib/web3js/api_wrapper/trade_transaction_api.js","lib/web3js/api_wrapper/trade_history_api.js","model/WebSocket.js","model/Intl.js","components/hoc/withModal.js","model/Type.js","lib/web3js/shared/utils/convert.js","model/Version.js","model/Config.js","utils/utils.js","../lang).)*/.json$","components/Loading/LoadingMask.js","App.js","model/Wallet.js","model/Oracle.js","model/Position.js","model/Contract.js","model/History.js","model/Trading.js","model/Loading.js","index.js"],"names":["LoadingPage","NProgress","start","done","React","Component","LoadableComponent","component","Loadable","loader","loading","getRestServerConfig","env","process","DeriEnv","_deriEnv","get","set","value","Error","VERSIONS","ALL_EXCEPT_OPEN_VERSIONS","LITE_VERSIONS","LITE_AND_OPTION_VERSIONS","PRESERVED_SYMBOLS","getChainProviderUrls","chainId","res","provider_urls","filter","i","length","MAX_UINT256","MAX_INT256","getDBAddress","useProductionDB","getDBWormholeAddress","getDBAirdropAddress","getJsonConfig","version","configs","jsonConfig","JSON","parse","includes","normalizeChainId","chainIds","toString","normalizeAddress","address","startsWith","Web3","utils","toChecksumAddress","validateArgs","args","every","isNaN","parseFloat","validateObjectKeyExist","keyList","val","valName","keys","Object","forEach","prop","validateIsArray","Array","isArray","getPoolV1ConfigList","pool","bToken","pToken","lToken","dToken","MiningVault","initialBlock","bTokenSymbol","symbol","unit","retired","getLpConfigList","type","isLp","getMiningVaultRouterConfig","filteredConfig","MiningVaultRouter","getPreminingConfigList","staking","url","isInTvlRace","premining","getLpConfig","poolAddress","c","p","bTokenAddress","lTokenAddress","console","log","getDeriConfig","Deri","Wormhole","getDeriConfigList","deriAddress","wormholeAddress","getMiningVaultConfig","pools","getPoolV1Config","concat","pTokenAddress","dTokenAdress","MinningVaultAddress","factory","klass","instances","key","deepClone","obj","clone","assign","from","shuffleArray","urls","newUrls","index","Math","floor","random","splice","getBlockNumber","a","blockNumber","duration","Number","MAX_SAFE_INTEGER","web3","providers","HttpProvider","startTime","Date","now","eth","getLatestRPCServer","slice","promises","push","Promise","all","blockNumbers","sort","b","latestBlockNumber","reduce","findIndex","getChainProviderUrl","getDailyBlockNumber","chainBlockNumberList","accum","getDailyBlockNumberConfig","parseInt","getNetworkName","poolNetwork","delay","ms","resolve","setTimeout","web3Factory","web3InstanceMap","pending","walletChainId","window","ethereum","request","method","isBrowser","isJsDom","retry","providerUrl","getLatestBlockNumber","getBlockInfo","getBlock","getPastEvents","contract","eventName","fromBlock","to","events","amount","toBlock","es","e","getHttpBase","fetchJson","fetch","resp","json","fetchRestApi","path","opts","catchApiError","func","methodName","defaultValue","catchTxApiError","result","success","transaction","error","message","bTokenPairs","AMUSDC","offchainSymbolPairs","AXSUSDT","MANAUSDT","MBOXUSDT","IBSCDEFI","IGAME","ALICEUSDT","SANDUSDT","QUICKUSDT","GHSTUSDT","AGLDUSDT","normalizeOptionSymbol","optionSymbol","split","getVolatilitySymbols","symbols","s","volSymbol","getNormalizedOptionSymbols","map","isUsedRestOracle","mapToSymbol","mapToSymbolInternal","values","indexOf","mapToBTokenInternal","normalizeSymbolUnit","re","RegExp","join","replace","getIndexInfo","internalSymbol","customIndexs","tokens","IMEME","poolProcessor","v2","v2_lite","symbolId","v2_lite_open","config","option","poolValidator","getOracleConfigList","oracle","getOracleConfig","oracles","filteredByChainId","MAX_GAS_AMOUNT","ContractBase","contractAddress","contractAbi","this","Contract","_init","methods","call","accountAddress","gas","estimateGas","tx","self","_transactionReceipt","reject","getTransactionReceipt","receipt","status","errorMessage","_estimatedGas","txRaw","numberToHex","data","encodeABI","params","_getTransactionReceipt","CONTRACT_ABI","DatabaseContract","keyArray","_call","DatabaseWormholeContract","DatabaseAirdropContract","bTokenAbi","symbolOracleOffChainAbi","wrappedOracleAbi","wooOracleAbi","brokerManagerAbi","pTokenAirdropAbi","BToken","_balanceOf","decimals","bg","deriToNatural","allowance","gt","_transact","WrappedOracle","decimal","BrokerManager","brokerAddress","PTokenAirdrop","getPriceInfoForV1","baseUrl","addSymbolParam","mode","cache","ok","priceInfo","stringify","getOracleUrl","getPriceFromRest","getPriceInfo","price","volatility","getPriceInfos","symbolList","headers","body","RestOracle","getPrice","getOraclePrice","oracleFactory","getOraclePrice2","oracleAddress","wrappedOracleFactory","getOraclePriceFromCache2","timestamp","getOracleVolatilityForOption","volSymbols","acc","volatilities","getOracleVolatilitiesForOption","oracleSymbols","oracleSymbolVolatilities","checkOffChainOracleSymbol","symbolOracleOffChainFactory","signer","signatory","SymbolOracleOffChain","WooOracle","wooOracleAddresses","instanceMap","wooOracleFactory","databaseFactory","databaseInstanceMap","database","databaseActivityFactory","databaseWormholeFactory","databaseAirdropFactory","bTokenFactory","DeriContract","MiningVaultPool","WormholeContract","toChainId","toWormholeAddress","naturalToDeri","fromChainId","fromWormhole","fromNonce","v","r","deriFactory","wormholeFactory","miningVaultRouterFactory","miningVaultPoolFactory","SlpPool","ClpPool","minAddLiquidity","redemptionFeeRatio","liquidity","Clp2Pool","slpPoolFactory","slpPoolInstanceMap","slpPool","clpPoolFactory","clpPoolInstanceMap","clpPool","clp2PoolFactory","clp2PoolInstanceMap","clp2Pool","brokerManagerFactory","pTokenAirdropFactory","connectWallet","handleChainChanged","handleAccountChanged","accounts","account","on","location","reload","hexToNumber","getUserWalletBalance","walletAddress","getBalance","balance","fromWei","getUserInfo","userAddress","db","getValues","catch","err","deadline","nonce","valid","deriToString","deriToBool","getUserInfoHarvest","harvestLp","harvestTrade","lp","trade","getUserInfoTotal","total","getUserInfoAll","userInfo","userInfoHarvest","userInfoTotal","getPoolLiquidity","getPoolInfoApy","apy","volume1h","volume24h","getLpPoolInfoApy","apy2","getUserInfoInPool","getUserInfoAllForAirDrop","v1","r1","s1","r2","s2","getUserWormholeSignature","databaseWormhole","signature","isDeriUnlocked","deri","isUnlocked","getDeriBalance","balanceOf","mintDToken","miningVaultAddress","miningVault","freeze","wormhole","mintDeri","unlockDeri","unlock","mintAirdrop","miningVaultRouter","mint","perpetualPoolAbi","perpetualPoolRouterAbi","lTokenAbi","pTokenAbi","PerpetualPool","bTokenCount","symbolCount","routerAddress","protocolFeeCollector","protocolFeeAccrued","getLengths","getAddresses","getParameters","decimals0","minBToken0Ratio","minPoolMarginRatio","minInitialMarginRatio","minMaintenanceMarginRatio","minLiquidationReward","maxLiquidationReward","liquidationCutRatio","protocolFeeCollectRatio","bTokenId","swapperAddress","discount","pnl","cumulativePnl","multiplier","feeRatio","fundingRateCoefficient","cumulativeFundingRate","tradersNetVolume","tradersNetCost","getStorageAt","volume","abs","times","PerpetualPoolRouter","isMaximum","priceInfos","processAsset","lastCumulativePnl","LToken","processPosition","cost","lastCumulativeFundingRate","PToken","perpetualPoolFactory","perpetualPoolRouterFactory","lTokenFactory","pTokenFactory","setBroker","getBrokerConfig","brokerManagerAddress","brokerManager","getAirdropPTokenAddress","airdropPToken","getAirdropPTokenWhitelistCount","totalWhitelistCount","isUserPTokenExist","getPoolConfig2","getSlpLiquidityInfo","getLiquidity","bTokenBalance","shares","poolLiquidity","shareValue","addSlpLiquidity","addLiquidity","removeSlpLiquidity","removeLiquidity","isSlpUnlocked","unlockSlp","getSlpWalletBalance","getClp2LiquidityInfo","addClp2Liquidity","removeClp2Liquidity","isClp2Unlocked","unlockClp2","getClp2WalletBalance","calculateLiquidityUsed","poolMarginRatio","calculateFundingRate","processFundingRate","fundingRate","annualBlockCount","calculateShareValue","lTokenTotalSupply","eq","div","calculateMaxRemovableShares","lTokenBalance","removable","plus","minus","max","min","calculateEntryPrice","calculateMarginHeld","calculatePnl","calculateMaxWithdrawMargin","margin","held","calculateLiquidationPrice","tmp","isOrderValid","newVolume","minMargin","poolMaxVolume","gte","lte","negated","POOL_ABI","isProvider","cumuFundingRate","cumuFundingRateBlock","priceDelayAllowance","signed","getStateValues","stateValues","parameters","args1","fundingRatePerBlock","liquidityUsed","args2","PTokenContract","lastCumuFundingRate","lastUpdateTimestamp","LTokenContract","perpetualPoolInstanceMap","perpetualPool","pTokenInstanceMap","lTokenInstanceMap","getClpLiquidityInfo","totalSupply","maxRemovableShares","addClpLiquidity","removeClpLiquidity","isClpUnlocked","unlockClp","getClpWalletBalance","getLpLiquidityInfo","isLpUnlocked","getLpWalletBalance","unlockLp","addLpLiquidity","removeLpLiquidity","openPoolChainIds","prod","dev","getPoolV2LiteManagerConfig","find","getOracleFactoryChainlinkConfig","perpetualPoolLiteAbi","pTokenLiteAbi","perpetualPoolLiteManagerAbi","perpetualPoolLiteViewerAbi","chainlinkFeedAbi","ChainlinkFeed","trim","oracleFactoryChainlinkAbi","OracleFactoryChainlink","deleteIndexedKey","oracleFactoryOffChainAbi","OracleFactoryOffChain","delayAllowance","PTokenLite","tokenId","owner","operator","PerpetualPoolLite","updateAddresses","getActiveSymbolIds","symbolIds","getSymbol","block_number","getBTokenSymbol","getSymbols","getPoolExtraInfo","extraInfo","PerpetualPoolLiteManager","poolId","pairedTokenAddress","PerpetualPoolLiteViewer","perpetualPoolLiteFactory","perpetualPoolLiteManagerFactory","chainlinkFeedFactory","oracleFactoryChainlinkFactory","getPoolOpenConfigList","poolManagerAddress","poolManager","getNumPools","poolNums","numsArray","id","addresses","getConfig","getPoolOpenOracleList","oracleFactoryConfig","eventBlock","number","event","info","returnValues","isPoolController","controller","perpetualPoolLite","poolController","getPoolAcitveSymbolIds","init","openConfigListCache","update","oldData","updatedAt","expandPoolConfigV2","bTokens","router","isOption","flat","expandPoolConfigV2Lite","offchainSymbolIds","offchainSymbols","expandPoolConfigOption","pricer","volatilitySymbols","expandPoolConfigV2LiteOpen","isOpen","getPoolConfigList","getPoolConfig","getPoolVersion","undefined","poolConfigList","check","getFilteredPoolConfigList","_getPoolConfig","getPoolBTokenList","getPoolBTokenIdList","getPoolSymbolList","getPoolSymbolIdList","getPoolViewerConfig","viewers","poolViewer","getBrokerConfigList","fundingRateCache","resourceMap","resource","priceCache","_accountAddress","_price","_interval","_update","setInterval","clear","clearInterval","PerpetualPoolParametersCache","_parameters","_ws","depositMargin","pPool","withdrawMargin","getPositionInfo","maxWithdrawMargin","tradeWithMargin","orderValidation","closePosition","processTradeEvent","txHash","tradeVolume","_getTimeStamp","timeStamp","direction","time","transactionFee","_calculateFee","notional","baseToken","transactionHash","getTradeHistoryOnline","_getBlockInfo","filters","_getPastEvents","item","unshift","getTradeHistory2","tradeFromBlock","tradeHistoryBlock","liquidateFromBlock","liquidateHistoryBlock","tradeHistory","tradeHistoryOnline","getSpecification","averageEntryPrice","marginHeld","unrealizedPnl","liquidationPrice","getLiquidityInfo","poolDynamicEquity","getWalletBalance","getEstimatedFee","getFundingRate","poolInfo","fundingRate0","naturalWithPercentage","toExponential","getEstimatedFundingRate","newNetVolume","fundingRate1","getLiquidityUsed","liquidityUsed0","getEstimatedLiquidityUsed","liquidityUsed1","dynamicCost","calculateTxFee","calculateFundingFee","dynamicEquity","lastUpdatedBlockNumber","calculateBTokenDynamicEquities","isBToken0RatioValid","bToken0Ratio","totalDynamicEquity","lt","isPoolMarginRatioValid","userLiquidity","totalCost","calculateMaxRemovableLiquidity","restLiquidity","bTokenIdList","symbolIdList","getBToken","getAsset","parameterInfo","bTokenInfo","lTokenAsset","totalPnl","approximatePnl","perpetualPoolRouter","validation","_prices","liquidatePriceCache","_cache","symbolInfo","bTokenDiscounts","bTokenMultiplier","indexConstituents","symbolConfigList","getLastUpdatedBlockNumber","getPosition","getMargins","getPositions","positionInfo","margins","positions","latestPrice","symbolPrices","marginHeldBySymbol","unrealizedPnlList","fundingFee","getPositionInfos","idx","getEstimatedLiquidatePrice","_getFundingRate","promiseList","bTokenInfoList","liquidityUsedInAmount","getPoolBTokensBySymbolId","bTokenList","resultList","walletBalance","availableBalance","addMargin","removeMargin","getTradeHistory","ids","prices","volumes","lTokenLiteAbi","pTokenLiteFactory","lTokenLiteFactory","activeSymbolIds","offChainOracleSymbolIds","activeSymbolNames","o","offChainOracleSymbols","_getSymbolPrices","LTokenLite","_getLiquidityInfo","symbolIndex","isOffchainOracleSymbol","getLastUpdateBlock","getMargin","isOffchain","_symbol","symbolName","invalidValues","NaN","getEverlastingTimePriceAndDelta","S","K","V","T","timeValue","delta","u","sqrt","pow","getDynamicInitialMarginRatio","spot","strike","isCall","initialMarginRatio","otmRatio","canLiquidateWithPrice","trader","newUnderlierPrice","newDynamicMargin","dynamicMargin","newInitialMargin","initialMargin","position","newIntrinsicValue","strikePrice","fundingPeriod","newTimeValue","newPnl","newDynamicMarginRatio","spotPrice","dynamicMarginRatio","newMaintenanceMargin","maintenanceMarginRatio","findLiquidationPrice","numPositions","price1","price2","final1","final2","l1","l2","head","maintenanceMargin","dynamicInitialMarginRatio","dynamicInitialPoolMarginRatio","initialPoolMarginRatio","getMarginHeldBySymbol","getAverageEntryPrice","getLiquidationPrice","state","poolState","symbolState","traderState","positionState","normalizedSymbol","toNumberForObject","underlier","getLiquidationPrices","liquidationPrices","oSymbol","everlastingOptionAbi","everlastingOptionViewerAbi","lTokenOptionAbi","pTokenOptionAbi","EverlastingOptionViewer","oraclePrices","oracleVolatilities","fromWeiForObject","LTokenOption","PTokenOption","lastCumulativePremiumFundingRate","everlastingOptionViewerFactory","lTokenOptionFactory","pTokenOptionFactory","volatilitiesCache","volatilityCache","volatilitiesCache2","EverlastingOption","viewerAddress","viewer","isEqualSet","Set","activeSymbols","symbolVolatilities","getPoolStates","_updateConfig","volatilityInfos","bAmount","_getVolSymbolPrices","lShares","optionPricerAbi","OptionPricer","everlastingOptionFactory","optionPricerFactory","optionPool","queryTradePMM","theoreticalPrice","symbolInfo2","poolInfo2","feeRatioOTM","feeRatioITM","initialMarginRatioOrigin","maintenanceMarginRatioOrigin","volPrice","getTraderStates","timePrice","markPrice","dpmmPrice","oS","premiumFundingAccrued","fundingAccrued","volPrices","vIndex","curSymbolIndex","premiumFunding","fundingPerSecond","premiumFundingPerSecond","intrinsicValue","fee","premiumFunding0","getEstimatedTimePrice","toNumber","tradeCost","indexPrice","getEverlastingTimeValueAndDelta","contractValue","pricerAddress","tr","createPool","newParameters","addSymbol","createOracle","feedAddress","feedContract","getPTokenAirdropConfig","pTokenAirdropNULSAbi","PTokenAirdropNULSFactory","contractFactory","isPTokenAirdropped","isAirdropPToken","totalAirdropCount","isBTokenUnlocked","hasRequiredBalance","unlockBToken","keyPrefix","getStakingTop10Users","n","fill","no","userAddr","feePaid","score","evgCoeff","rewardBNB","getUserStakingInfo","scoreQ1","scoreQ2","scoreQ3","scoreQ4","coef","getUserStakingReward","rewardDERI","topUsers","getUserStakingContribution","totalContrib","userContrib","getContractAddressConfig","getPoolV2ConfigList","getLiquidityInfoV2l","getLiquidityInfoOption","getLiquidityInfo2","getLiquidityInfoV2","getPoolLiquidityV2l","getPoolLiquidity2","getPoolLiquidityV2","getPoolInfoApyV2l","getPoolInfoApy2","getPoolInfoApyV2","addLiquidityV2l","addLiquidityOption","addLiquidity2","addLiquidityV2","removeLiquidityV2l","removeLiquidityOption","removeLiquidity2","removeLiquidityV2","getSpecificationV2l","getSpecificationOption","getSpecification2","getSpecificationV2","getPositionInfoV2l","getPositionInfoOption","getPositionInfo2","getPositionInfoV2","getPositionInfosV2l","getPositionInfosPosition","getPositionInfosV2","getWalletBalanceV2l","getWalletBalanceOption","getWalletBalance2","getWalletBalanceV2","isUnlockedV2l","isUnlockedOption","isUnlocked2","isUnlockedV2","getEstimatedLiquidatePriceV2","getEstimatedFeeV2l","getEstimatedFeeOption","getEstimatedFee2","getEstimatedFeeV2","getFundingRateV2l","getFundingRateOption","getFundingRate2","getFundingRateV2","getEstimatedFundingRateV2l","getEstimatedFundingRateOption","getEstimatedFundingRate2","getEstimatedFundingRateV2","getLiquidityUsedV2l","getLiquidityUsedOption","getLiquidityUsed2","getLiquidityUsedV2","getEstimatedLiquidityUsedV2l","getEstimatedLiquidityUsedOption","getEstimatedLiquidityUsed2","getEstimatedLiquidityUsedV2","unlockV2l","unlockOption","unlock2","unlockV2","depositMarginV2l","depositMarginOption","depositMargin2","depositMarginV2","withdrawMarginV2l","withdrawMarginOption","withdrawMargin2","withdrawMarginV2","tradeWithMarginV2l","tradeWithMarginOption","tradeWithMargin2","tradeWithMarginV2","closePositionV2l","closePositionOption","closePosition2","closePositionV2","getTradeHistoryV2l","getTradeHistoryOption","getTradeHistoryV2","WebSocket","socket","io","transports","withCredentials","emit","onMessage","listener","time_type","equalIgnoreCase","findEvent","pos","require","lang","page","toLowerCase","test","pageName","Intl","locale","makeObservable","observable","setLocale","action","dict","computed","localeLabel","language","navigator","prefix","restoreLocale","supportedCatalog","storeLocale","label","substr","toUpperCase","withModal","appElement","document","getElementById","customizeStyle","overlay","zIndex","background","content","border","inset","overflow","WithModal","props","modalIsOpen","className","overlayMerged","mergedStyle","style","portalClassName","intl","onClose","inject","observer","Type","current","makeAutoObservable","setCurrent","isFuture","BigNumber","DECIMAL_PLACES","ROUNDING_MODE","ROUND_DOWN","EXPONENTIAL_AT","base","repeat","value1","value2","toWei","hexToString","hexToUtf8","hexToNumberString","toFixed","sd","formatBN","bigNumber","toFormat","replaceAll","userAgent","set1","set2","size","has","intRegex","k","newObj","sortOptionSymbols","symbolArr","unique","to2","index1","index2","index3","Version","isV1","isV2","isV2Lite","Config","setAll","isOptions","cur","chainInfo","formatAddress","formatBalance","eqInNumber","str1","str2","isLP","isSushiLP","isCakeLP","sessionStorageKey","convertToInternationalCurrencySystem","labelValue","storeConfig","sessionStorage","setItem","getConfigFromStore","getItem","storeChain","hasParam","param","urlString","href","URL","searchParams","getParam","getFormatSymbol","curChain","code","stripSymbol","secondsInRange","intervalRange","calcRange","interval","getTime","groupByNetwork","list","network","formatAdd","airdrop","combineSymbolfromPoolConfig","mapPoolInfo","wallet","name","buttonText","webpackContext","req","webpackContextResolve","__webpack_require__","module","exports","data-title","DesktopApp","MobileApp","Mask","useState","setIsOpen","useEffect","isShowMask","LoadingMask","top","MaskWrapper","screen","width","isOptionsLite","useRouteMatch","isOptionsPro","catagory","Wallet","detail","supportWeb3","isConnected","approve","approved","connect","loadWalletBalance","switchNetwork","metamask","supported","setDetail","supportV2","supportV1","supportAllVersion","supportChain","supportInnocation","supportOpen","isApproved","supportInnovation","Oracle","timeType","kData","ws","paused","listeners","already","setIndex","webSocket","subscribe","close","unsubscribeBars","setSymbol","setTimeType","unsubscribe","setPause","Position","callback","callbackALL","spec","counter","mockPositionInfo","deltaFundingAccrued","isSupportChain","balanceContract","started","runInAction","loadAll","startedAll","load","timer","clean","deltaFundingCoefficient","optionType","bTokenSymbolDisplay","getUnderlierStrike","setInfo","History","Trading","slideIncrementMargin","history","userSelectedDirection","optionsConfigs","setWallet","setConfigs","setOptionConfigs","setConfig","setContract","setPosition","setPositions","setVolume","setUserSelectedDirection","setFundingRate","setHistory","setSlideMargin","fundingRateTip","optionFundingRateTip","initialMarginRatioTip","maintenanceMarginRatioTip","TransactionFeeTip","multiplierTip","volumeDisplay","isNegative","isPositive","configInfo","contractInfo","historyInfo","finishedCallback","defaultConfig","getDefaultConfig","loadByConfig","changed","onChange","pause","store","resume","symbolChanged","addListener","syncFundingRate","loadFundingRate","then","results","finally","startAll","fromStore","getFromStore","setPaused","groupConfigBySymbol","increment","MarginRatio","substring","currentSymbolMarginHeld","otherMarginHeld","incrementMarginHeld","totalMarginHeld","dynBalance","available","exchanged","multipliedBy","totalContractValue","curContractValue","leverage","afterLeverage","isLoading","setIsLoading","trading","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0cd0277d.chunk.js","sourcesContent":["import React from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass LoadingPage extends React.Component {\n  //类似github页面加载的那个加载条\n  componentWillMount(){\n    NProgress.start()\n  }\n  componentWillUnmount(){\n    NProgress.done()\n  }\n  render () {\n    return (\n      <div/>\n    )\n  }\n}\n\nconst LoadableComponent = (component) => {\n  return Loadable({\n    loader: component,\n    loading: ()=><LoadingPage/>\n  })\n}\n\nexport default LoadableComponent","/**\n * Get REST server config\n * @param {string} env='dev' - Deri environment variable: 'prod' or 'dev'\n * @returns {string} server url\n */\nexport const getRestServerConfig = (env = 'dev') => {\n  if (env === 'prod') {\n    // for production\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://api.deri.finance';\n    //return 'https://alphaapi.deri.finance';\n  } else {\n    // for test\n    return (process && process.env && process.env.REACT_APP_REST_SERVER_URL) || 'https://testnetapi.deri.finance';\n  }\n};\n\nexport const getRedisWorkerQueneConfig = (env = \"dev\") => {\n  if (env === \"prod\") {\n    return ['trade_tx_quene', 'trade_worker_group']\n  } else {\n    return ['trade_tx_quene_dev', 'trade_worker_group_dev']\n  }\n};\n","// export const DERI_ENV=\"dev\"\nexport const DeriEnv = (() => {\n  let _deriEnv = 'dev';\n  return {\n    get: () => _deriEnv,\n    set: (value) => {\n      if (value === 'dev' || value === 'prod' || value === 'production') {\n        _deriEnv = value;\n      } else {\n        throw new Error(\"please use 'dev' or 'prod' for DeriEnv\");\n      }\n    },\n  };\n})();\n","// versions\nexport const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open', 'option']\nexport const ALL_EXCEPT_OPEN_VERSIONS = ['v2', 'v2_lite', 'option']\n//export const VERSIONS = ['v2', 'v2_lite', 'v2_lite_open']\nexport const LITE_VERSIONS = ['v2_lite', 'v2_lite_open']\nexport const LITE_AND_OPTION_VERSIONS = ['v2_lite', 'v2_lite_open', 'option']\n\nexport const PRESERVED_SYMBOLS = ['BTCUSD', 'ETHUSD', 'BNBUSD'];\n","// add a new chain: validateChainId, getChainProviderUrls, getNetworkName, getDailyBlockNumberConfig\nexport const getChainIds = () => {\n  return ['1', '3', '56', '97', '128', '256', '137', '80001'];\n};\n\nexport const getChainProviderUrls = (chainId) => {\n  const chainProviderUrls = [\n    {\n      provider_urls: [\n        'https://mainnet.infura.io/v3/d0e6582644a845ee8d7c3c18683fec06',\n      ],\n      chainId: '1',\n    },\n    {\n      provider_urls: [\n        'https://bsc-dataseed.binance.org',\n        'https://bsc-dataseed1.defibit.io/',\n        'https://bsc-dataseed1.ninicoin.io/',\n      ],\n      chainId: '56',\n    },\n    {\n      provider_urls: ['https://http-mainnet.hecochain.com'],\n      chainId: '128',\n    },\n    {\n      provider_urls: [\n        'https://polygon-rpc.com',\n        //'https://rpc-mainnet.matic.network',\n        'https://rpc-mainnet.maticvigil.com',\n        //'https://rpc-mainnet.matic.quiknode.pro',\n        'https://matic-mainnet.chainstacklabs.com',\n        // 'https://matic-mainnet-full-rpc.bwarelabs.com',\n        // 'https://matic-mainnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '137',\n    },\n    {\n      provider_urls: [\n        'https://ropsten.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '3',\n    },\n    {\n      provider_urls: [\n        'https://kovan.infura.io/v3/ec73e2f0c79a42c0997ee535364de584',\n      ],\n      chainId: '42',\n    },\n    {\n      provider_urls: [\n        'https://data-seed-prebsc-1-s1.binance.org:8545/',\n        'https://data-seed-prebsc-1-s2.binance.org:8545/',\n        'https://data-seed-prebsc-1-s3.binance.org:8545/',\n        'https://data-seed-prebsc-2-s1.binance.org:8545/',\n        'https://data-seed-prebsc-2-s2.binance.org:8545/',\n        'https://data-seed-prebsc-2-s3.binance.org:8545/',\n      ],\n      chainId: '97',\n    },\n    {\n      provider_urls: ['https://http-testnet.hecochain.com'],\n      chainId: '256',\n    },\n    {\n      provider_urls: [\n        'https://rpc-mumbai.matic.today',\n        'https://rpc-mumbai.maticvigil.com',\n        'https://matic-mumbai.chainstacklabs.com',\n        'https://matic-testnet-archive-rpc.bwarelabs.com',\n      ],\n      chainId: '80001',\n    },\n  ];\n\n  const res = chainProviderUrls.filter((i) => i.chainId  === chainId)\n  //console.log('res',res)\n  if (res.length > 0) {\n    return res[0].provider_urls\n  } else {\n    throw new Error(`getChainProviderUrls: no urls for chainId ${chainId}`)\n  }\n}\n\nexport const getDailyBlockNumberConfig = () => {\n  // let chainBlockNumberList = [\n  //   '2367422',\n  //   '2367422',\n  //   '10497304',\n  //   '10497304',\n  //   '10511369',\n  //   '10511369',\n  //   '14747860',\n  //   '14747860',\n  // ];\n\n  // compute matic aunual block number: block height(16309458, 10000000)\n  let chainBlockNumberList = [\n    '6486',\n    '6486',\n    '28759',\n    '28759',\n    '28798',\n    '28798',\n    '40405',\n    '40405',\n  ];\n  return getChainIds().reduce((accum, i, index) => {\n    accum[i] = chainBlockNumberList[index];\n    return accum;\n  }, {});\n};\n\n// MAX UINT/INT256\n// hex(2**256-1)\nexport const MAX_UINT256 =\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n// hex((2**255 -1) // 10**18)\nexport const MAX_INT256 =\n  '0x9392ee8e921d5d073aff322e62439fcf32d7f344649470f90';\n\n","export const getDBProviderUrls = () => [\n  'https://data-seed-prebsc-1-s1.binance.org:8545/',\n  'https://data-seed-prebsc-1-s2.binance.org:8545/',\n  'https://data-seed-prebsc-1-s3.binance.org:8545/',\n  'https://data-seed-prebsc-2-s1.binance.org:8545/',\n  'https://data-seed-prebsc-2-s2.binance.org:8545/',\n  'https://data-seed-prebsc-2-s3.binance.org:8545/',\n];\n\nexport const getDBAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x824B6238EdCbaCCAF83C3F60C0cEB38bEb7C9e89';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n\nexport const getDBWormholeAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0xd8137F05c1F432A80525053c473d0e286c4F46f0';\n  }\n  // for test\n  return '0x3c9118C7f9f4ef0Ab5333cD710922dBCCC2d870d';\n};\n\nexport const getDBAirdropAddress = (env = 'dev', useProductionDB) => {\n  if (env === 'prod' && useProductionDB) {\n    // for production\n    return '0x35b2650eFb799DF4696b292D11b4770a0fFaa7c7';\n  }\n  // for test\n  return '0x7C1267188379f57d92e640E519151229E1eA5565';\n};\n","import { DeriEnv } from './env';\nimport jsonConfig from '../resources/config.json';\nimport { VERSIONS } from './version';\n\nexport const getJsonConfig = (version, env) => {\n  env = env || DeriEnv.get();\n  // for browser and nodejs\n  let configs =\n    typeof jsonConfig === 'object' ? jsonConfig : JSON.parse(jsonConfig);\n  if (configs[version] && VERSIONS.includes(version)) {\n    configs = configs[version];\n    if (['prod', 'dev'].includes(env)) {\n      if (configs && configs[env]) {\n        return configs[env];\n      }\n    }\n  } else {\n    throw new Error(\n      `getJsonConfig(): invalid config of version '${version}' and env '${env}'`\n    );\n  }\n};\n","import { getChainIds } from '../config/chain';\nimport Web3 from 'web3';\n\n// validate\nexport const normalizeChainId = (chainId) => {\n  const chainIds = getChainIds()\n  let res = chainId ? chainId.toString() : chainId;\n  if (chainId && chainIds.includes(res)) {\n    return res;\n  } else {\n    throw new Error(`invalid chainId: ${chainId}`);\n  }\n};\n\nexport const normalizeAddress = (address) => {\n  if (typeof address === 'string' && address.startsWith('0x') && address.length == 42 ) {\n    return Web3.utils.toChecksumAddress(address);\n  } else {\n    throw new Error(`invalid address: ${address}`);\n  }\n};\n\nexport const validateArgs = (...args) =>\n  args.every((i) => !isNaN(parseFloat(i)));\n\nexport const validateObjectKeyExist = (keyList, val, valName) => {\n  const keys = Object.keys(val);\n  keyList.forEach((prop) => {\n    if (!keys.includes(prop)) {\n      throw new Error(\n        `validateConfig(): property ${prop} is not exist in the ${valName} config.`\n      );\n    }\n  });\n};\nexport const validateIsArray = (val, valName) => {\n  if (!Array.isArray(val)) {\n    throw new Error(\n      `validateConfig(): property ${valName} is an array in the config.`\n    );\n  }\n};\n","import { DeriEnv } from '../config'\nimport { normalizeChainId } from '../utils/validate'\n\nexport const getPoolV1ConfigList = (env = 'dev') => {\n  // production environment\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xAf081e1426f64e74117aD5F695D2A80482679DE5',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0x3c11c4990447F0AD575eBd74E8cD17bf61848A15',\n        lToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '7906919',\n        bTokenSymbol: 'BUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x011346B81e5326904B5B76A11dECAf2c67eFFc23',\n        bToken: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n        pToken: '0xaE6429b4CDDDFefDB6ac702183c836B4e62Da410',\n        lToken: '0xd8f78c47b0e0943B3Cb2cE1e1726472C4ddd2F98',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '6753399',\n        bTokenSymbol: 'BUSD',\n        symbol: 'COIN',\n        unit: 'COIN',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xD3f5E6D1a25dA1E64EDf7cb571f9fAD17FEb623c',\n        bToken: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        pToken: '0x29Be63E854727BB3Fef77eB107B8d1c33081f989',\n        lToken: '0x610b39F9ba0fF2167AEb646462473c011A431Cd7',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        initialBlock: '8005906',\n        bTokenSymbol: 'DERI',\n        symbol: 'iMEME',\n        unit: 'iMEME',\n        chainId: '56',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x23779AAc1e74a65F27B4840A8E41F767Ce993118',\n        bToken: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n        pToken: '0x9c6134F9e759C6812aaC102FC1a9f7cA5615fD33',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548746',\n        bTokenSymbol: 'USDT',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0x96a1F15676746b9339DBc185F277618359Ac6346',\n        bToken: '0x3449FC1Cd036255BA1EB19d65fF4BA2b8903A69a',\n        pToken: '0x15aD9b67cf54037127fD986Ca3bB775f9FC4ad05',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        initialBlock: '12548827',\n        bTokenSymbol: 'BAC',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '1',\n        version: 'v1',\n        retired: true,\n      },\n      {\n        pool:   '0xBA7e183042c8796E26A5a2375927DE7B1AB99d97',\n        bToken: '0x0298c2b32eaE4da002a15f36fdf7615BEa3DA047',\n        pToken: '0x732Ba556B304fd74Cd14b74ab8762A7D9f26d476',\n        lToken: '0x90fE976Cbb48E0761A84DDA2974024377994a997',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        initialBlock: '5220431',\n        bTokenSymbol: 'HUSD',\n        symbol: 'BTCUSD',\n        unit: 'BTC',\n        chainId: '128',\n        version: 'v1',\n        retired: true,\n      },\n    ];\n  }\n  // develop environment\n  return [\n    {\n      pool: '0x372b640A00a0A6B73381e9363A39644a712cCc37',\n      bToken: '0x4038191eFb39Fe1d21a48E061F8F14cF4981A0aF',\n      pToken: '0xB9113758D771750e9E8ECb359A19689eC89AC1a5',\n      lToken: '0xC727a10Be4740441BE74960296097aF39D701980',\n      initialBlock: '9378545',\n      bTokenSymbol: 'BUSD',\n      symbol: 'BTCUSD',\n      unit: 'BTC',\n      chainId: '97',\n      version: 'v1',\n    },\n  ];\n};\n\n// export const getSlpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n//         bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n//         MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n//         chainId: '1',\n//         bTokenSymbol: 'DERI-USDT SLP',\n//         symbol: '--',\n//       },\n//     ];\n//   }\n//   console.log('getSlpContractAddressConfig(): no config for dev environment');\n//   return [];\n// };\n\n// export const getClpContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '6894880',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP',\n//         symbol: '--',\n//         retired: true,\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n// export const getClp2ContractAddressConfig = (env = 'dev') => {\n//   if (env === 'prod') {\n//     return [\n//       {\n//         pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n//         bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n//         pToken: '0x0000000000000000000000000000000000000000',\n//         lToken: '0x0000000000000000000000000000000000000000',\n//         dToken: '0x0000000000000000000000000000000000000000',\n//         MiningVault: '0x0000000000000000000000000000000000000000',\n//         initialBlock: '699498',\n//         chainId: '56',\n//         bTokenSymbol: 'CAKE-LP SYRUP',\n//         symbol: '--',\n//       },\n//     ];\n//   } else {\n//     return [];\n//   }\n// };\n\nexport const getLpConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        pool:   '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        bTokenSymbol: 'DERI-USDT SLP',\n        symbol: '--',\n        type: 'slp',\n        isLp: true,\n      },\n      {\n        pool:   '0x4de2Ac273aD1BBe2F5C41f986d7b3cef8383Df98',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x83b31Abc899863B8Eb06952994580CE86414156E',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '6894880',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP',\n        symbol: '--',\n        type: 'clp',\n        retired: true,\n        isLp: true,\n      },\n      {\n        pool:   '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n        bToken: '0xDc7188AC11e124B1fA650b73BA88Bf615Ef15256',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0000000000000000000000000000000000000000',\n        dToken: '0x0000000000000000000000000000000000000000',\n        MiningVault: '0x0000000000000000000000000000000000000000',\n        initialBlock: '699498',\n        chainId: '56',\n        bTokenSymbol: 'CAKE-LP SYRUP',\n        symbol: '--',\n        type: 'clp2',\n        isLp: true,\n      },\n    ];\n  } else {\n    return [];\n  }\n};\n\nexport const getMiningVaultRouterConfig = (chainId) => {\n  const configs = [\n    {\n      MiningVaultRouter: '0x8d5613451Dc0592388f98d7Ab1ce5A732561936e',\n      chainId: '56',\n    },\n  ];\n  const filteredConfig = configs.filter((i) => i.chainId === chainId);\n  if (filteredConfig.length > 0) {\n    return filteredConfig[0].MiningVaultRouter;\n  } else {\n    throw new Error(\n      `getMiningVaultRouterAddressConfig: no address for chainId ${chainId}`\n    );\n  }\n};\n\nexport const getDeriConfigList= (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        Deri: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        Wormhole: '0x6874640cC849153Cb3402D193C33c416972159Ce',\n        bTokenSymbol: 'DERI',\n        chainId: '1',\n      },\n      {\n        Deri: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n        Wormhole: '0x15a5969060228031266c64274a54e02Fbd924AbF',\n        bTokenSymbol: 'DERI',\n        chainId: '56',\n      },\n      {\n        Deri: '0x2bdA3e331Cf735D9420e41567ab843441980C4B8',\n        Wormhole: '0x134A04497e9a0b1F8850fEaf87eD18ec348dDa46',\n        bTokenSymbol: 'DERI',\n        chainId: '128',\n      },\n    ];\n  }\n  return [\n    {\n      Deri: '0x88Fe79a3b6AC7EeF3d55B2e388fa18400590698B',\n      Wormhole: '0xcb28Fa7dFa1844Cdb47aD5f03484f6131293Fd2e',\n      bTokenSymbol: 'DERI',\n      chainId: '3',\n    },\n    {\n      Deri: '0x8dC0aA48bbc69BaCD2548c6b7adCDeF8DDbA50B2',\n      Wormhole: '0x9028e43114Df57C97c15355224E575DF1e244919',\n      bTokenSymbol: 'DERI',\n      chainId: '97',\n    },\n    {\n      Deri: '0x932458a637F8060AF747167656651b64d4c36620',\n      Wormhole: '0x629B0D3D32BE5ee5F7BF3845914d26446c04165d',\n      bTokenSymbol: 'DERI',\n      chainId: '256',\n    },\n  ];\n};\n\nexport const getPreminingConfigList = (env = 'dev') => {\n  if (env === 'prod') {\n    return [\n      {\n        bToken: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xe91cb8ba06028f38e231F7099e9B97CEDd2f2736',\n        pool: '0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/0/0x447A9BC67721cB115ce6E664a261568a3c8F5B35',\n        bTokenSymbol: 'WBNB',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x8518054fa6b7E0d4834bfD152c9BA5BDB856FD2B',\n        pool: '0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/0/1/0xA51E3D1a0A6E9114c22728991dDFdd62a9ABd9ad',\n        bTokenSymbol: 'CAKE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xa184088a740c695E156F91f5cC086a06bb78b827',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x167704539C9acAcF6f0C2D7AAeB4413339F86AaA',\n        pool: '0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x6C8d3F31b2ad1AE997Afa20EAd88cb67E93C6E17',\n        chainId: '56',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/0/2/0x03dA5cB10D868c5F979b277eb6DF17D50E78fE2A',\n        bTokenSymbol: 'AUTO',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x43CA6D7129d7F490d5B91B4D14D7c877D15A92dA',\n        pool: '0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/0/0xEDBbC66fC5Ee21E97001A3E88E312457003D6BEc',\n        bTokenSymbol: 'WHT',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xeC27d4c53C2E29F1113A9667c0B19442df83c1f1',\n        pool: '0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0xF0bC8b772f26F8DeB46c1aebbEA7C8d502Abf3b8',\n        chainId: '128',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/1/1/0x667FC1D27dC94a8c7a9ff86fc9908079DCFD6aA0',\n        bTokenSymbol: 'MDX',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x3B50881F5646E809ef85Bb0016af3b2Ee5313d46',\n        pool: '0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/0/0x4847f7b81476346e5e55BBdD3b447435c5Be4a7d',\n        bTokenSymbol: 'SUSHI',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0x0069b4Fb48e5B8E9CB6960f4c2468b625ACfb465',\n        pool: '0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: false,\n        url:\n          'https://premining.deri.finance/#/premining/2/1/0xC773104722aA79bdA8f6ECF9384Cf7d9B70371e2',\n        bTokenSymbol: 'AAVE',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n      {\n        bToken: '0xA3DfbF2933FF3d96177bde4928D0F5840eE55600',\n        pToken: '0x0000000000000000000000000000000000000000',\n        lToken: '0xFFCfB31b6500E7e420CFE5D0df710DdF928F55FD',\n        pool: '0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        dToken: '0xA487bF43cF3b10dffc97A9A744cbB7036965d3b9',\n        MiningVault: '0x7826Ef8Da65494EA21D64D8E6A76AB1BED042FD8',\n        chainId: '1',\n        staking: true,\n        url:\n          'https://premining.deri.finance/#/premining/2/2/0x3f98429b673AF39671a495b5B12Ebd5C10092ccB',\n        bTokenSymbol: 'DERI-USDT SLP',\n        isInTvlRace: false,\n        retired: true,\n        premining: true,\n      },\n    ];\n  } else {\n    return []\n  }\n};\n\n\n// export const getSlpConfig = (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getSlpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClp2Config= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       pTokenAddress: pool[0].pToken,\n//       lTokenAddress: pool[0].lToken,\n//       dTokenAdress: pool[0].dToken,\n//       MinningVaultAddress: pool[0].MiningVault,\n//     };\n//   }\n//   console.log(\n//     `getClp2Config(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\n// export const getClpConfig= (chainId, poolAddress) => {\n//   chainId = normalizeChainId(chainId);\n//   const pools = getLpContractConfigList(DeriEnv.get()).filter(\n//     (c) => c.chainId === chainId\n//   );\n//   const pool = pools.filter((p) => p.pool === poolAddress);\n//   if (pool.length > 0) {\n//     return {\n//       poolAddress: pool[0].pool,\n//       bTokenAddress: pool[0].bToken,\n//       lTokenAddress: pool[0].lToken,\n//     };\n//   }\n//   console.log(\n//     `getClpContractAddress(): contract address is not found: ${chainId} ${poolAddress}`\n//   );\n//   return {};\n// };\n\nexport const getLpConfig = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getLpConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      lTokenAddress: pool[0].lToken,\n      type: pool[0].type,\n    };\n  }\n  console.log(\n    `getLpConfig(): contract address is not found: ${chainId} ${poolAddress}`\n  );\n  return {};\n};\n\nexport const getDeriConfig= (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pool = getDeriConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pool.length > 0) {\n    return {\n      deriAddress: pool[0].Deri,\n      wormholeAddress: pool[0].Wormhole,\n      bTokenSymbol: pool[0].bTokenSymbol,\n    };\n  }\n  console.log(\n    `getDeriConfig(): contract address is not found: ${chainId}`\n  );\n  return {};\n};\n\nexport const getMiningVaultConfig = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const pools = getPoolV1ConfigList(DeriEnv.get()).filter(\n    (c) => c.chainId === chainId\n  );\n  if (pools.length > 0) {\n    if (pools[0].MiningVault) {\n      return pools[0].MiningVault;\n    }\n  }\n};\n\nexport const getPoolV1Config = (chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  const env = DeriEnv.get()\n  const pools = getPoolV1ConfigList(env)\n    .concat(getPreminingConfigList(env))\n    .concat(getLpConfigList(env))\n    .filter((c) => c.chainId === chainId);\n  const pool = pools.filter((p) => p.pool === poolAddress);\n  if (pool.length > 0) {\n    return {\n      poolAddress: pool[0].pool,\n      bTokenAddress: pool[0].bToken,\n      pTokenAddress: pool[0].pToken,\n      lTokenAddress: pool[0].lToken,\n      dTokenAdress: pool[0].dToken,\n      MinningVaultAddress: pool[0].MiningVault,\n      bTokenSymbol: pool[0].bTokenSymbol,\n      symbol: pool[0].symbol,\n      unit: pool[0].unit,\n      initialBlock: pool[0].initialBlock,\n    };\n  } else {\n    throw new Error(\n      `getPoolV1Config(): contract address is not found: ${chainId} ${poolAddress}`\n    );\n  }\n}\n","export const factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}","import Web3 from 'web3';\n// == func\n// const np = () => {}\n// const delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\n// refer to https://www.30secondsofcode.org/js/s/deep-clone\n// alternative: let clone = JSON.parse(JSON.stringify(obj))\nexport const deepClone = obj => {\n  if (obj === null) return null;\n  let clone = Object.assign({}, obj)\n  Object.keys(clone).forEach((key) => {\n    clone[key] = typeof obj[key] === 'object' ? deepClone(obj[key]) : obj[key];\n  });\n  // need recheck\n  if (Array.isArray(obj)) {\n    clone.length = obj.length\n    return Array.from(clone)\n  }\n  return clone\n}\n\nexport const shuffleArray = (urls) => {\n  const newUrls = deepClone(urls)\n  const length = urls.length\n  let res = []\n  for (let i = 0; i < length; i++) {\n    const index = Math.floor(Math.random() * urls.length)\n    res = res.concat(newUrls.splice(index,1))\n  }\n  return res\n}\n\nconst getBlockNumber = async (url) => {\n  let res = { url: url, blockNumber: -1, duration: Number.MAX_SAFE_INTEGER,};\n  try {\n    const web3 = new Web3(new Web3.providers.HttpProvider(url))\n    const startTime = Date.now()\n    res.blockNumber = await web3.eth.getBlockNumber()\n    res.duration = Date.now() - startTime\n  } catch (err) {\n    //console.log(`getBlockNumber(${url}) error: ${err}`)\n  }\n  return res\n};\n\nexport const getLatestRPCServer = async (urls = []) => {\n  urls = shuffleArray(urls)\n  // pick 2 random urls\n  urls = urls.length >= 2 ? urls.slice(0,2) : urls\n  let promises = []\n  for (let i = 0; i < urls.length; i++) {\n    promises.push(getBlockNumber(urls[i]));\n  }\n  let blockNumbers = await Promise.all(promises)\n  blockNumbers = blockNumbers.sort((a, b) => a.duration - b.duration)\n  // console.log('blockNumbers',  blockNumbers)\n  const latestBlockNumber = blockNumbers.reduce((a, b) => b.blockNumber !== -1 ? a > b.blockNumber ? a : b.blockNumber : a, 0)\n  const index = blockNumbers.findIndex((b) => b.blockNumber === latestBlockNumber);\n  const res = blockNumbers[index] && blockNumbers[index].url\n  // console.log(res)\n  if (res && res.startsWith('http')) {\n    return res\n  } else {\n    throw new Error(`getLatestRPCServer(): no alive RPC server in ${urls}`)\n  }\n};","import {\n  getChainProviderUrls,\n  getDailyBlockNumberConfig,\n} from '../config/chain';\nimport { normalizeChainId } from './validate';\nimport { getLatestRPCServer } from './network';\n\nexport const getChainProviderUrl = async (chainId) => {\n  chainId = normalizeChainId(chainId);\n  const urls = getChainProviderUrls(chainId);\n  if (urls.length > 0) {\n   const url =  await getLatestRPCServer(urls);\n   // console.log('url', url)\n   return url\n  } else {\n    throw new Error(\n      `Cannot find the chain provider url with chainId: ${chainId}`\n    );\n  }\n};\n\nexport const getDailyBlockNumber = (chainId) => {\n  const blockNumbers = getDailyBlockNumberConfig();\n  if (blockNumbers[chainId]) {\n    return parseInt(blockNumbers[chainId]);\n  } else {\n    throw new Error(`Invalid annual block number with chainId: ${chainId}`);\n  }\n};\n\nexport const getNetworkName = (chainId) => {\n  chainId = normalizeChainId(chainId);\n  let poolNetwork;\n  switch (chainId) {\n    case '1':\n      poolNetwork = 'ethereum';\n      break;\n    case '56':\n      poolNetwork = 'bsc';\n      break;\n    case '128':\n      poolNetwork = 'heco';\n      break;\n    case '3':\n      poolNetwork = 'ropsten';\n      break;\n    case '42':\n      poolNetwork = 'kovan';\n      break;\n    case '97':\n      poolNetwork = 'bsctestnet';\n      break;\n    case '256':\n      poolNetwork = 'hecotestnet';\n      break;\n    case '137':\n      poolNetwork = 'matic';\n      break;\n    case '80001':\n      poolNetwork = 'mumbai';\n      break;\n    default:\n      throw new Error(`The networkId is not valid for chainId ${chainId}`);\n  }\n  return poolNetwork;\n};","import Web3 from 'web3';\nimport { normalizeChainId } from '../utils/validate';\nimport { getChainProviderUrl } from '../utils/chain';\nimport { isBrowser, isJsDom } from '../utils/convert';\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nexport const web3Factory = (function () {\n  const web3InstanceMap = {};\n  let pending = {}\n  let walletChainId = null\n  return {\n    async get(chainId) {\n      chainId = normalizeChainId(chainId)\n      if (Object.keys(web3InstanceMap).includes(chainId)) {\n        //console.log('hit web3 cache')\n        return web3InstanceMap[chainId];\n      }\n      // for mining page should not depends wallet network\n      if (!walletChainId && typeof window === 'object' && window.ethereum) {\n        walletChainId = await window.ethereum.request({ method: 'net_version' })\n      }\n      // using metaMask ethereum object\n      if (\n        isBrowser() &&\n        !isJsDom() &&\n        typeof window.ethereum === 'object' &&\n        walletChainId &&\n        chainId === walletChainId.toString()\n      ) {\n        //console.log('new ethereum web3 cache')\n        web3InstanceMap[chainId] = new Web3(window.ethereum);\n        return web3InstanceMap[chainId];\n      } else {\n        if (pending[chainId]) {\n          // wait for init\n          let retry = 10\n          while (retry > 0) {\n            await delay(500)\n            if (Object.keys(web3InstanceMap).includes(chainId)) {\n              // console.log('hit web3 cache')\n              return web3InstanceMap[chainId];\n            } else {\n              retry -= 1\n            }\n          }\n          // timeout\n          const providerUrl = await getChainProviderUrl(chainId);\n          //console.log('new web3 cache')\n          web3InstanceMap[chainId] = new Web3(\n            new Web3.providers.HttpProvider(providerUrl)\n          );\n          return web3InstanceMap[chainId];\n        } else {\n          // first init\n          pending[chainId] = true\n          try {\n            const providerUrl = await getChainProviderUrl(chainId);\n            //console.log('new web3 cache')\n            web3InstanceMap[chainId] = new Web3(\n              new Web3.providers.HttpProvider(providerUrl)\n            );\n            delete pending[chainId]\n          } catch(err) {\n            console.log(err.toString())\n            delete pending[chainId]\n          }\n          return web3InstanceMap[chainId];\n        }\n      }\n    },\n  };\n})();","import { hexToNumber } from './convert';\nimport { web3Factory } from '../factory/web3'\n\n\n  // get block number when last updated\n  export const getLastUpdatedBlockNumber = async(chainId, contractAddress, position = 0) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getStorageAt(contractAddress, position)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  export const getLatestBlockNumber = async(chainId) => {\n    const web3 = await web3Factory.get(chainId)\n    const res = await web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  export const getBlockInfo = async(chainId, blockNumber) => {\n    const web3 = await web3Factory.get(chainId)\n    return await web3.eth.getBlock(blockNumber);\n  }\n\n  export const getPastEvents = async(chainId, contract, eventName, filter = {}, fromBlock = 0, to = 0) => {\n    let events = [];\n    let amount\n    if (['56', '97', '127', '80001'].includes(chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }","import {\n  getRestServerConfig,\n  DeriEnv,\n} from '../config'\n// import fetch from 'node-fetch'\n\n// get REST HTTP Base url\nexport const getHttpBase = () => {\n  return getRestServerConfig(DeriEnv.get());\n};\n\nexport const fetchJson = async (url) => {\n  const resp = await fetch(url);\n  return await resp.json();\n};\n\nexport const fetchRestApi = async (path, opts = { method: 'GET' }) => {\n  return await fetchJson(`${getHttpBase()}${path}`, opts);\n};\n\n// query api wrapper\nexport const catchApiError = async (func, args, methodName, defaultValue) => {\n  try {\n    const res = await func(...args)\n    return res\n  } catch (err) {\n    //console.log(`${methodName}: `, err.toString())\n    console.log(`${methodName}: `, err)\n  }\n  return defaultValue\n}\n\n// tx api wrapper\nexport const catchTxApiError = async (func, args) => {\n  let res;\n  try {\n    const result = await func(...args);\n    res = { success: true, transaction: result };\n  } catch (err) {\n    res = { success: false, error: err.message};\n  }\n  return res;\n};\n\n","const bTokenPairs = {\n  AMUSDC: 'amUSDC',\n};\n\nconst offchainSymbolPairs = {\n  AXSUSDT: 'AXSUSDT',\n  MANAUSDT: 'MANAUSDT',\n  MBOXUSDT: 'MBOXUSDT',\n  IBSCDEFI: 'iBSCDEFI',\n  IGAME: 'iGAME',\n  ALICEUSDT: 'ALICEUSDT',\n  SANDUSDT: 'SANDUSDT',\n  QUICKUSDT: 'QUICKUSDT',\n  GHSTUSDT: 'GHSTUSDT',\n  AGLDUSDT: 'AGLDUSDT',\n};\n\nexport const normalizeOptionSymbol = (optionSymbol) => {\n  const res = optionSymbol.split('-')\n  if (res.length >= 2) {\n    return res[0]\n  } else {\n    throw new Error(`invalid option symbol:${optionSymbol}`)\n  }\n};\n\nexport const getNormalizedOptionSymbols = (symbols) => {\n  let res = []\n  symbols.forEach((s) => {\n    const volSymbol = normalizeOptionSymbol(s)\n    if (!res.includes(volSymbol)) {\n      res.push(volSymbol)\n    }\n  })\n  return res\n}\n\nexport const getVolatilitySymbols = (symbols) => {\n  return getNormalizedOptionSymbols(symbols).map((s) => `VOL-${s}`)\n}\n\nexport const isUsedRestOracle = (symbol) => {\n  return Object.keys(offchainSymbolPairs).includes(symbol);\n};\n\nexport const mapToSymbol = (symbol) => {\n  if (Object.keys(offchainSymbolPairs).includes(symbol)) {\n    return offchainSymbolPairs[symbol]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToSymbolInternal = (symbol) => {\n  const index = Object.values(offchainSymbolPairs).indexOf(symbol)\n  if (index > -1) {\n    return Object.keys(offchainSymbolPairs)[index]\n  } else {\n    return symbol\n  }\n}\n\nexport const mapToBToken = (bToken) => {\n  if (Object.keys(bTokenPairs).includes(bToken)) {\n    return bTokenPairs[bToken]\n  } else {\n    return bToken\n  }\n}\n\nexport const mapToBTokenInternal = (bToken) => {\n  const index = Object.values(bTokenPairs).indexOf(bToken)\n  if (index !== -1) {\n    return Object.keys(bTokenPairs)[index]\n  } else {\n    return bToken\n  }\n}\n\nexport const normalizeSymbolUnit = (symbol) => {\n  const prefix = ['USD', 'USDT'];\n  const re = new RegExp(`(${prefix.join('|')})$`);\n  if (typeof symbol === 'string') {\n    return mapToSymbol(symbol).replace(re, '');\n  }\n  console.log(`symbol(${symbol}) is not a string type`);\n  return symbol;\n};\n\nexport const getIndexInfo = (symbol) => {\n  const internalSymbol = mapToSymbolInternal(symbol);\n  const customIndexs = {\n    IGAME: {\n      tokens: ['AXS', 'MANA', 'SAND', 'ALICE', 'TLM', 'DPET', 'SKILL'],\n      url: 'https://docs.deri.finance/products/index/game-index',\n    },\n    IBSCDEFI: {\n      tokens: ['CAKE', 'XVS', 'MDX', 'AUTO', 'BAKE', 'BUNNY'],\n      url: 'https://docs.deri.finance/products/index/bsc-defi-index',\n    },\n    IMEME: {\n      tokens: ['DOGE', 'SHIB', 'ELON', 'LOWB', 'PIG', 'SAFEMOON', 'MONA'],\n      url: 'https://docs.deri.finance/products/index/meme-index',\n    },\n  };\n  if (Object.keys(customIndexs).includes(internalSymbol)) {\n    return customIndexs[internalSymbol];\n  } else {\n    return { tokens: [], url: '' };\n  }\n};","import { validateObjectKeyExist, validateIsArray } from '../utils';\nimport {\n  isUsedRestOracle,\n  mapToBToken,\n  mapToSymbol,\n  getVolatilitySymbols,\n} from './token';\n\nconst validatePoolV2 = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'router',\n      'initialBlock',\n      'bTokens',\n      'symbols',\n      'chainId',\n      'symbolCount',\n      'bTokenCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['bTokens'], 'bTokens');\n  pool['bTokens'].forEach((prop) => {\n    validateObjectKeyExist(\n      ['bTokenId', 'bTokenSymbol', 'bToken'],\n      prop,\n      'bToken'\n    );\n  });\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n};\n\nconst processPoolV2 = (pool) => {\n  // process pool \n  pool['bTokenCount'] = pool['bTokens'].length;\n  pool['symbolCount'] = pool['symbols'].length;\n  pool['bTokens'].forEach((b) => b['bTokenSymbol'] = mapToBToken(b['bTokenSymbol']))\n  pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n};\n\nconst validatePoolV2Lite = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n};\n\nconst processPoolV2Lite = (pool) => {\n  // process pool\n  if (!pool['symbolCount']) {\n    pool['symbolCount'] = pool['symbols'].length;\n  }\n  if (!pool['offchainSymbolIds'] && !pool['offchainSymbols']) {\n    pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validateConfigV2LiteOpen = (config) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      'offchainSymbolIds',\n      'offchainSymbols',\n      'symbolCount',\n    ],\n    config,\n    ''\n  );\n  validateIsArray(config['symbols'], 'symbols');\n  config['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  validateIsArray(config['offchainSymbolIds'], 'offchainSymbolIds');\n};\n\nconst processConfigV2LiteOpen = (config) => {\n  // process config\n  if (!config['symbolCount']) {\n    config['symbolCount'] = config['symbols'].length;\n  }\n  if (!config['offchainSymbolIds'] && !config['offchainSymbols']) {\n    config['offchainSymbolIds'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    config['offchainSymbols'] = config['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    config['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nconst validatePoolOption = (pool) => {\n  validateObjectKeyExist(\n    [\n      'pool',\n      'pToken',\n      'lToken',\n      'initialBlock',\n      'bToken',\n      // 'pricer',\n      'bTokenSymbol',\n      'symbols',\n      'chainId',\n      // 'offchainSymbolIds',\n      // 'offchainSymbols',\n      'symbolCount',\n      'volatilitySymbols',\n    ],\n    pool,\n    ''\n  );\n  validateIsArray(pool['symbols'], 'symbols');\n  pool['symbols'].forEach((prop) => {\n    validateObjectKeyExist(['symbolId', 'symbol'], prop, 'symbol');\n  });\n  // validateIsArray(pool['offchainSymbolIds'], 'offchainSymbolIds');\n  // validateIsArray(pool['offchainSymbols'], 'offchainSymbols');\n  validateIsArray(pool['volatilitySymbols'], 'volatilitySymbols');\n};\n\nconst processPoolOption = (pool) => {\n  // process pool \n  pool['symbolCount'] = pool['symbols'].length;\n  if (!pool['volatilitySymbols']) {\n    // pool['offchainSymbolIds'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbolId)\n    // pool['offchainSymbols'] = pool['symbols'].filter((s)=> isUsedRestOracle(s.symbol)).map((s) => s.symbol)\n    pool['volatilitySymbols'] = getVolatilitySymbols(\n      pool['symbols'].map((s) => s.symbol)\n    ); \n    pool['symbols'].forEach((s) => s['symbol'] = mapToSymbol(s['symbol']))\n  }\n};\n\nexport const poolProcessor = {\n  v2: processPoolV2,\n  v2_lite: processPoolV2Lite,\n  v2_lite_open: processConfigV2LiteOpen,\n  option: processPoolOption,\n};\n\nexport const poolValidator = {\n  v2: validatePoolV2,\n  v2_lite: validatePoolV2Lite,\n  v2_lite_open: validateConfigV2LiteOpen,\n  option: validatePoolOption,\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { mapToSymbolInternal } from './token';\n\nexport const getOracleConfigList = (version='v2', env) => {\n  const config = getJsonConfig(version, env || DeriEnv.get())\n  return config.oracle\n};\n\nexport const getOracleConfig = (version='v2', chainId, symbol) => {\n  symbol = mapToSymbolInternal(symbol)\n  const oracles = getOracleConfigList(version)\n  const filteredByChainId = oracles.filter((c) =>\n    symbol\n      ? c.chainId === chainId && c.symbol === symbol\n      : c.chainId === chainId\n  );\n  if (filteredByChainId.length > 0) {\n    if (symbol) {\n      return filteredByChainId[0];\n    } else {\n      return filteredByChainId;\n    }\n  }\n  //console.log(`getOracleConfig(): invalid chainId(${chainId}) or symbol(${symbol}).`);\n};\n","import { web3Factory } from '../factory/web3';\nimport { numberToHex } from '../utils/convert';\n\nconst MAX_GAS_AMOUNT = 832731;\n//const RE_ERROR_MSG = /\\\"message\\\":\\s\\\"execution\\sreverted:([\\w\\s]+)\\\"/\nconst RE_ERROR_MSG = /\"message\":\\s\"execution\\sreverted:([\\w\\s]+)\"/\n\nexport class ContractBase {\n  constructor(chainId, contractAddress, contractAbi) {\n    this.chainId = chainId;\n    this.contractAddress = contractAddress;\n    this.contractAbi = contractAbi;\n  }\n\n  async _init() {\n    // re-init web3 and contract when web3 instance is null\n    if (!this.web3) {\n      this.web3 = await web3Factory.get(this.chainId);\n      this.contract = new this.web3.eth.Contract(\n        this.contractAbi,\n        this.contractAddress\n      );\n    }\n  }\n\n  async _call(method, args = []) {\n    let res\n    let retry = 2\n    while (retry > 0) {\n      try {\n        await this._init()\n        res = await this.contract.methods[method](...args).call();\n        break\n      } catch(err) {\n        retry -= 1\n        // remove web3 instance to re-init\n        this.web3 = null\n        if (err.toString().includes('Invalid JSON RPC response')) {\n          console.log(`Invalid JSON RPC response with chainId(${this.chainId})`);\n        } else if (err.toString().includes(\"Returned values aren't valid,\")) {\n          console.log(`Invalid contract address(${this.contractAddress}) and chainId(${this.chainId})`);\n        } else {\n          console.log('error:', err)\n        }\n      }\n    }\n    if (retry === 0 && !res) {\n      throw new Error(`The contract(${this.contractAddress}) '${method}([${args}])' failed with max retry 2.`)\n    }\n    return res\n  }\n\n  async _estimatedGas(method, args = [], accountAddress) {\n    await this._init()\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (error) {\n        console.log(`-- estimatedGas: ${error}`)\n        // const res = error.toString().split('\\n').join('').match(RE_ERROR_MSG)\n        // if (Array.isArray(res) && res.length >= 2) {\n        //   throw new Error(res[1].trim())\n        // }\n      }\n    }\n    if (gas === 0) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt === null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _transact(method, args=[], accountAddress) {\n    await this._init()\n    const gas = await this._estimatedGas(method, args, accountAddress)\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n    //return await this.contract.methods[method](...args).send({from: accountAddress})\n  }\n\n}\n","import { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray]);\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"values\",\"type\":\"tuple[]\"}],\"name\":\"setSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"unsetSignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseWormholeContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI);\n  }\n\n  async signature(accountAddress) {\n    return await this._call('signature', [accountAddress])\n  }\n}\n","//import { DatabaseBaseContract } from './database_base'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"data\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"}],\"name\":\"delController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"name\":\"getValues\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"internalType\":\"structDatabase.Params1[]\",\"name\":\"pairs\",\"type\":\"tuple[]\"}],\"name\":\"setValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DatabaseAirdropContract extends ContractBase {\n  constructor(contractAddress) {\n    super('97', contractAddress, CONTRACT_ABI)\n  }\n  async getValues(keyArray) {\n    return await this._call('getValues', [keyArray])\n  }\n}\n","/* eslint-disable */\n// base token contract abi\nexport const bTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n// oracle contract abis\nexport const symbolOracleOffChainAbi = [ {\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, { \"inputs\": [], \"name\": \"signer\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, {\"inputs\":[],\"name\":\"signatory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"} ]\nexport const chainlinkOracleAbi = [{\"type\":\"constructor\",\"stateMutability\":\"nonpayable\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"},{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"event\",\"name\":\"AnswerUpdated\",\"inputs\":[{\"type\":\"int256\",\"name\":\"current\",\"internalType\":\"int256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"NewRound\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"roundId\",\"internalType\":\"uint256\",\"indexed\":true},{\"type\":\"address\",\"name\":\"startedBy\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\",\"indexed\":false}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferRequested\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"type\":\"address\",\"name\":\"from\",\"internalType\":\"address\",\"indexed\":true},{\"type\":\"address\",\"name\":\"to\",\"internalType\":\"address\",\"indexed\":true}],\"anonymous\":false},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"acceptOwnership\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AccessControllerInterface\"}],\"name\":\"accessController\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address\"}],\"name\":\"aggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"confirmAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint8\",\"name\":\"\",\"internalType\":\"uint8\"}],\"name\":\"decimals\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"string\",\"name\":\"\",\"internalType\":\"string\"}],\"name\":\"description\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"getAnswer\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"getRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"getTimestamp\",\"inputs\":[{\"type\":\"uint256\",\"name\":\"_roundId\",\"internalType\":\"uint256\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"int256\",\"name\":\"\",\"internalType\":\"int256\"}],\"name\":\"latestAnswer\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestRound\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"latestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"latestTimestamp\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"address payable\"}],\"name\":\"owner\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"phaseAggregators\",\"inputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint16\",\"name\":\"\",\"internalType\":\"uint16\"}],\"name\":\"phaseId\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"proposeAggregator\",\"inputs\":[{\"type\":\"address\",\"name\":\"_aggregator\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"address\",\"name\":\"\",\"internalType\":\"contract AggregatorV2V3Interface\"}],\"name\":\"proposedAggregator\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedGetRoundData\",\"inputs\":[{\"type\":\"uint80\",\"name\":\"_roundId\",\"internalType\":\"uint80\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint80\",\"name\":\"roundId\",\"internalType\":\"uint80\"},{\"type\":\"int256\",\"name\":\"answer\",\"internalType\":\"int256\"},{\"type\":\"uint256\",\"name\":\"startedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint256\",\"name\":\"updatedAt\",\"internalType\":\"uint256\"},{\"type\":\"uint80\",\"name\":\"answeredInRound\",\"internalType\":\"uint80\"}],\"name\":\"proposedLatestRoundData\",\"inputs\":[]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"setController\",\"inputs\":[{\"type\":\"address\",\"name\":\"_accessController\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"nonpayable\",\"outputs\":[],\"name\":\"transferOwnership\",\"inputs\":[{\"type\":\"address\",\"name\":\"_to\",\"internalType\":\"address\"}]},{\"type\":\"function\",\"stateMutability\":\"view\",\"outputs\":[{\"type\":\"uint256\",\"name\":\"\",\"internalType\":\"uint256\"}],\"name\":\"version\",\"inputs\":[]}]\nexport const wrappedOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\nexport const wooOracleAbi = [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feed_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\n// activity contract abis\nexport const brokerManagerAbi = [{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"SetBroker\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBroker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"broker\",\"type\":\"address\"}],\"name\":\"setBroker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenAirdropAbi = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"poolRouterAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AddWhitelist\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"index\", \"type\": \"uint256\" } ], \"name\": \"AirdropPToken\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"userAddress\", \"type\": \"address\" } ], \"name\": \"addWhitelist\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"airdropPToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getBTokenBalance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"isStartAirdrop\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"ownerAddress\", \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"startAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"stopAirdrop\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalAirdropCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalWhitelistCount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"withdrawBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-enable */","import { deriToNatural, bg } from '../utils'\nimport { MAX_UINT256} from '../config'\nimport { ContractBase } from './contract_base'\nimport { bTokenAbi } from './abis';\n\n\nexport class BToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, bTokenAbi);\n  }\n  // === query ===\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    const allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return bg(allowance).gt(0);\n  }\n\n  // === transaction ===\n  async unlock(accountAddress, poolAddress) {\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wrappedOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WrappedOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wrappedOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  // decimals refers https://docs.chain.link/docs/matic-addresses\n  async getPrice() {\n    // console.log('hit wrapped oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { ContractBase } from \"../contract_base\";\nimport { brokerManagerAbi } from '../abis';\n\nexport class BrokerManager extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, brokerManagerAbi)\n  }\n  // query\n  async getBroker(accountAddress) {\n    return await this._call('getBroker', [accountAddress])\n  }\n\n  // transaction\n  async setBroker(accountAddress, brokerAddress) {\n    return await this._transact(\n      'setBroker',\n      [brokerAddress],\n      accountAddress\n    );\n  }\n}","import { ContractBase } from '../contract_base'\nimport { pTokenAirdropAbi } from '../abis'\n\nexport class PTokenAirdrop extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, pTokenAirdropAbi)\n  }\n  async getBTokenBalance() {\n    return await this._call('getBTokenBalance', [])\n  }\n  async totalWhitelistCount() {\n    return await this._call('totalWhitelistCount', [])\n  }\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n}","import { getOracleConfig } from '../config/oracle';\nimport { normalizeChainId } from './validate';\nimport { DeriEnv } from '../config/env';\nimport { oracleFactory, symbolOracleOffChainFactory, wrappedOracleFactory } from '../factory/oracle';\nimport { deriToNatural, toWei } from './convert';\nimport {\n  getVolatilitySymbols,\n  mapToSymbolInternal,\n  mapToBTokenInternal,\n  normalizeOptionSymbol,\n} from '../config/token';\nimport { PRESERVED_SYMBOLS } from '../config/version';\n\nexport const getPriceInfoForV1 = async(symbol) => {\n  const env = DeriEnv.get();\n  let method = 'get_signed_price'\n  let url\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n  if (symbol) {\n    url = addSymbolParam(baseUrl, symbol);\n  } else {\n    url = baseUrl;\n  }\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n        //return deriToNatural(priceInfo.data.price).toString()\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`getPriceFromV1 exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n}\n\n\nexport const getOracleUrl = (symbol, type='futures') => {\n  const env = DeriEnv.get();\n  //if (/^[0-9]+$/.test(symbolId.toString())) {\n  let method = 'get_signed_price'\n  if (type === 'option') {\n    method = 'get_signed_volatility'\n  }\n  if (PRESERVED_SYMBOLS.includes(symbol)) {\n    method = 'get_price'\n    symbol = `${symbol}_v2_bsc`\n  }\n  let baseUrl =\n    env === 'prod'\n      ? `https://oracle4.deri.finance/${method}`\n      : `https://oracle2.deri.finance/${method}`;\n  const addSymbolParam = (url, symbol) =>\n    `${url}?symbol=${symbol}`;\n\n  if (symbol) {\n    return addSymbolParam(baseUrl, symbol);\n  } else {\n    return baseUrl;\n  }\n};\n\nexport const getPriceFromRest = async(symbol, type='futures') => {\n  const res = await getPriceInfo(symbol, type)\n  if (type === 'futures' && res.price) {\n    return PRESERVED_SYMBOLS.includes(symbol) ? res.price : deriToNatural(res.price).toString()\n  } else if (type === 'option' && res.volatility) {\n    return deriToNatural(res.volatility).toString()\n  } else {\n    throw new Error(`getPrice() invalid format: ${JSON.stringify(res)}`)\n  }\n}\n\n// from oracle rest api\nexport const getPriceInfo = async (symbol, type='futures') => {\n  symbol = mapToBTokenInternal(symbol)\n  let url = getOracleUrl(symbol, type);\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    try {\n      res = await fetch(url, { mode: 'cors', cache: 'no-cache' });\n      if (res.ok) {\n        priceInfo = await res.json();\n        if (priceInfo.status.toString() === '200' && priceInfo.data) {\n          return priceInfo.data\n        }\n      }\n    } catch(err) {\n      //console.log(err.toString())\n      retry -= 1;\n    }\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle info exceed max retry(3): ${symbol} => ${JSON.stringify(priceInfo)}`);\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', version = 'v2') {\n      const key = `${chainId}_${symbol}_${version}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice(chainId, symbol, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\nexport const getPriceInfos = async (symbolList) => {\n  let url = getOracleUrl();\n  let retry = 3;\n  let res, priceInfo;\n  while (retry > 0) {\n    res = await fetch(url, {\n      mode: 'cors',\n      cache: 'no-cache',\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(symbolList),\n    });\n    if (res.ok) {\n      priceInfo = await res.json();\n      if (priceInfo.status.toString() === '200' && priceInfo.data) {\n        return priceInfo.data\n      }\n    }\n    retry -= 1;\n  }\n  if (retry === 0) {\n    throw new Error(`fetch oracle infos exceed max retry(3): ${symbolList} ${JSON.stringify(priceInfo)}`);\n  }\n};\n\nexport const RestOracle = (symbol) => {\n  return {\n    getPrice: async function () {\n      return getPriceFromRest(symbol)\n    }\n  }\n};\n\nexport const getOraclePrice = async (chainId, symbol, version='v2') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  const config = getOracleConfig(version, chainId, symbol);\n  if (config && config.address) {\n    const oracle = oracleFactory(\n      chainId,\n      config.address,\n      symbol,\n      config.decimal,\n    );\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\nexport const getOraclePrice2 = async (chainId, symbol, oracleAddress, version='v2_lite') => {\n  chainId = normalizeChainId(chainId);\n  symbol = mapToSymbolInternal(symbol)\n  if (oracleAddress !== '') {\n    const oracle = wrappedOracleFactory(chainId, oracleAddress)\n    return await oracle.getPrice();\n  } else {\n    // for new added symbol and not updated to config yet\n    const priceInfo = await getPriceInfo(symbol, version);\n    return deriToNatural(priceInfo.price).toString();\n  }\n};\n\n// cache\nexport const getOraclePriceFromCache2 = (function () {\n  let cache = {};\n  return {\n    async get(chainId, symbol = '_', oracleAddress, version = 'v2_lite') {\n      const key = `${chainId}_${symbol}_${oracleAddress}`\n      if (\n        Object.keys(cache).includes(key) &&\n        Math.floor(Date.now() / 1000) - cache[key].timestamp < 5\n      ) {\n        return cache[key].data;\n      } else {\n        const data = await getOraclePrice2(chainId, symbol, oracleAddress, version);\n        cache[key] = {\n          data,\n          timestamp: Math.floor(Date.now() / 1000),\n        };\n        return cache[key].data;\n      }\n    },\n  };\n})();\n\nexport const getOraclePriceForOption = async (chainId, symbol) => {\n  return await getOraclePrice(chainId, normalizeOptionSymbol(symbol), 'option');\n};\n\n// for viewer use\nexport const getOraclePricesForOption = async (chainId, symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolPrices = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getOraclePrice(chainId, i, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return toWei(oracleSymbolPrices[oracleSymbols.indexOf(normalizeOptionSymbol(s))]);\n  });\n};\n\n// for tx use\nexport const getOracleVolatilityForOption = async (symbols) => {\n  const volSymbols = getVolatilitySymbols(symbols)\n  //volSymbols.map((s) => `VOL-${s.toUpperCase()}`)\n\n  const volatilities = await Promise.all(\n    volSymbols.reduce((acc, i) => acc.concat([getPriceInfo(i, 'option')]), [])\n  );\n  //return volatilities;\n  return symbols.map((s) => {\n    return volatilities[volSymbols.indexOf(`VOL-${normalizeOptionSymbol(s)}`)];\n  });\n};\n\n// for viewer use\nexport const getOracleVolatilitiesForOption = async (symbols) => {\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n  const oracleSymbolVolatilities = await Promise.all(\n    oracleSymbols.reduce(\n      (acc, i) => acc.concat([getPriceInfo(`VOL-${i}`, 'option')]),\n      []\n    )\n  );\n  return symbols.map((s) => {\n    return oracleSymbolVolatilities[oracleSymbols.indexOf(normalizeOptionSymbol(s))].volatility;\n  });\n};\n\n// check symbol is used offchain oracle\nexport const checkOffChainOracleSymbol = async (chainId, oracleAddress, symbol) => {\n  try {\n    await symbolOracleOffChainFactory(chainId, oracleAddress).signer()\n    return symbol\n  } catch (err) {\n  }\n  try {\n    await symbolOracleOffChainFactory(chainId, oracleAddress).signatory()\n    return symbol\n  } catch (err) {\n  }\n  return \"\"\n};","import { ContractBase } from \"../contract_base\";\nimport { symbolOracleOffChainAbi } from '../abis';\nimport { bg, deriToNatural } from '../../utils';\n\nexport class SymbolOracleOffChain extends ContractBase {\n  constructor(chainId, address) {\n    super(chainId, address, symbolOracleOffChainAbi);\n  }\n  async getPrice() {\n    const res = await this._call('getPrice', []);\n    return deriToNatural(res);\n  }\n  async signer() {\n    await this._init();\n    const res = await this.contract.methods['signer']().call();\n    return res;\n  }\n  async signatory() {\n    await this._init();\n    const res = await this.contract.methods['signatory']().call();\n    return res;\n  }\n}","import { ContractBase } from \"../contract_base\";\nimport { wooOracleAbi } from '../abis';\nimport { deriToNatural } from \"../../utils\";\n\nexport class WooOracle extends ContractBase {\n  constructor(chainId, address, symbol, decimal='18') {\n    super(chainId, address, wooOracleAbi)\n    this.symbol = symbol\n    this.decimal = decimal\n  }\n\n  async getPrice() {\n    //console.log('hit woo oracle')\n    const res = await this._call('getPrice');\n    if (res) {\n      return deriToNatural(res).toString()\n    }\n  }\n}\n","import { isUsedRestOracle } from '../config/token';\nimport { RestOracle } from '../utils/oracle';\nimport { WrappedOracle } from '../contract/oracle/wrapped_oracle';\nimport { factory } from '../utils/factory';\nimport { SymbolOracleOffChain } from '../contract/oracle/symbol_oracle_off_chain';\nimport { WooOracle } from '../contract/oracle/woo_oracle';\n\nconst wooOracleAddresses = [\n  '0xC686B6336c0F949EAdFa5D61C4aAaE5Fe0687302',\n  '0x60Dda0aD29f033d36189bCe4C818fe9Ce3a95206',\n  '0xa356c0559e0DdFF9281bF8f061035E7097a84Fa4',\n]\n\nexport const oracleFactory = (function () {\n  const instanceMap = {};\n  return (chainId, address, symbol, decimal = '18') => {\n    const key = address;\n    if (Object.keys(instanceMap).includes(key)) {\n      return instanceMap[key];\n    } else {\n      if (isUsedRestOracle(symbol)) {\n        instanceMap[key] = RestOracle(symbol);\n      } else if (wooOracleAddresses.includes(address)) {\n        instanceMap[key] = wooOracleFactory(chainId, address, symbol, decimal);\n      } else if (['56', '137', '97', '80001'].includes(chainId)) {\n        instanceMap[key] = wrappedOracleFactory(chainId, address, symbol, decimal);\n      } else {\n        throw new Error(\n          `please setup oracle contract for the chain(${chainId})`\n        );\n      }\n      return instanceMap[key];\n    }\n  };\n})();\n\nexport const wrappedOracleFactory = factory(WrappedOracle);\nexport const wooOracleFactory = factory(WooOracle);\nexport const symbolOracleOffChainFactory = factory(SymbolOracleOffChain);\n","import {\n  getDBAddress,\n  getDBWormholeAddress,\n  getDBAirdropAddress,\n  DeriEnv,\n} from '../config';\nimport {\n  DatabaseAirdropContract,\n  DatabaseContract,\n  DatabaseWormholeContract,\n} from '../contract';\n\nexport const databaseFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseActivityFactory = (() => {\n  const databaseInstanceMap = {};\n  return () => {\n    const address = DeriEnv.get() === 'prod' ? '0x75E04C816F206939a92AE7B23015ce3ef21aE571' : '0x7C1267188379f57d92e640E519151229E1eA5565'\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseWormholeFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBWormholeAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseWormholeContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n\nexport const databaseAirdropFactory = (() => {\n  const databaseInstanceMap = {};\n  return (useProductionDB = false) => {\n    const address = getDBAirdropAddress(DeriEnv.get(), useProductionDB);\n    const key = address;\n    //console.log('---airdrop key', key)\n    if (Object.keys(databaseInstanceMap).includes(key)) {\n      return databaseInstanceMap[key];\n    }\n    const database = new DatabaseAirdropContract(address);\n    databaseInstanceMap[key] = database;\n    return database;\n  };\n})();\n","import { factory } from '../../utils/factory';\nimport { BToken } from '../../contract/b_token';\n\nexport const bTokenFactory = factory(BToken);","import { deriToNatural, bg } from '../../utils';\nimport { MAX_UINT256 } from '../../config';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class DeriContract extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n  }\n\n  async isUnlocked(accountAddress, poolAddress) {\n    let allowance = await this._call('allowance', [\n      accountAddress,\n      poolAddress,\n    ]);\n    return deriToNatural(allowance).gt(0);\n  }\n  async unlock(accountAddress, poolAddress) {\n    //!this.poolAddress && console.log('please do setAccount(poolAddress) first');\n    return await this._transact(\n      'approve',\n      [poolAddress, MAX_UINT256],\n      accountAddress\n    );\n  }\n\n  async decimals() {\n    return await this._call('decimals');\n  }\n\n  async _balanceOf(address) {\n    return await this._call('balanceOf', [address]);\n  }\n\n  async balanceOf(address) {\n    const [res, decimals] = await Promise.all([\n      this._balanceOf(address),\n      this.decimals(),\n    ]);\n    return bg(res, -decimals);\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI={\"_format\":\"hh-sol-artifact-1\",\"contractName\":\"Vault\",\"sourceName\":\"contracts/Vault.sol\",\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"bytecode\":\"\",\"deployedBytecode\":\"\",\"linkReferences\":{},\"deployedLinkReferences\":{}}\n/* eslint-enable */\n\nexport class MiningVaultPool extends ContractBase {\n  constructor(chainId, contractAddress ) {\n    super(chainId, contractAddress, CONTRACT_ABI['abi']);\n  }\n  async mintDToken(accountAddress, ...args) {\n    await this._init()\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { numberToHex } from '../../utils'\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"miningVault_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v1\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r1\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s1\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"v2\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r2\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s2\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class MiningVaultRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async mint(accountAddress, ...args) {\n    await this._init()\n    //console.log(accountAddress, args)\n    const gas = await this._estimatedGas(\n      'claim',\n      [accountAddress, ...args],\n      accountAddress\n    );\n    //console.log(gas);\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods['claim'](\n          accountAddress,\n          ...args\n        ).encodeABI(),\n      },\n    ];\n    //console.log('txRaw', txRaw)\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n}\n","import { getDeriConfig } from '../../config';\nimport { naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"allowMintBurn_\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ApproveMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Freeze\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CLAIM_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allowMintBurn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fromChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"fromWormhole\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toWormhole\",\"type\":\"address\"}],\"name\":\"freeze\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMigrated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class WormholeContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI );\n  }\n  async freeze(accountAddress, amount, toChainId) {\n    const { wormholeAddress: toWormholeAddress } = getDeriConfig(\n      toChainId\n    );\n    return this._transact(\n      'freeze',\n      [naturalToDeri(amount), toChainId, toWormholeAddress],\n      accountAddress\n    );\n  }\n\n  async mintDeri(\n    accountAddress,\n    amount,\n    fromChainId,\n    fromWormhole,\n    fromNonce,\n    v,\n    r,\n    s\n  ) {\n    return this._transact(\n      'claim',\n      [amount, fromChainId, fromWormhole, fromNonce, v, r, s],\n      accountAddress\n    );\n  }\n}\n","import { DeriContract } from \"../../contract/deri/deri\";\nimport { MiningVaultPool } from \"../../contract/deri/mining_vault_pool\";\nimport { MiningVaultRouter } from \"../../contract/deri/mining_vault_router\";\nimport { WormholeContract } from \"../../contract/deri/wormhole\";\nimport { factory } from \"../../utils\"\n\n\nexport const deriFactory = factory(DeriContract)\n\nexport const wormholeFactory = factory(WormholeContract)\n\nexport const miningVaultRouterFactory = factory(MiningVaultRouter)\n\nexport const miningVaultPoolFactory = factory(MiningVaultPool)","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"_sushi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sushiPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bonusEndBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contractIERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bonusEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingSushi\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accSushiPerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushi\",\"outputs\":[{\"internalType\":\"contractSushiToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sushiPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class SlpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [152, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    const res = await this._call('userInfo', [152, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"removeAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[2]\",\"name\":\"addresses_\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"parameters_\",\"type\":\"uint256[2]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lAmount\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class ClpPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('addLiquidity', args, accountAddress);\n  }\n\n  async removeLiquidity(accountAddress, amount) {\n    const args = [naturalToDeri(amount)];\n    return await this._transact('removeLiquidity', args, accountAddress);\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minAddLiquidity: deriToNatural(res.minAddLiquidity),\n      redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n    };\n  }\n\n  async getStateValues() {\n    const res = await this._call('getStateValues');\n    return {\n      liquidity: deriToNatural(res),\n    };\n  }\n\n  async getLiquidity() {\n    const res = await this._call('getStateValues');\n    if (res && res.liquidity) {\n      return deriToNatural(res.liquidity);\n    }\n    throw new Error(\n      `unable to get liquidity of this clp pool ${this.poolAddress}`\n    );\n  }\n}\n","import { deriToNatural, naturalToDeri } from '../../utils';\nimport { ContractBase } from '../contract_base';\n\n/* eslint-disable */\nconst CONTRACT_ABI = [{\"inputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"_cake\",\"type\":\"address\"},{\"internalType\":\"contract SyrupBar\",\"name\":\"_syrup\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_cakePerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BONUS_MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IBEP20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cake\",\"outputs\":[{\"internalType\":\"contract CakeToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cakePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devaddr\",\"type\":\"address\"}],\"name\":\"dev\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devaddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_to\",\"type\":\"uint256\"}],\"name\":\"getMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"leaveStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrator\",\"outputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingCake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accCakePerShare\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IMigratorChef\",\"name\":\"_migrator\",\"type\":\"address\"}],\"name\":\"setMigrator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"syrup\",\"outputs\":[{\"internalType\":\"contract SyrupBar\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplierNumber\",\"type\":\"uint256\"}],\"name\":\"updateMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class Clp2Pool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n  }\n  async addLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('deposit', args, accountAddress);\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const args = [391, naturalToDeri(amount)];\n    return await this._transact('withdraw', args, accountAddress);\n  }\n  async getLiquidity(accountAddress) {\n    //console.log('hit clp2')\n    const res = await this._call('userInfo', [391, accountAddress]);\n    if (res && res.amount) {\n      return deriToNatural(res.amount);\n    } else {\n      console.log('the amount is not exist ');\n      return '0';\n    }\n  }\n}","import { SlpPool } from '../../contract/lp_pool/slp_pool'\nimport { ClpPool } from '../../contract/lp_pool/clp_pool'\nimport { Clp2Pool } from '../../contract/lp_pool/clp2_pool'\n\nexport const slpPoolFactory = (function () {\n  const slpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(slpPoolInstanceMap).includes(key)) {\n      return slpPoolInstanceMap[key];\n    }\n    const slpPool = new SlpPool(chainId, contractAddress);\n    slpPoolInstanceMap[key] = slpPool;\n    return slpPool;\n  };\n})();\n\nexport const clpPoolFactory = (function () {\n  const clpPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clpPoolInstanceMap).includes(key)) {\n      return clpPoolInstanceMap[key];\n    }\n    const clpPool = new ClpPool(chainId, contractAddress);\n    clpPoolInstanceMap[key] = clpPool;\n    return clpPool;\n  };\n})();\n\nexport const clp2PoolFactory = (function () {\n  const clp2PoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(clp2PoolInstanceMap).includes(key)) {\n      return clp2PoolInstanceMap[key];\n    }\n    const clp2Pool = new Clp2Pool(chainId, contractAddress);\n    clp2PoolInstanceMap[key] = clp2Pool;\n    return clp2Pool;\n  };\n})();\n\n// export const lpPoolFactory = (function () {\n//   const lpPoolInstanceMap = {};\n//   return (chainId, contractAddress, isProvider = false) => {\n//     let key;\n//     if (isProvider) {\n//       key = `${chainId}.${contractAddress}.isProvider`;\n//     } else {\n//       key = `${chainId}.${contractAddress}`;\n//     }\n//     if (Object.keys(lpPoolInstanceMap).includes(key)) {\n//       return lpPoolInstanceMap[key];\n//     } else {\n//       let lpPool;\n//       const { type } = getLpContractAddress(chainId, contractAddress);\n//       console.log(`lp type: ${type}`);\n//       if (type === 'slp') {\n//         lpPool = new SlpPool(chainId, contractAddress, isProvider);\n//       } else if (type === 'clp') {\n//         lpPool = new ClpPool(chainId, contractAddress, isProvider);\n//       }\n//       lpPoolInstanceMap[key] = lpPool;\n//       return lpPool;\n//     }\n//   };\n// })();","import { factory } from '../../utils/factory';\nimport { BrokerManager } from '../../contract/activity/broker_manager';\nimport { PTokenAirdrop } from '../../contract/activity/ptoken_airdrop';\n\nexport const brokerManagerFactory = factory(BrokerManager);\nexport const pTokenAirdropFactory = factory(PTokenAirdrop);\n","import { hexToNumber, fromWei } from '../utils';\nimport { web3Factory } from '../factory';\nimport { normalizeAddress } from '../utils';\n\n/**\n * check ethereum client status for web browser\n * @function\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.isMetaMask - check if it is MetaMask client\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const hasWallet = () => {\n  if (window.ethereum && window.ethereum.isMetaMask) {\n    return { success: true, isMetaMask: true };\n  }\n  return {\n    success: false,\n    error:\n      'The browser is not support ethereum wallet, please install MetaMask to proceed.',\n  };\n};\n\n/**\n *  Connect wallet using MetaMask account\n * @async\n * @function\n * @param {function} [handleChainChanged] - Callback when chainId changed\n * @param {function} [handleAccountChanged]  - callback when account changed\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.chainId - chain Id\n * @returns {string} response.account - account address\n * @returns {boolean} response.[error] - error message when request failed\n */\nexport const connectWallet = async (\n  handleChainChanged,\n  handleAccountChanged\n) => {\n  if (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts',\n    });\n    const chainId = parseInt(\n      await window.ethereum.request({ method: 'net_version' })\n    );\n    // const chainId = hexToNumber(\n    //   await window.ethereum.request({ method: 'eth_chainId' })\n    // );\n    const account = Array.isArray(accounts) && accounts[0];\n\n    // await web3.eth.requestAccounts().then(console.log)\n    window.ethereum.on('accountsChanged', (accounts) => {\n      let account;\n      if (accounts.length > 0) {\n        account = accounts[0];\n      } else {\n        account = '';\n      }\n      if (typeof handleAccountChanged === 'function') {\n        handleAccountChanged(account);\n      } else {\n        window.location.reload();\n      }\n      //console.log('accountChanged', account);\n    });\n    window.ethereum.on('chainChanged', (chainId) => {\n      let res = hexToNumber(chainId);\n      if (typeof handleChainChanged === 'function') {\n        handleChainChanged(res);\n      } else {\n        window.location.reload();\n      }\n      //console.log('chainChanged', res);\n    });\n    return { success: true, account, chainId };\n  }\n  return {\n    success: false,\n    error: 'Cannot connect wallet, please install MetaMask.',\n  };\n};\n\nexport const getUserWalletBalance = async (chainId, walletAddress) => {\n  //const web3 = web3Factory(chainId);\n  walletAddress = normalizeAddress(walletAddress)\n  const web3 = await web3Factory.get(chainId);\n  const balance = await web3.eth.getBalance(walletAddress);\n  return fromWei(balance);\n};\n","import { databaseFactory, databaseAirdropFactory } from '../factory';\nimport {\n  toChecksumAddress,\n  getNetworkName,\n  deriToString,\n  deriToBool,\n  deriToNatural,\n  //getPoolContractAddress,\n} from '../utils';\nimport { getPoolV1Config } from '../config/pool_v1'\n// import { getLiquidityUsed } from \"./contractApi\";\n\nexport const getUserInfo = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v`,\n      `${userAddress}.claim.r`,\n      `${userAddress}.claim.s`,\n      `${userAddress}.claim.valid`,\n    ])\n    .catch((err) => console.log('getUserInfo', err));\n  if (res) {\n    const [chainId, amount, deadline, nonce, v, r, s, valid] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v: deriToString(v),\n      r,\n      s,\n      valid: deriToBool(valid),\n    };\n  }\n};\n\nexport const getUserInfoHarvest = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.harvest.lp`,\n      `${userAddress}.claim.harvest.trade`,\n    ])\n    .catch((err) => console.log('getUserInfoHarvest', err));\n  if (res) {\n    const [harvestLp, harvestTrade] = res;\n    return {\n      lp: deriToNatural(harvestLp).toString(),\n      trade: deriToNatural(harvestTrade).toString(),\n    };\n  }\n};\n\nexport const getUserInfoTotal = async (userAddress) => {\n  const db = databaseFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([`${userAddress}.claim.total`])\n    .catch((err) => console.log('getUserInfoTotal', err));\n  if (res) {\n    const [total] = res;\n    return {\n      total: deriToNatural(total).toString(),\n    };\n  }\n};\n\n/**\n * Get user claim info from database\n * @async\n * @method\n * @param {string} userAddress - account address\n * @returns {Object} response\n * @returns {string} resposne.chainId\n * @returns {BigNumber} response.amount\n * @returns {string} response.deadline\n * @returns {string} response.nonce\n * @returns {string} response.v\n * @returns {string} response.r\n * @returns {string} response.s\n * @returns {bool} response.valid\n * @returns {BigNumber} response.lp\n * @returns {BigNumber} response.trade\n * @returns {string} response.total\n */\nexport const getUserInfoAll = async (userAddress) => {\n  const [userInfo, userInfoHarvest, userInfoTotal] = await Promise.all([\n    getUserInfo(userAddress),\n    getUserInfoHarvest(userAddress),\n    getUserInfoTotal(userAddress),\n  ]);\n  return Object.assign(userInfo, userInfoHarvest, userInfoTotal);\n};\n\n/**\n * Get pool liquidity\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {symbol} response.symbol\n */\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    const { symbol } = getPoolV1Config(chainId, poolAddress)\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol,\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getPoolLiquidityAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory();\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([\n          `${pool.chainId}.${pool.pool}.liquidity${pool.bTokenId}`,\n        ]);\n      } else {\n        return acc.concat([`${pool.chainId}.${pool.pool}.liquidity`]);\n      }\n    }, []);\n    try {\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\nexport const getPoolInfoApyAll = async (pools) => {\n  // use the dev database\n  const db = databaseFactory(true);\n  if (Array.isArray(pools)) {\n    const keys = pools.reduce((acc, pool) => {\n      const poolNetwork = getNetworkName(pool.chainId.toString());\n      if (pool.version === 'v2' && pool.bTokenId) {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy${pool.bTokenId}`]);\n      } else {\n        return acc.concat([`${poolNetwork}.${pool.pool}.apy`]);\n      }\n    }, []);\n    try {\n      console.log('keys', keys)\n      const res = await db.getValues(keys);\n      if (res) {\n        return res.map((i) => deriToNatural(i));\n      }\n    } catch (err) {\n      console.log(err.toString());\n    }\n    return [];\n  }\n};\n\n/**\n * Get pool apy\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getLpPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.apy2`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, apy2, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        apy2: deriToNatural(apy2).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Get apy of the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.apy\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\n// export const getClpPoolInfoApy = async (chainId, poolAddress) => {\n//   const db = databaseFactory(true);\n//   try {\n//     const poolNetwork = getNetworkName(chainId);\n//     const res = await db\n//       .getValues([\n//         `${poolNetwork}.${poolAddress}.apy`,\n//         `${poolNetwork}.${poolAddress}.apy2`,\n//         `${poolNetwork}.${poolAddress}.volume.1h`,\n//         `${poolNetwork}.${poolAddress}.volume.24h`,\n//       ])\n//       .catch((err) => console.log('getPoolInfoApy', err));\n//     if (res) {\n//       const [apy, apy2, volume1h, volume24h] = res;\n//       return {\n//         apy: deriToNatural(apy).toString(),\n//         apy2: deriToNatural(apy2).toString(),\n//         volume1h: deriToNatural(volume1h).toString(),\n//         volume24h: deriToNatural(volume24h).toString(),\n//       };\n//     }\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n/**\n * Get user info of the pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} userAddress\n * @returns {Object} response\n * @returns {string} response.volume1h\n * @returns {string} response.volume24h\n */\nexport const getUserInfoInPool = async (chainId, poolAddress, userAddress) => {\n  const db = databaseFactory(true);\n  //const {poolAddress} = getPoolContractAddress(chainId, poolAddress);\n  userAddress = toChecksumAddress(userAddress);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.${userAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getUserInfoInPool', err));\n    if (res) {\n      const [volume1h, volume24h] = res;\n      return {\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getUserInfoAllForAirDrop = async (userAddress) => {\n  const db = databaseAirdropFactory(true);\n  userAddress = toChecksumAddress(userAddress);\n  const res = await db\n    .getValues([\n      `${userAddress}.claim.chainId`,\n      `${userAddress}.claim.amount`,\n      `${userAddress}.claim.deadline`,\n      `${userAddress}.claim.nonce`,\n      `${userAddress}.claim.v1`,\n      `${userAddress}.claim.r1`,\n      `${userAddress}.claim.s1`,\n      `${userAddress}.claim.v2`,\n      `${userAddress}.claim.r2`,\n      `${userAddress}.claim.s2`,\n      `${userAddress}.claim.valid`,\n      // `${userAddress}.claim.harvest.lp`,\n      // `${userAddress}.claim.harvest.trade`,\n      // `${userAddress}.claim.total`,\n    ])\n    .catch((err) => console.log('getUserInfoAllForAirDrop', err));\n  if (res) {\n    const [\n      chainId,\n      amount,\n      deadline,\n      nonce,\n      v1,\n      r1,\n      s1,\n      v2,\n      r2,\n      s2,\n      valid,\n      // harvestLp,\n      // harvestTrade,\n      // total,\n    ] = res;\n    return {\n      chainId: deriToString(chainId),\n      amount: deriToNatural(amount).toString(),\n      deadline: deriToString(deadline),\n      nonce: deriToString(nonce),\n      v1: deriToString(v1),\n      r1,\n      s1,\n      v2: deriToString(v2),\n      r2,\n      s2,\n      valid: deriToBool(valid),\n      // lp: deriToNatural(harvestLp),\n      // trade: deriToNatural(harvestTrade),\n      // total: deriToString(total),\n    };\n  }\n};\n","import { getDeriConfig } from '../config';\nimport {\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\n/**\n * Get user signature of the wormhole pool\n * @async\n * @method\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getUserWormholeSignature = async (accountAddress) => {\n  const databaseWormhole = databaseWormholeFactory(true);\n  return await databaseWormhole.signature(accountAddress);\n};\n\n/**\n * Check account is unlocked in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isDeriUnlocked = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  return await deri.isUnlocked(accountAddress, wormholeAddress);\n};\n\n/**\n * Get deri balance in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string}\n */\nexport const getDeriBalance = async (chainId, accountAddress) => {\n  const { deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  return (await deri.balanceOf(accountAddress)).toString();\n};","import {\n  miningVaultPoolFactory,\n  miningVaultRouterFactory,\n  wormholeFactory,\n  deriFactory,\n  databaseWormholeFactory,\n} from '../factory';\nimport { getUserInfoAll, getUserInfoAllForAirDrop } from '../api/database_api';\nimport {\n  getDeriConfig,\n  getMiningVaultRouterConfig,\n  getMiningVaultConfig,\n} from '../config';\nimport { naturalToDeri } from '../../shared/utils';\n\n/**\n * Mint DToken in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDToken = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAll(accountAddress);\n  const amount = naturalToDeri(userInfo.amount);\n  const { deadline } = userInfo;\n  const { nonce } = userInfo;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultConfig(chainId);\n    if (miningVaultAddress) {\n      const miningVault = miningVaultPoolFactory(chainId, miningVaultAddress);\n      //miningVault.setAccount(accountAddress);\n      try {\n        const tx = await miningVault.mintDToken(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * freeze Deri in current wormhole pool to the specified chain\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @param {string} toChainId\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const freeze = async (chainId, accountAddress, toChainId, amount) => {\n  const { wormholeAddress } = getDeriConfig(chainId);\n  const wormhole = wormholeFactory(chainId, wormholeAddress);\n  //wormhole.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await wormhole.freeze(accountAddress, amount, toChainId);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Deri in wormhole pool\n * @async\n * @method\n * @param {string} toChainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintDeri = async (toChainId, accountAddress) => {\n  let res;\n  const databaseWormhole = databaseWormholeFactory(true);\n  // const userInfo = await getUserInfoAll(accountAddress);\n  const userInfo = await databaseWormhole.signature(accountAddress);\n  // console.log(userInfo)\n  const { amount } = userInfo;\n  const { fromChainId } = userInfo;\n  const { fromWormhole } = userInfo;\n  const fromNonce = userInfo.nonce;\n  const { v } = userInfo;\n  const { r } = userInfo;\n  const { s } = userInfo;\n  if (userInfo.valid) {\n    const { wormholeAddress } = getDeriConfig(toChainId);\n    if (wormholeAddress) {\n      const wormhole = wormholeFactory(toChainId, wormholeAddress);\n      //wormhole.setAccount(accountAddress);\n      try {\n        const tx = await wormhole.mintDeri(\n          accountAddress,\n          amount,\n          fromChainId,\n          fromWormhole,\n          fromNonce,\n          v,\n          r,\n          s\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the wormhole address in chain ${fromChainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};\n\n/**\n * Unlock the account in the deri pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockDeri = async (chainId, accountAddress) => {\n  const { wormholeAddress, deriAddress } = getDeriConfig(chainId);\n  const deri = deriFactory(chainId, deriAddress);\n  //deri.setAccount(accountAddress).setPool(wormholeAddress);\n  let res;\n  try {\n    const tx = await deri.unlock(accountAddress, wormholeAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Mint Airdrop in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mintAirdrop = async (chainId, accountAddress) => {\n  let res;\n  const userInfo = await getUserInfoAllForAirDrop(accountAddress);\n  const amount = naturalToDeri(userInfo.amount).toString();\n  const { deadline, nonce, v1, r1, s1, v2, r2, s2 } = userInfo;\n  if (userInfo.valid) {\n    const miningVaultAddress = getMiningVaultRouterConfig(chainId);\n    // console.log(\"miningVaultAddress\", miningVaultAddress)\n    // console.log(\"userInfo\", userInfo)\n    if (miningVaultAddress) {\n      const miningVaultRouter = miningVaultRouterFactory(\n        chainId,\n        miningVaultAddress\n      );\n      try {\n        const tx = await miningVaultRouter.mint(\n          accountAddress,\n          amount,\n          deadline,\n          nonce,\n          v1,\n          r1,\n          s1,\n          v2,\n          r2,\n          s2\n        );\n        res = { success: true, transaction: tx };\n      } catch (err) {\n        res = { success: false, error: err };\n      }\n    } else {\n      res = {\n        success: false,\n        error: `cannot find the mining vault router address in chain ${chainId}`,\n      };\n    }\n  } else {\n    res = {\n      success: false,\n      error: 'userinfo is not valid',\n    };\n  }\n  return res;\n};","\n/* eslint-disable */\nexport const perpetualPoolAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[9]\", \"name\": \"parameters\", \"type\": \"uint256[9]\" }, { \"internalType\": \"address[4]\", \"name\": \"addresses\", \"type\": \"address[4]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"info\", \"type\": \"tuple\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"targetPool\", \"type\": \"address\" } ], \"name\": \"approvePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourcePool\", \"type\": \"address\" } ], \"name\": \"executePoolMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"routerAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBToken\", \"outputs\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"decimals\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"discount\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.BTokenInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getBTokenOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLengths\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"decimals0\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"minBToken0Ratio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPool.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbolOracle\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"blength\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"slength\", \"type\": \"uint256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const perpetualPoolRouterAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"addBToken\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"addMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"sourceRouter\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"liquidateWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"liquidatorQualifier\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidityWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"removeMarginWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"swapperAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"discount\", \"type\": \"uint256\" } ], \"name\": \"setBTokenParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"qualifierAddress\", \"type\": \"address\" } ], \"name\": \"setLiquidatorQualifier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolRouter.PriceInfo[]\", \"name\": \"infos\", \"type\": \"tuple[]\" } ], \"name\": \"tradeWithPrices\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const lTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"name\": \"UpdateAsset\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getAsset\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getAssets\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePnl\", \"type\": \"int256\" } ], \"internalType\": \"struct ILToken.Asset\", \"name\": \"asset\", \"type\": \"tuple\" } ], \"name\": \"updateAsset\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const pTokenAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"numSymbols_\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"numBTokens_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargins\", \"outputs\": [ { \"internalType\": \"int256[]\", \"name\": \"\", \"type\": \"int256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getPositions\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numBTokens\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"numSymbols\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumBTokens\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"num\", \"type\": \"uint256\" } ], \"name\": \"setNumSymbols\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"bTokenId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"margins\", \"type\": \"int256[]\" } ], \"name\": \"updateMargins\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPToken.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n/* eslint-disable */","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural, hexToNumber, bg } from '../../shared/utils'\nimport { perpetualPoolAbi } from './abis';\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolAbi)\n\n    this.bTokenCount= 0\n    this.symbolCount= 0\n\n    this.lTokenAddress = ''\n    this.pTokenAddress = ''\n    this.routerAddress = ''\n    this.protocolFeeCollector = ''\n\n    this.protocolFeeAccrued = 0\n  }\n\n  async _update() {\n    await Promise.all([\n      this.getLengths(),\n      this.getAddresses(),\n      this.getParameters(),\n    ]);\n  }\n\n  async getLengths() {\n    try {\n      const res = await this._call('getLengths')\n      //console.log(res[0])\n      if (res[0] && res[1]) {\n        this.bTokenCount= parseInt(res[0])\n        this.symbolCount= parseInt(res[1])\n      }\n    } catch(err) {\n      throw new Error(`PerpetualPool#_getLength error: ${err}`)\n    }\n  }\n  async getAddresses() {\n    try {\n      const res = await this._call('getAddresses')\n      this.lTokenAddress = res.lTokenAddress\n      this.pTokenAddress = res.pTokenAddress\n      this.routerAddress = res.routerAddress\n      this.protocolFeeCollector = res.protocolFeeCollector\n    } catch (err) {\n      throw new Error(`PerpetualPool#_getAddress error: ${err}`)\n    }\n  }\n  async getParameters() {\n    const res = await this._call('getParameters')\n    return {\n      decimals0: res.decimals0,\n      minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getProtocolFeeAccrued() {\n    const res =  await this._call('getProtocolFeeAccrued')\n    this.protocolFeeAccrued = deriToNatural(res)\n  }\n  async getBToken(bTokenId) {\n    try {\n      //bTokenId = parseInt(bTokenId)\n      const res = await this._call('getBToken', [bTokenId]);\n      return {\n        bTokenAddress: res.bTokenAddress,\n        swapperAddress: res.bTokenAddress,\n        oracleAddress: res.oracleAddress,\n        decimals: res.decimals,\n        discount: deriToNatural(res.discount),\n        price: deriToNatural(res.price),\n        liquidity: deriToNatural(res.liquidity),\n        pnl: deriToNatural(res.pnl),\n        cumulativePnl: deriToNatural(res.cumulativePnl),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getBToken error: ${err}`);\n    }\n  }\n  async getBTokenOracle(bTokenId) {\n    //bTokenId = parseInt(bTokenId)\n    return await this._call('getBTokenOracle', [bTokenId])\n  }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res =  await this._call('getSymbol', [symbolId])\n      return {\n        symbol: res.symbol,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n  async getSymbolOracle(symbolId) {\n    //symbolId = parseInt(symbolId)\n    return await this._call('getSymbolOracle', [symbolId])\n  }\n\n  // trade history query methods\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  // get block number when last updated\n  async getLastUpdatedBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getStorageAt(this.contractAddress, 0)\n    //console.log('res', hexToNumber(res))\n    return hexToNumber(res)\n  }\n\n  // get block number when last updated\n  async getLatestBlockNumber() {\n    await this._init()\n    const res = await this.web3.eth.getBlockNumber()\n    //console.log('res', res)\n    return res\n  }\n\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    let amount\n    if (['56', '97','127', '80001'].includes(this.chainId)) {\n      amount = 999\n    } else {\n      amount = 4999\n    }\n    if ((fromBlock + amount) > to) {\n      amount = to - fromBlock\n    }\n    while (fromBlock <= to) {\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock: fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if ((fromBlock + amount) > to) {\n        amount = to - fromBlock\n      }\n    }\n    return events;\n  }\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { naturalToDeri } from '../../shared/utils'\nimport { MAX_INT256 } from '../../shared/config';\nimport { perpetualPoolRouterAbi} from './abis';\n\nexport class PerpetualPoolRouter extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolRouterAbi)\n    this.poolAddress = ''\n  }\n\n  // === query ===\n  async pool() {\n    this.poolAddress = await this._call('pool');\n    return this.poolAddress\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidity',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeLiquidity(accountAddress, bTokenId, amount, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidity',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async addMargin(accountAddress, bTokenId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMargin',\n      [bTokenId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, bTokenId, amount, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      //console.log('->', MAX_INT256)\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, MAX_INT256],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMargin',\n        [bTokenId, naturalToDeri(amount)],\n        accountAddress\n      );\n    }\n  }\n\n  async trade(accountAddress, symbolId, amount) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(amount)],\n      accountAddress\n    );\n  }\n\n  // with prices\n  async addLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addLiquidityWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n  async removeLiquidityWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (isMaximum) {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeLiquidityWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async addMarginWithPrices(accountAddress, bTokenId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'addMarginWithPrices',\n      [bTokenId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  async removeMarginWithPrices(accountAddress, bTokenId, amount, priceInfos, isMaximum) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    if (isMaximum) {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, MAX_INT256, priceInfos],\n        accountAddress\n      );\n    } else {\n      return await this._transact(\n        'removeMarginWithPrices',\n        [bTokenId, naturalToDeri(amount), priceInfos],\n        accountAddress\n      );\n    }\n  }\n\n  async tradeWithPrices(accountAddress, symbolId, amount, priceInfos) {\n    if (!this.poolAddress) {\n      await this.pool()\n    }\n    return await this._transact(\n      'tradeWithPrices',\n      [symbolId, naturalToDeri(amount), priceInfos],\n      accountAddress\n    );\n  }\n\n  // async liquidate(acountAddress) {\n  //   if (!this.poolAddress) {\n  //     await this.pool()\n  //   }\n  //   return await this._transact(\n  //     'liquidate',\n  //     [accountAddress],\n  //     accountAddress\n  //   );\n  // }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { lTokenAbi } from './abis';\n\nconst processAsset = (res) => {\n  return {\n    liquidity: deriToNatural(res[0]),\n    pnl: deriToNatural(res[1]),\n    lastCumulativePnl: deriToNatural(res[2]),\n  }\n}\nexport class LToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getAsset(accountAddress, bTokenId) {\n    const res = await this._call('getAsset', [accountAddress, bTokenId]);\n    if (Array.isArray(res)) {\n      return processAsset(res)\n    } else {\n      console.log('address', this.contractAddress)\n      console.log('res', res)\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress} ${bTokenId})`)\n    }\n  }\n  async getAssets(accountAddress) {\n    const res = await this._call('getAssets', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map(i => processAsset(i))\n    } else {\n      throw new Error(`LToken#getAsset: invalid result with (${accountAddress})`)\n    }\n  }\n\n  // === transaction ===\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PToken extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async getMargin(accountAddress, bTokenId) {\n    const res = await this._call('getMargin', [accountAddress, bTokenId]);\n    return deriToNatural(res)\n  }\n  async getMargins(accountAddress) {\n    const res = await this._call('getMargins', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => deriToNatural(i))\n    }\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getPositions(accountAddress) {\n    const res = await this._call('getPositions', [accountAddress]);\n    if (Array.isArray(res)) {\n      return res.map((i) => processPosition(i))\n    }\n  }\n\n  // === transaction ===\n}","import {\n  PerpetualPool,\n  PerpetualPoolRouter,\n  LToken,\n  PToken,\n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolFactory = factory(PerpetualPool)\n\nexport const perpetualPoolRouterFactory = factory(PerpetualPoolRouter)\n\nexport const lTokenFactory = factory(LToken)\n\nexport const pTokenFactory = factory(PToken)","import { normalizeAddress, normalizeChainId } from \"../utils\"\nimport { DeriEnv, getBrokerConfig, getPoolConfig2 } from '../config';\nimport { brokerManagerFactory, pTokenAirdropFactory } from \"../factory\"\nimport { pTokenFactory } from \"../../v2/factory\"\n\nconst AIRDROP_PTOKEN_ADDRESS_BSC = '0x94e7f76eb542657Bc8d2a9aA321D79F66F7C8FfA'\nconst AIRDROP_PTOKEN_ADDRESS_BSCTESTNET = '0x3b88a9B5896a49AEb23Ca2Ee9892d28d3B8De5f6'\n\n\nexport const getBroker = async(chainId, accountAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  const {address: brokerAddress} = getBrokerConfig('v2', chainId)\n  let res = ''\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerAddress)\n    res = await brokerManager.getBroker(accountAddress)\n  } catch (err) {\n    console.log(err)\n  }\n  return res\n}\n\nexport const setBroker = async(chainId, accountAddress, brokerAddress) => {\n  chainId = normalizeChainId(chainId)\n  accountAddress = normalizeAddress(accountAddress)\n  brokerAddress = normalizeAddress(brokerAddress);\n  const {address: brokerManagerAddress} = getBrokerConfig('v2', chainId)\n  let res\n  try {\n    const brokerManager = brokerManagerFactory(chainId, brokerManagerAddress)\n    const tx = await brokerManager.setBroker(accountAddress, brokerAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nconst getAirdropPTokenAddress = () => {\n  const env = DeriEnv.get()\n  if (env === 'prod') {\n    return AIRDROP_PTOKEN_ADDRESS_BSC\n  } else {\n    return AIRDROP_PTOKEN_ADDRESS_BSCTESTNET\n  }\n}\n\nexport const airdropPToken = async (chainId, accountAddress) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    const tx = await pTokenAirdropFactory(chainId, contractAddress).airdropPToken(accountAddress)\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res\n}\n\nexport const getAirdropPTokenWhitelistCount = async (chainId) => {\n  let res\n  let contractAddress = getAirdropPTokenAddress()\n  try {\n    res = await pTokenAirdropFactory(chainId, contractAddress).totalWhitelistCount()\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}\n\nexport const isUserPTokenExist = async (chainId, poolAddress, accountAddress) => {\n  let res = ''\n  try {\n    const {pToken:pTokenAddress} = getPoolConfig2(poolAddress)\n    const pToken = pTokenFactory(chainId, pTokenAddress)\n    const result = await pToken.balanceOf(accountAddress)\n    if (result === '1') {\n      res = true\n    } else if (result === '0') {\n      res = false\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return res\n}","import { getLpConfig } from '../config';\nimport { bTokenFactory, slpPoolFactory } from '../factory/contract';\n\n/**\n * Get liquidity info of SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getSlpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    //bToken.setAccount(accountAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      slpPool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no SlpPool address, please check');\n  return {};\n};\n\n/**\n * Add liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity to SLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeSlpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  // console.log('pool', poolAddress, bTokenAddress)\n  if (bTokenAddress) {\n    const slpPool = slpPoolFactory(chainId, poolAddress);\n    //slpPool.setAccount(accountAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    //bToken.setAccount(accountAddress);\n    try {\n      const tx = await slpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of slp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isSlpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockSlp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Slp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getSlpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bTokenFactory, clp2PoolFactory } from '../factory/contract';\nimport { getLpConfig } from '../config/pool_v1';\n\nexport const getClp2LiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    const [liquidity, bTokenBalance, shares] = await Promise.all([\n      bToken.balanceOf(poolAddress),\n      bToken.balanceOf(accountAddress),\n      clp2Pool.getLiquidity(accountAddress),\n    ]);\n\n    return {\n      poolLiquidity: liquidity.toString(),\n      bTokenBalance: bTokenBalance.toString(),\n      shares: shares.toString(),\n      shareValue: '1',\n    };\n  }\n  console.log('no Clp2Pool address, please check');\n  return {};\n};\n\nexport const addClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.addLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const removeClp2Liquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clp2Pool = clp2PoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clp2Pool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp2 pool' };\n  }\n  return res;\n};\n\nexport const isClp2Unlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\nexport const unlockClp2 = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const getClp2WalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import { bg, getDailyBlockNumber } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  return bg(\n    ((tradersNetVolume * price * multiplier) / liquidity) * poolMarginRatio\n  ).abs();\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  return ((tradersNetVolume * price * multiplier) / liquidity) *\n  fundingRateCoefficient;\n}\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  return bg(fundingRate).times(annualBlockCount);\n};\n","import { bg, max, min } from '../../shared/utils';\n\nexport * from './fundingRate';\n\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  tradersNetVolume,\n  tradersNetCost,\n  multiplier,\n  minPoolMarginRatio,\n  price\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const value = bg(tradersNetVolume).times(price).times(multiplier);\n  const removable = bg(liquidity)\n    .plus(tradersNetCost)\n    .minus(value)\n    .minus(value.abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  bg(volume).eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return bg(volume).abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return bg(volume).times(price).times(multiplier).minus(cost);\n}\n\nexport const calculateMaxWithdrawMargin = (\n  price,\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  if (volume.eq(0)) {\n    return margin;\n  }\n  const held = calculateMarginHeld(\n    price,\n    volume,\n    multiplier,\n    minInitialMarginRatio\n  );\n  const pnl = calculatePnl(price, volume, multiplier, cost);\n  const withdrawable = max(bg(margin).plus(pnl).minus(held.times(1.02)), bg(0));\n  return withdrawable;\n};\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = bg(cost).minus(margin).div(volume).div(multiplier);\n  let res = bg(volume).gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio))\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio));\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  price,\n  margin,\n  volume,\n  liquidity,\n  tradersNetVolume,\n  multiplier,\n  minPoolMarginRatio,\n  minInitialMarginRatio,\n  newVolume,\n  amount\n) => {\n  const minMargin = bg(volume)\n    .plus(newVolume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(minInitialMarginRatio);\n  const poolMaxVolume = bg(liquidity)\n    .div(minPoolMarginRatio)\n    .div(price)\n    .div(multiplier);\n  if (bg(margin).plus(amount).gte(minMargin)) {\n    if (\n      bg(newVolume).lte(poolMaxVolume.minus(tradersNetVolume)) &&\n      bg(newVolume).gte(poolMaxVolume.negated().minus(tradersNetVolume))\n    ) {\n      return { success: true };\n    }\n    return { success: false, message: 'Pool insufficient liquidity' };\n  }\n  return { success: false, message: 'Trader insufficient margin' };\n};\n","import {\n  validateArgs,\n  deriToNatural,\n  numberToHex,\n  bg,\n} from '../../shared/utils';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  processFundingRate,\n} from '../calculation';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle';\n\n/* eslint-disable */\nconst POOL_ABI=[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"DepositMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"WithdrawMargin\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"depositMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInitialMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAddLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redemptionFeeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLiquidationReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationCutRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceDelayAllowance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateValues\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"cumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"cumuFundingRateBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[4]\",\"name\":\"addresses_\",\"type\":\"address[4]\"},{\"internalType\":\"uint256[12]\",\"name\":\"parameters_\",\"type\":\"uint256[12]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"tradeWithMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"withdrawMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PerpetualPool extends ContractBase {\n  constructor(chainId, contractAddress, isProvider) {\n    super(chainId, contractAddress, POOL_ABI, isProvider);\n    // this.contract = new this.web3.eth.Contract(POOL_ABI, this.contractAddress);\n  }\n\n  async symbol() {\n    return await this._call('symbol');\n  }\n\n  async getStateValues() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getStateValues');\n      //console.log(\"getStateValues() raw:\", res)\n      result = {\n        cumuFundingRate: deriToNatural(res.cumuFundingRate),\n        cumuFundingRateBlock: bg(res.cumuFundingRateBlock),\n        liquidity: deriToNatural(res.liquidity),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      result = {\n        cumuFundingRate: defaultValue,\n        cumuFundingRateBlock: defaultValue,\n        liquidity: defaultValue,\n        tradersNetCost: defaultValue,\n        tradersNetVolume: defaultValue,\n      };\n      console.log(`getStateValues: ${err}`);\n    }\n    return result;\n  }\n\n  async getParameters() {\n    let result;\n    const defaultValue = bg(0);\n    try {\n      const res = await this._call('getParameters');\n      // console.log(\"getParameters() raw: \", res)\n      result = {\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n        minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n        minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n        minAddLiquidity: deriToNatural(res.minAddLiquidity),\n        redemptionFeeRatio: deriToNatural(res.redemptionFeeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        minLiquidationReward: deriToNatural(res.minLiquidationReward),\n        maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n        liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n        priceDelayAllowance: bg(res.priceDelayAllowance),\n      };\n    } catch (err) {\n      result = {\n        multiplier: defaultValue,\n        feeRatio: defaultValue,\n        minPoolMarginRatio: defaultValue,\n        minInitialMarginRatio: defaultValue,\n        minMaintenanceMarginRatio: defaultValue,\n        minAddLiquidity: defaultValue,\n        redemptionFeeRatio: defaultValue,\n        fundingRateCoefficient: defaultValue,\n        minLiquidationReward: defaultValue,\n        maxLiquidationReward: defaultValue,\n        liquidationCutRatio: defaultValue,\n        priceDelayAllowance: defaultValue,\n      };\n      console.log(`getParameters: ${err}`);\n    }\n    return result;\n  }\n\n  _getTransactionReceipt(tx) {\n    const self = this;\n    return function _transactionReceipt(resolve, reject) {\n      self.web3.eth.getTransactionReceipt(tx, (error, receipt) => {\n        if (error) {\n          reject(error);\n        } else if (receipt == null) {\n          setTimeout(() => _transactionReceipt(resolve, reject), 500);\n        } else if (receipt.status === false) {\n          receipt.errorMessage = 'Transaction failed';\n          reject(receipt);\n        } else {\n          resolve(receipt);\n        }\n      });\n    };\n  }\n  async _estimatedGas(method, args, accountAddress) {\n    // !this.accountAddress &&\n    //   console.log('please do setAccount(accountAddress) first');\n    const MAX_GAS_AMOUNT = 582731\n    let gas = 0;\n    for (let i = 0; i < 2; i++) {\n      try {\n        gas = await this.contract.methods[method](...args).estimateGas({\n          from: accountAddress,\n        });\n        gas = parseInt(gas * 1.25);\n        break;\n      } catch (err) {\n        //console.log(\"err\", err);\n      }\n    }\n    if (gas == 0) gas = MAX_GAS_AMOUNT;\n    if (gas > MAX_GAS_AMOUNT) gas = MAX_GAS_AMOUNT;\n    return gas;\n  }\n\n  // overwrite to use signed price to tx\n  async _transact(method, args = [], accountAddress) {\n    await this._init()\n    const symbol = await this.symbol()\n    const oracle = await getPriceInfoForV1(symbol);\n    let signed = [oracle.timestamp, oracle.price, parseInt(oracle.v).toString(), oracle.r, oracle.s];\n\n    const gas = await this._estimatedGas(method, [...args, ...signed], accountAddress)\n\n    let txRaw = [\n      {\n        from: accountAddress,\n        to: this.contractAddress,\n        gas: numberToHex(gas),\n        value: numberToHex('0'),\n        data: this.contract.methods[method](...args, ...signed).encodeABI(),\n      },\n    ];\n    let tx = await window.ethereum.request({\n      method: 'eth_sendTransaction',\n      params: txRaw,\n    });\n    return await new Promise(this._getTransactionReceipt(tx));\n  }\n\n  async getFundingRate() {\n    let price, fundingRate, fundingRatePerBlock, liquidityUsed;\n    const symbol = await this.symbol()\n    price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n    try {\n      const stateValues = await this.getStateValues();\n      const parameters = await this.getParameters();\n      const { tradersNetVolume, liquidity } = stateValues;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        minPoolMarginRatio,\n      } = parameters;\n      const args1 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        fundingRateCoefficient,\n      ];\n      if (!validateArgs(...args1)) {\n        fundingRate = '0';\n        fundingRatePerBlock = '0';\n      } else {\n        fundingRatePerBlock = calculateFundingRate(...args1);\n        fundingRate = processFundingRate(this.chainId, fundingRatePerBlock);\n      }\n      const args2 = [\n        tradersNetVolume,\n        price,\n        multiplier,\n        liquidity,\n        minPoolMarginRatio,\n      ];\n      if (!validateArgs(...args2)) {\n        liquidityUsed = '0';\n      } else {\n        liquidityUsed = calculateLiquidityUsed(...args2);\n      }\n      return {\n        price,\n        multiplier: multiplier.toString(),\n        fundingRate: fundingRate,\n        fundingRatePerBlock: fundingRatePerBlock,\n        tradersNetVolume: tradersNetVolume.toString(),\n        liquidity: liquidity.toString(),\n        fundingRateCoefficient: fundingRateCoefficient.toString(),\n        liquidityUsed: liquidityUsed,\n        poolMarginRatio: minPoolMarginRatio.toString(),\n      };\n    } catch (err) {\n      console.log('PerpetualPool#gerFundingRate():', err);\n      throw err;\n    }\n  }\n\n  async depositMargin(accountAddress, amount) {\n    let res;\n    try {\n      let tx = await this._transact(\n        'depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [amount],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      console.log('here');\n      res = { success: false, error: err };\n    }\n    return res;\n  }\n\n  // util methods, it's extract shared/utils now\n  async _getBlockInfo(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n\n  async _getPastEvents(eventName, filter = {}, fromBlock = 0, to = 0) {\n    await this._init()\n    let events = [];\n    //let toBlock = await this._getBlockInfo(\"latest\");\n    //toBlock = toBlock.number;\n    let amount;\n    if (['56', '137', '97', '80001'].includes(this.chainId)) {\n      amount = 999;\n    } else {\n      amount = 4999;\n    }\n    if (fromBlock + amount > to) {\n      amount = to - fromBlock;\n    }\n    while (fromBlock <= to) {\n      //console.log('tick')\n      let es = await this.contract.getPastEvents(eventName, {\n        filter: filter,\n        fromBlock,\n        toBlock: fromBlock + amount,\n      });\n      for (let e of es) {\n        events.push(e);\n      }\n      fromBlock += amount + 1;\n      if (fromBlock + amount > to) {\n        amount = to - fromBlock;\n      }\n    }\n    return events;\n  }\n  async _getTimeStamp(blockNumber) {\n    await this._init()\n    return await this.web3.eth.getBlock(blockNumber);\n  }\n  _calculateFee(volume, price, multiplier, feeRatio) {\n    return bg(volume)\n      .abs()\n      .times(price)\n      .times(multiplier)\n      .times(feeRatio)\n      .toString();\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural, bg } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumuFundingRate\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"margin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class PTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async getPositionInfo(accountAddress) {\n    let result = {};\n    try {\n      const res = await this._call('getPosition(address)', [accountAddress]);\n      //console.log(\"getPositionInfo() raw:\", res)\n      result = {\n        volume: deriToNatural(res[0]),\n        cost: deriToNatural(res[1]),\n        lastCumuFundingRate: deriToNatural(res[2]),\n        margin: deriToNatural(res[3]),\n        lastUpdateTimestamp: bg(res[4]),\n      };\n    } catch (err) {\n      result = {\n        volume: bg(0),\n        cost: bg(0),\n        lastCumuFundingRate: bg(0),\n        margin: bg(0),\n        lastUpdateTimestamp: bg(0),\n      };\n      //console.log(`getPositionInfo: ${err}`);\n    }\n    return result;\n  }\n\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { deriToNatural } from '../../shared/utils';\n\n/* eslint-disable */\nconst CONTRACT_ABI=[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n/* eslint-enable */\n\nexport class LTokenContract extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, CONTRACT_ABI);\n    //this.poolAddress = poolAddress;\n    // this.contract = new this.web3.eth.Contract(\n    //   CONTRACT_ABI,\n    //   this.contractAddress\n    // );\n  }\n\n  async balance(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async balanceOf(accountAddress) {\n    const res = deriToNatural(await this._call('balanceOf', [accountAddress]));\n    //console.log(\"> lToken balance\", res.toString())\n    return res;\n  }\n\n  async totalSupply() {\n    const res = deriToNatural(await this._call('totalSupply'));\n    //console.log(\"> lToken totalSupply\", res.toString())\n    return res;\n  }\n}\n","import { PerpetualPool } from './contract/perpetual_pool';\n//import { BTokenContract } from './contract/bToken';\nimport { PTokenContract } from './contract/p_token';\nimport { LTokenContract } from './contract/l_token';\n\nexport const perpetualPoolFactory = (() => {\n  const perpetualPoolInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(perpetualPoolInstanceMap).includes(key)) {\n      return perpetualPoolInstanceMap[key];\n    }\n    const perpetualPool = new PerpetualPool(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PerpetualPoolContract\");\n    perpetualPoolInstanceMap[key] = perpetualPool;\n    return perpetualPool;\n  };\n})();\n\nexport const pTokenFactory = (function () {\n  const pTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(pTokenInstanceMap).includes(key)) {\n      return pTokenInstanceMap[key];\n    }\n    const pToken = new PTokenContract(\n      chainId,\n      contractAddress,\n    );\n    // console.log(\"new PTokenContract\")\n    pTokenInstanceMap[key] = pToken;\n    return pToken;\n  };\n})();\n\nexport const lTokenFactory = (function () {\n  const lTokenInstanceMap = {};\n  return (chainId, contractAddress) => {\n    let key = `${chainId}.${contractAddress}`;\n    if (Object.keys(lTokenInstanceMap).includes(key)) {\n      return lTokenInstanceMap[key];\n    }\n    const lToken = new LTokenContract(\n      chainId,\n      contractAddress,\n    );\n    lTokenInstanceMap[key] = lToken;\n    return lToken;\n  };\n})();\n\n","import {\n  bTokenFactory,\n  clpPoolFactory,\n} from '../factory/contract';\nimport { lTokenFactory } from '../../v1/factory';\nimport { bg } from '../utils';\nimport { getLpConfig } from '../config';\n\n/**\n * Get liquidity Info of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getClpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getLpConfig(chainId, poolAddress);\n  const clpPool = clpPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { liquidity } = await clpPool.getStateValues();\n  //console.log(liquidity);\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: (lTokenTotalSupply.eq(0)\n      ? bg(0)\n      : liquidity.div(lTokenTotalSupply)\n    ).toString(),\n    maxRemovableShares: lTokenBalance.toString(),\n  };\n};\n\n/**\n * Add liquidity to the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    //const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n    try {\n      const tx = await clpPool.addLiquidity(accountAddress, amount);\n      console.log(tx, typeof tx);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity of the CLP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeClpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  if (bTokenAddress) {\n    const clpPool = clpPoolFactory(chainId, poolAddress);\n    try {\n      const tx = await clpPool.removeLiquidity(accountAddress, amount);\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'unable to get bToken address of clp pool' };\n  }\n  return res;\n};\n\n/**\n * Check account is unlocked in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isClpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Unlock the account in the Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockClp = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Get account balance in Clp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getClpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getLpConfig(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n","import {\n  getSlpLiquidityInfo,\n  getSlpWalletBalance,\n  isSlpUnlocked,\n} from './slp_pool_api';\nimport {\n  getClp2LiquidityInfo,\n  getClp2WalletBalance,\n  isClp2Unlocked,\n} from './clp2_pool_api';\nimport {\n  getClpLiquidityInfo,\n  getClpWalletBalance,\n  isClpUnlocked,\n} from './clp_pool_api';\nimport { getLpConfig } from '../config'\n\n/**\n * Get liquidity info of LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.liquidity\n * @returns {string} response.bTokenBalance\n * @returns {string} response.shares\n */\nexport const getLpLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpLiquidityInfo(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2LiquidityInfo(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpLiquidityInfo(): invalid lp type ${type}`);\n  }\n};\n\n\n/**\n * Check account is unlocked in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isLpUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await isSlpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await isClpUnlocked(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await isClp2Unlocked(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`isLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Get account balance in lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} accountAddress\n * @returns {string} Account balance\n */\nexport const getLpWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await getSlpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await getClpWalletBalance(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await getClp2WalletBalance(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`getLpWalletBalance(): invalid lp type ${type}`);\n  }\n};\n","import { getLpConfig } from '../config';\nimport { unlockSlp, addSlpLiquidity, removeSlpLiquidity } from './slp_pool_api';\nimport { unlockClp, addClpLiquidity, removeClpLiquidity } from './clp_pool_api';\nimport {\n  unlockClp2,\n  addClp2Liquidity,\n  removeClp2Liquidity,\n} from './clp2_pool_api';\n\n/**\n * Unlock the account in the lp pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlockLp = async (chainId, poolAddress, accountAddress) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await unlockSlp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp') {\n    return await unlockClp(chainId, poolAddress, accountAddress);\n  } else if (type === 'clp2') {\n    return await unlockClp2(chainId, poolAddress, accountAddress);\n  } else {\n    console.log(`unlockLp(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Add liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await addSlpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp') {\n    return await addClpLiquidity(chainId, poolAddress, accountAddress, amount);\n  } else if (type === 'clp2') {\n    return await addClp2Liquidity(chainId, poolAddress, accountAddress, amount);\n  } else {\n    console.log(`addLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n\n/**\n * Remove liquidity to LP pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLpLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const { type } = getLpConfig(chainId, poolAddress);\n  if (type === 'slp') {\n    return await removeSlpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp') {\n    return await removeClpLiquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else if (type === 'clp2') {\n    return await removeClp2Liquidity(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount\n    );\n  } else {\n    console.log(`removeLpLiquidity(): invalid lp type ${type}`);\n  }\n};\n","import { DeriEnv } from \"../shared/config/env\";\nimport { normalizeChainId } from \"../shared/utils/validate\";\n\nexport const openPoolChainIds = () => {\n  const configs = {\n    prod: ['56'],\n    dev: ['97'],\n  }\n  const env = DeriEnv.get()\n  if (Array.isArray(configs[env])) {\n    return configs[env]\n  } else {\n    throw new Error(`-- invalid env for openPoolChainIds: ${env}`)\n  }\n};\n\nexport const getPoolV2LiteManagerConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: \"56\",\n        address: \"0x5e3318aeaa226dc11571f19b96240d88b64702dc\",\n        initialBlock: \"10133599\",\n      },\n    ],\n    dev: [\n      {\n        chainId: \"97\",\n        address: \"0x7A55ed377361802fad1Ae3d944cDbAA3c7694757\",\n        initialBlock: \"11034400\",\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getPoolV2LiteManagerConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\nexport const getOracleFactoryChainlinkConfig = (chainId) => {\n  chainId = normalizeChainId(chainId)\n  const configs = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x5052fa10d68F4146B66bc15fd8cCb1674B482026',\n        initialBlock: '11017943',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0xFD1f981375f95e971E8fC0756f4daAF5784e5376',\n        initialBlock: '12440610',\n      },\n    ],\n  };\n  const env = DeriEnv.get();\n  const res = configs[env].find((c) => c.chainId === chainId);\n  if (res && res.address) {\n    return res\n  } else {\n    throw new Error(`-- getOracleFactoryChainlinkConfig: cannot find config with env(${env}) and chainId(${chainId})`)\n  }\n};\n\n\nexport const expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};","export const perpetualPoolLiteAbi = [{\"inputs\":[{\"internalType\":\"uint256[7]\",\"name\":\"parameters\",\"type\":\"uint256[7]\"},{\"internalType\":\"address[5]\",\"name\":\"addresses\",\"type\":\"address[5]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"AddMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"ExecuteMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"Liquidate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"migrationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"PrepareMigration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProtocolFeeCollection\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"}],\"name\":\"RemoveMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"multiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"addSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"approveMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"}],\"name\":\"executeMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidatorQualifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"protocolFeeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLiquidity\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"minPoolMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minInitialMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minMaintenanceMarginRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"minLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"maxLiquidationReward\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"liquidationCutRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"protocolFeeCollectRatio\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolFeeAccrued\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getSymbol\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"multiplier\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"feeRatio\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"fundingRateCoefficient\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cumulativeFundingRate\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetVolume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"tradersNetCost\",\"type\":\"int256\"}],\"internalType\":\"struct IPerpetualPoolLite.SymbolInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migrationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"graceDays\",\"type\":\"uint256\"}],\"name\":\"prepareMigration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"removeMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracleAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"feeRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingRateCoefficient\",\"type\":\"uint256\"}],\"name\":\"setSymbolParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"tradeVolume\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IPerpetualPoolLite.OraclePrice[]\",\"name\":\"prices\",\"type\":\"tuple[]\"}],\"name\":\"trade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\n\nexport const perpetualPoolLiteManagerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolTemplate_\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector_\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"protocolFeeCutRatio_\", \"type\": \"uint256\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"creator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"CreatePool\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pairedTokenAddress\", \"type\": \"address\" } ], \"name\": \"createPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getNumPools\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"poolTemplate\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"name\": \"pools\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCollector\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"protocolFeeCutRatio\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const chainlinkFeedAbi = [ {\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}, {\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]","import { ContractBase } from '../../shared/contract/contract_base';\nimport { chainlinkFeedAbi } from './abis';\n\nexport class ChainlinkFeed extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, chainlinkFeedAbi);\n  }\n  async symbol() {\n    const res = await this._call('description');\n    return res.split('/').map((s) => s.trim()).join('')\n  }\n}\n","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryChainlinkAbi = [{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"}],\"name\":\"AddFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldController\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"ChangeController\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"CreateOracle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"symbols\",\"type\":\"string[]\"},{\"internalType\":\"address[]\",\"name\":\"feeds\",\"type\":\"address[]\"}],\"name\":\"addFeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"createOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"getOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setNewController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/convert.js'\nimport { oracleFactoryChainlinkAbi } from '../abi/oracleFactoryChainlinkAbi.js'\n\nexport class OracleFactoryChainlink extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryChainlinkAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getFeed(symbol) {\n    const res = await this._call('getFeed', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol) {\n    return await this._transact('createOracle', [symbol], accountAddress)\n  }\n\n}","// this file is generated by script, don't modify it !!!\nexport const oracleFactoryOffChainAbi = [\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"signer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"delayAllowance\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"oracle\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"CreateVolatilityOracleOffChain\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" },\n      { \"internalType\": \"address\", \"name\": \"signer\", \"type\": \"address\" },\n      { \"internalType\": \"uint256\", \"name\": \"delayAllowance\", \"type\": \"uint256\" }\n    ],\n    \"name\": \"createVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }\n    ],\n    \"name\": \"getVolatilityOracle\",\n    \"outputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n\n","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils/convert'\nimport { oracleFactoryOffChainAbi } from '../abi/oracleFactoryOffChainAbi.js'\n\nexport class OracleFactoryOffChain extends ContractBase {\n  // init\n  constructor(chainId, contractAddress, initialBlock) {\n    super(chainId, contractAddress, oracleFactoryOffChainAbi)\n    // for pool use\n    if (initialBlock) {\n      this.initialBlock = initialBlock\n    }\n  }\n\n  // query\n  async getOracle(symbol) {\n    const res = await this._call('getOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n  async getVolatilityOracle(symbol) {\n    const res = await this._call('getVolatilityOracle', [symbol])\n    return deleteIndexedKey(res)\n  }\n\n  // tx\n  async createOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n  async createVolatilityOracle(accountAddress, symbol, signer, delayAllowance) {\n    return await this._transact('createVolatilityOracle', [symbol, signer, delayAllowance], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import {\n  bTokenFactory,\n  deriToNatural,\n  fetchJson,\n  getHttpBase,\n} from '../../shared';\nimport { ContractBase } from '../../shared/contract/contract_base';\nimport { normalizeSymbolUnit } from '../../shared/config/token';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { PTokenLite } from './p_token';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    await this._init();\n    if (!this.pTokenAddress|| !this.pToken ) {\n      await  this.updateAddresses()\n      // console.log(this.addresses, this.parameters)\n      //this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      //this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress);\n\n    }\n  }\n\n\n  async updateAddresses() {\n    if (!this.bTokenAddress || !this.pTokenAddress) {\n     const res = await this._call('getAddresses');\n    // update this state\n     this.bTokenAddress = res.bTokenAddress;\n     this.lTokenAddress= res.lTokenAddress;\n     this.pTokenAddress= res.pTokenAddress;\n    }\n  }\n\n  async controller() {\n    const res = await this._call('controller');\n    return res\n  }\n\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return {\n      symbol: res.symbol,\n      oracleAddress: res.oracleAddress,\n      multiplier: deriToNatural(res.multiplier),\n      feeRatio: deriToNatural(res.feeRatio),\n      fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n      price: deriToNatural(res.price),\n      cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n      tradersNetVolume: deriToNatural(res.tradersNetVolume),\n      tradersNetCost: deriToNatural(res.tradersNetCost),\n    };\n  }\n  async getSymbols() {\n    await this.updateAddresses()\n    if (!this.pToken) {\n      this.pToken = new PTokenLite(this.chainId, this.pTokenAddress)\n    }\n    // update this state\n    this.symbolIds = await this.pToken.getActiveSymbolIds()\n    this.symbols = await Promise.all(\n      this.symbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n    );\n    return this.symbols\n  }\n  async getBTokenSymbol() {\n    await this.updateAddresses()\n    if (!this.bToken) {\n      this.bToken = bTokenFactory(this.chainId, this.bTokenAddress)\n    }\n    // update this state\n    this.bTokenSymbol = await this.bToken.symbol()\n    return this.bTokenSymbol\n  }\n  async getPoolExtraInfo() {\n    const url = `${getHttpBase()}/pool_extra_info/${this.contractAddress}`\n    const res = await fetchJson(url)\n    //console.log(res)\n    if (res.success) {\n      return res.data\n    } else {\n\n      console.log(`-- getInitialBlock(): ${url} => ${res.message}`)\n      return  {\n        block_number: '1000000000',\n        version: '',\n      }\n    }\n  }\n  async getConfig() {\n    const [bToken, symbols, extraInfo] = await Promise.all([\n      this.getBTokenSymbol(),\n      this.getSymbols(),\n      this.getPoolExtraInfo(),\n    ])\n    return {\n      pool: this.contractAddress,\n      pToken: this.pTokenAddress,\n      lToken: this.lTokenAddress,\n      bToken: this.bTokenAddress,\n      bTokenSymbol: bToken,\n      symbols: symbols.map((s, index) => ({\n        symbolId: this.symbolIds[index],\n        symbol: s.symbol,\n        unit: normalizeSymbolUnit(s.symbol),\n      })),\n      initialBlock:extraInfo.block_number,\n      version:extraInfo.version,\n      chainId: this.chainId,\n    }\n  }\n\n  // tx\n  async addSymbol(accountAddress, parameters) {\n    return await this._transact('addSymbol', parameters, accountAddress)\n  }\n\n  async removeSymbol(accountAddress, symbolId) {\n    return await this._transact('removeSymbol', [symbolId], accountAddress)\n  }\n}\n","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteManagerAbi } from './abis.js'\n\nexport class PerpetualPoolLiteManager extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteManagerAbi)\n  }\n\n  // query\n  async getNumPools() {\n    const res = await this._call('getNumPools', [])\n    return res\n  }\n  async poolTemplate() {\n    const res = await this._call('poolTemplate', [])\n    return res\n  }\n  async pools(poolId) {\n    const res = await this._call('pools', [poolId])\n    return res\n  }\n  async protocolFeeCollector() {\n    const res = await this._call('protocolFeeCollector', [])\n    return res\n  }\n  async protocolFeeCutRatio() {\n    const res = await this._call('protocolFeeCutRatio', [])\n    return res\n  }\n\n  // tx\n  async createPool(accountAddress, parameters, bTokenAddress, pairedTokenAddress) {\n    return await this._transact('createPool', [parameters, bTokenAddress, pairedTokenAddress], accountAddress)\n  }\n\n}","import { ContractBase } from '../../shared/contract/contract_base';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import { factory } from '../shared/utils/factory'\nimport { OracleFactoryChainlinkAdapter, OracleFactoryOffChainAdapter } from './adapter'\nimport { ChainlinkFeed } from './contract/chainlink_feed'\nimport { OracleFactoryChainlink } from './contract/gen/OracleFactoryChainlink'\nimport { OracleFactoryOffChain } from './contract/gen/OracleFactoryOffChain'\nimport { PerpetualPoolLite } from './contract/perpetual_pool'\nimport { PerpetualPoolLiteManager } from './contract/perpetual_pool_lite_manager'\nimport { PerpetualPoolLiteViewer } from './contract/perpetual_pool_lite_viewer'\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)\nexport const perpetualPoolLiteManagerFactory = factory(PerpetualPoolLiteManager)\nexport const chainlinkFeedFactory = factory(ChainlinkFeed)\n\n\nexport const oracleFactoryChainlinkFactory = factory(OracleFactoryChainlinkAdapter(OracleFactoryChainlink))\nexport const oracleFactoryOffChainFactory = factory(OracleFactoryOffChainAdapter(OracleFactoryOffChain))","import { catchApiError } from \"../../shared/utils/api\"\nimport { DeriEnv } from \"../../shared/config/env\"\nimport { getOracleConfigList } from \"../../shared/config/oracle\"\nimport { getJsonConfig } from \"../../shared/config/config\"\nimport { normalizeChainId, toChecksumAddress, validateObjectKeyExist } from \"../../shared/utils\"\nimport { poolProcessor, poolValidator } from \"../../shared/config/config_processor\"\nimport { fetchJson, getBlockInfo, getHttpBase, getPastEvents, getPoolViewerConfig } from \"../../shared\"\nimport { expandPoolConfigV2LiteOpen, getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig, openPoolChainIds } from \"../config\"\nimport { oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory, perpetualPoolLiteViewerFactory } from \"../factory\"\n\nexport const getPoolOpenConfigList = async (...args) => {\n  return catchApiError(\n    async () => {\n      let configs = [];\n      const chainIds = openPoolChainIds()\n      configs = await chainIds.reduce(async (acc, chainId) => {\n        //console.log('chainId', chainId)\n        const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(\n          chainId\n        );\n        const poolManager = perpetualPoolLiteManagerFactory(\n          chainId,\n          poolManagerAddress\n        );\n        // get pool numbers\n        const poolNums = parseInt(await poolManager.getNumPools());\n        const numsArray = [...Array(poolNums).keys()];\n        // get pool addresses\n        const addresses = await Promise.all(\n          numsArray.reduce(\n            (acc, id) => acc.concat([poolManager.pools(id.toString())]),\n            []\n          )\n        );\n        // get pools config\n        const res = await Promise.all(\n          addresses.reduce(\n            (acc, address) =>\n              acc.concat([\n                perpetualPoolLiteFactory(chainId, address).getConfig(),\n              ]),\n            []\n          )\n        );\n        return acc.concat(res);\n      }, []);\n      return configs.sort((a,b) => parseInt(b.initialBlock) - parseInt(a.initialBlock));\n    },\n    args,\n    'getPoolOpenConfigList',\n    []\n  );\n};\n\nexport const getPoolOpenOracleList = async(...args) => {\n  return catchApiError(\n    async (chainId, accountAddress) => {\n    chainId = normalizeChainId(chainId)\n    const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n    const oracleFactory = oracleFactoryChainlinkFactory(\n      chainId,\n      oracleFactoryConfig.address\n    );\n    await oracleFactory._init()\n    let eventBlock, oracles= [];\n    const res = await fetchJson(\n      `${getHttpBase()}/oracle/${chainId}/${accountAddress}`\n    );\n    if (res && res.success) {\n      eventBlock = parseInt(res.data.eventBlock);\n      if (res.data.oracles && Array.isArray(res.data.oracles)) {\n        oracles = res.data.oracles;\n      }\n      if (eventBlock === 0) {\n        eventBlock = parseInt(oracleFactoryConfig.initialBlock);\n      }\n      const toBlock = await getBlockInfo(chainId, 'latest');\n      // fetch online\n      let events = await getPastEvents(\n        chainId,\n        oracleFactory.contract,\n        'CreateOracle',\n        {},\n        eventBlock,\n        toBlock.number\n      );\n      if (events.length > 0) {\n        for (let i = 0; i < events.length; i++) {\n          const event = events[i];\n          const info = event.returnValues;\n          oracles.push({\n            chainId,\n            symbol: info.symbol,\n            address: info.oracle,\n            blockNumber: event.blockNumber,\n          });\n        }\n        return oracles\n          .sort((a, b) => parseInt(b.blockNumber) - parseInt(a.blockNumber))\n          .reduce((acc, i) => {\n            return acc.find((a) => a.symbol === i.symbol) ? acc : [...acc, i];\n          }, []);\n      } else {\n        return oracles\n      }\n    } else {\n      return [];\n    }\n      //return getOracleConfigList('v2_lite_open', DeriEnv.get()).filter((o) => o.chainId === chainId);\n    },\n    args,\n    'getPoolOpenOracleInfos',\n    []\n  );\n};\n\nexport const getPoolController = async(chainId, poolAddress) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      return await perpetualPoolLite.controller();\n    },\n    [chainId, poolAddress],\n    'getPoolController',\n    ''\n  );\n}\nexport const isPoolController = async (chainId, poolAddress, controller) => {\n  chainId = normalizeChainId(chainId);\n  return catchApiError(\n    async (chainId, poolAddress, controller) => {\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      const poolController = await perpetualPoolLite.controller();\n      return (\n        toChecksumAddress(controller) === toChecksumAddress(poolController)\n      );\n    },\n    [chainId, poolAddress, controller],\n    'isPoolController',\n    false\n  );\n};\n\nexport const getExpandedPoolOpenConfigList = async () => {\n  const env = DeriEnv.get()\n  const version = 'v2_lite_open'\n  let config = getJsonConfig(version, env);\n\n  config.pools =  await getPoolOpenConfigList()\n  const pools = config.pools\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  return expandPoolConfigV2LiteOpen(config);\n}\n\nexport const getPoolAllSymbolNames = async (chainId, poolAddress) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      const viewerAddress = getPoolViewerConfig(chainId, 'v2_lite');\n      const poolViewer = perpetualPoolLiteViewerFactory(chainId, viewerAddress);\n      return await poolViewer.getOffChainOracleSymbols(poolAddress);\n    },\n    [chainId.toString(), poolAddress],\n    'getPoolAllSymbolNames ',\n    []\n  );\n};\n\nexport const getPoolAcitveSymbolIds = async (...args) => {\n  return catchApiError(\n    async (chainId, poolAddress) => {\n      chainId = chainId.toString()\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPoolLite.init()\n      return await perpetualPoolLite.pToken.getActiveSymbolIds()\n    },\n    args,\n    'getPoolActiveSymbolIds',\n    []\n  );\n};\n\n\n// v2lite open config list cache\nexport const openConfigListCache = (() => {\n  let cache = {\n    data: [],\n    timestamp: 0,\n  };\n  return {\n    async update() {\n      let res\n      const oldData = cache.data\n      try {\n        if (Date.now()/1000 - cache.timestamp >= 10) {\n        //if (Date.now()/1000 - cache.timestamp > 60) {\n          cache.data = await getPoolOpenConfigList()\n          cache.timestamp = Date.now()/1000\n          //res = 'v2 lite open config list is updated'\n        }\n      } catch(err) {\n        console.log(err)\n        cache.data = oldData\n        //res = `v2 lite open config list updating with error: ${err}`\n      }\n      // res && console.log(res)\n      return cache.data\n    },\n    updatedAt() {\n      return cache.timestamp\n    },\n    get() {\n      return cache.data\n    }\n  }\n})()\n","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\nimport { getPoolV1ConfigList } from './pool_v1';\nimport { LITE_AND_OPTION_VERSIONS, VERSIONS } from './version';\nimport { validateObjectKeyExist } from '../utils';\nimport { poolProcessor, poolValidator } from './config_processor';\nimport { openConfigListCache } from '../../v2_lite_open/api/query_api';\n\nconst expandPoolConfigV2 = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.bTokens.length; i++) {\n        const bToken = pool.bTokens[i];\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            router: pool.router,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: bToken.bToken,\n            bTokenId: bToken.bTokenId,\n            bTokenSymbol: bToken.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            unit: symbol.unit,\n            version: 'v2',\n            isOption: false,\n          });\n        }\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2Lite = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: symbol.unit,\n          version: 'v2_lite',\n          isOption: false,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigOption = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      for (let i = 0; i < pool.symbols.length; i++) {\n        const symbol = pool.symbols[i];\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          pricer: pool.pricer,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          volatilitySymbols: pool.volatilitySymbols,\n          unit: symbol.unit,\n          version: 'option',\n          isOption: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nconst expandPoolConfigV2LiteOpen = (config) => {\n  const pools = config.pools;\n  //console.log(pools)\n  return pools\n    .map((pool) => {\n      let result = [];\n      if (pool.symbols.length > 0) {\n        for (let i = 0; i < pool.symbols.length; i++) {\n          const symbol = pool.symbols[i];\n          result.push({\n            pool: pool.pool,\n            pToken: pool.pToken,\n            lToken: pool.lToken,\n            initialBlock: pool.initialBlock,\n            chainId: pool.chainId,\n            bToken: pool.bToken,\n            bTokenSymbol: pool.bTokenSymbol,\n            symbol: symbol.symbol,\n            symbolId: symbol.symbolId,\n            offchainSymbolIds: pool.offchainSymbolIds,\n            offchainSymbols: pool.offchainSymbols,\n            unit: symbol.unit,\n            version: 'v2_lite_open',\n            isOpen: true,\n          });\n        }\n      } else {\n        result.push({\n          pool: pool.pool,\n          pToken: pool.pToken,\n          lToken: pool.lToken,\n          initialBlock: pool.initialBlock,\n          chainId: pool.chainId,\n          bToken: pool.bToken,\n          bTokenSymbol: pool.bTokenSymbol,\n          symbol: '--',\n          symbolId: '',\n          offchainSymbolIds: pool.offchainSymbolIds,\n          offchainSymbols: pool.offchainSymbols,\n          unit: '',\n          version: 'v2_lite_open',\n          isOpen: true,\n        });\n      }\n      return result;\n    })\n    .flat();\n};\n\nexport const getConfig = (version='v2', env='dev') => {\n  let config = getJsonConfig(version, env);\n\n  if (version === 'v2_lite_open') {\n    //if (Date.now()/1000 - openConfigListCache.updatedAt() < 15) {\n      //console.log('hit openConfigListCache')\n    config.pools = openConfigListCache.get()\n    //}\n  }\n\n  //console.log('>',config)\n  const pools = config.pools;\n  if (pools && Array.isArray(pools)) {\n    for (let i = 0; i < pools.length; i++) {\n      poolProcessor[version](pools[i])\n      poolValidator[version](pools[i])\n    }\n  }\n  validateObjectKeyExist(['oracle'], config, 'oracle');\n  //validateObjectKeyExist(['brokerManager'], configs[env], 'brokerManager')\n  return config;\n};\n\nexport const getPoolConfigList = (version='v2', env = 'dev') => {\n  const config = getConfig(version, env)\n  if (version === 'v2') {\n    return expandPoolConfigV2(config)\n  } else if (version === 'v2_lite') {\n    return expandPoolConfigV2Lite(config)\n  } else if (version === 'v2_lite_open') {\n    return expandPoolConfigV2LiteOpen(config)\n  } else if (version === 'option') {\n    return expandPoolConfigOption(config)\n  }\n};\n\nexport const getFilteredPoolConfigList = (poolAddress, bTokenId, symbolId, version='v2') => {\n  bTokenId = typeof bTokenId === 'number' ? bTokenId.toString() : bTokenId\n  symbolId = typeof symbolId === 'number' ? symbolId.toString() : symbolId\n  const poolConfigList = getPoolConfigList(version, DeriEnv.get())\n  const check = bTokenId != null\n    ? symbolId != null\n      ? (i) =>\n          i.pool === poolAddress &&\n          i.bTokenId === bTokenId &&\n          i.symbolId === symbolId\n      : (i) => i.pool === poolAddress && i.bTokenId === bTokenId\n    : (symbolId != null ? (i) => i.pool === poolAddress && i.symbolId === symbolId : (i) => i.pool === poolAddress);\n  if (poolConfigList.length > 0) {\n    const res = poolConfigList.filter(check)\n    if (res && res.length > 0) {\n      return res\n    }\n  }\n  throw new Error(`getFilteredPoolConfigList(): cannot find the pool config by ${poolAddress} bTokenId(${bTokenId}) and symbolId(${symbolId})`)\n}\n\nexport const getPoolConfig = (poolAddress, bTokenId, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  // check the bToken in v2_lite\n  if (LITE_AND_OPTION_VERSIONS.includes(version)) {\n    bTokenId = undefined\n  }\n  const res =  getFilteredPoolConfigList(poolAddress, bTokenId, symbolId, version)\n  return res[0]\n}\nexport const getFilteredPoolConfig  = getPoolConfig\n\n\nexport const getPoolVersion = (poolAddress) => {\n  let pools = VERSIONS.reduce((acc, version) => {\n    return acc.concat(getConfig(version, DeriEnv.get())['pools'])\n  }, [])\n  // add v1 config\n  pools = pools.concat(getPoolV1ConfigList(DeriEnv.get()))\n  const index = pools.findIndex((v) => v.pool === poolAddress)\n  //console.log('pools index', index)\n  if (index >= 0) {\n    return pools[index].version\n  }\n}\n\nexport const _getPoolConfig = (poolAddress) => {\n  const version = getPoolVersion(poolAddress);\n  const config = getConfig(version, DeriEnv.get());\n  const pools = config.pools;\n  let pool = pools.find((p) => p.pool === poolAddress);\n  //console.log(pool)\n  if (pool) {\n    return pool;\n  } else {\n    throw new Error(`getPoolConfig, cannot find pool config by pool address ${poolAddress}`)\n  }\n};\n\nexport const getPoolConfig2 = (poolAddress, bTokenId, symbolId) => {\n  const pool = _getPoolConfig(poolAddress);\n  const defaultBToken = {\n    bTokenId: '',\n    bTokenSymbol: '',\n    bToken: '',\n  };\n  const defaultSymbol = {\n    symbolId: '',\n    symbol: '',\n    unit: '',\n  };\n  let bToken, symbol;\n  if (bTokenId !== undefined || bTokenId !== null) {\n    bToken = pool.bTokens.find((b) => b.bTokenId === bTokenId) || defaultBToken;\n  }\n  if (symbolId !== undefined || symbolId !== null) {\n    symbol = pool.symbols.find((b) => b.symbolId === symbolId) || defaultSymbol;\n  }\n  return {\n    pool: pool.pool,\n    pToken: pool.pToken,\n    lToken: pool.lToken,\n    router: pool.router,\n    bTokenCount: pool.bTokenCount,\n    symbolCount: pool.symbolCount,\n    initialBlock: pool.initialBlock,\n    chainId: pool.chainId,\n    bToken: bToken.bToken,\n    bTokenId: bToken.bTokenId,\n    bTokenSymbol: bToken.bTokenSymbol,\n    symbol: symbol.symbol,\n    symbolId: symbol.symbolId,\n    unit: symbol.unit,\n    version: 'v2',\n  };\n};\n\nexport const getPoolBTokenList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => {\n    return {\n      bTokenId: b.bTokenId,\n      bTokenSymbol: b.bTokenSymbol,\n      bTokenAddress: b.bToken,\n    };\n  });\n};\n\nexport const getPoolBTokenIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.bTokens.map((b) => b.bTokenId);\n};\n\nexport const getPoolSymbolList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((s) => {\n    return {\n      symbol: s.symbol,\n      symbolId: s.symbolId,\n      unit: s.unit,\n    };\n  });\n};\n\nexport const getPoolSymbolIdList = (poolAddress) => {\n  const pool = _getPoolConfig(poolAddress);\n  return pool.symbols.map((b) => b.symbolId);\n};\n\nexport const getPoolViewerConfig = (chainId, version=\"v2_lite\") => {\n  const env = DeriEnv.get()\n  const config = getJsonConfig(version, env)\n  const viewers = config.poolViewer.filter((v) => v.chainId === chainId.toString())\n  if (viewers.length > 0) {\n    return viewers[0].address\n  } else {\n    throw new Error(`getPoolViewerConfig(): invalid chainId(${chainId}) or version(${version}).`);\n  }\n};","import { getJsonConfig } from './config';\nimport { DeriEnv } from './env';\n\nexport const getBrokerConfigList = (version) => {\n  const config = getJsonConfig(version, DeriEnv.get())\n  if (config.brokerManager) {\n    return config.brokerManager\n  } else {\n    // default value\n    return []\n  }\n};\n\nexport const getBrokerConfig = (version='v2', chainId) => {\n  const filteredByChainId = getBrokerConfigList(version).filter((c) =>c.chainId === chainId);\n  if (filteredByChainId.length > 0) {\n    return filteredByChainId[0];\n  }\n  throw new Error(`getBrokerConfig(): invalid chainId(${chainId}).`);\n};\n","import { perpetualPoolFactory } from '../factory';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { io } from 'socket.io-client';\n\n/** @module apiCache */\n/**\n * fundingRateCache Object\n * @name fundingRateCache\n * @property {function} get - Get the funding rate from cache\n * @property {function} set - set the funding rate cache\n */\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress) {\n      const key = `${chainId}.${contractAddress}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`Cache key is not in resourceMap: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, resource) {\n      const key = `${chainId}.${contractAddress}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const accountAddressCache = (function () {\n  let _accountAddress = '';\n  return {\n    get() {\n      if (_accountAddress === '') {\n        console.log(\"please init 'accountAddress' first\");\n      }\n      return _accountAddress;\n    },\n    set(value) {\n      if (typeof value === 'string' && value !== '') {\n        _accountAddress = value;\n      }\n    },\n  };\n})();\n\n/**\n * priceCache Object\n * @name priceCache\n * @property {function} get - Get the price from cache\n * @property {function} update - Set the price to automatic update during a time interval\n * @property {function} clear - Clear the the automatic update of the price\n */\nexport const priceCache = (function () {\n  let _price = '';\n  let _interval = null;\n  return {\n    get() {\n      if (_price === '') {\n        console.log(\"please init 'price' first\");\n      }\n      return _price;\n    },\n    async _update(poolAddress, symbol) {\n      try {\n        const res = await getPriceFromRest(symbol);\n        if (res !== '') {\n          _price = res;\n        }\n      } catch (err) {\n        console.log(`priceCache.update: ${err}`)\n      }\n    },\n    update(poolAddress, symbol) {\n      const self = this;\n      _interval = setInterval(() => {\n        // console.log('tick')\n        self._update(poolAddress, symbol);\n      }, 3000);\n    },\n    clear() {\n      if (_interval) {\n        clearInterval(_interval);\n      }\n      _price = '';\n    },\n  };\n})();\n\n/**\n * PerpetualPoolParametersCache Object\n * @name PerpetualPoolParametersCache\n * @property {function} get - Get the perpetualPoolParameters from cache\n * @property {function} update - Set the perpetualPoolParameters\n */\n\nexport const PerpetualPoolParametersCache = (function () {\n  let _parameters = {};\n  return {\n    get() {\n      if (!_parameters.multiplier) {\n        console.log(\"please init 'perpetual pool parameters' first\");\n      }\n      return _parameters;\n    },\n    async update(chainId, poolAddress) {\n      const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n      const res = await perpetualPool.getParameters();\n      if (res.multiplier) {\n        _parameters = res;\n      }\n      return res;\n    },\n  };\n})();\n\n// websocket instance\nexport const wsInstance = (function(){\n  let _ws = null;\n  return {\n    get() {\n      if (_ws) {\n        return _ws\n      } else {\n        console.log('wsInstance.get() error: ws instance is not init')\n      }\n    },\n    set(url) {\n      try {\n        const ws = io(url, {\n          transports: ['websocket'],\n          path: '/ws',\n        });\n        ws.on('connect', () => {\n          console.log('hello from ws:', ws.id);\n        })\n        if (ws) {\n          _ws = ws\n        } else {\n          console.log('wsInstance.get() error: ws instance is not init')\n        }\n      } catch (err) {\n        console.log('wsInstance.set():', err)\n      }\n    },\n    getOrSet(url) {\n      if (!_ws) {\n        this.set(url)\n      }\n      return _ws\n    }\n  }\n})();\n","import {\n  bTokenFactory,\n  bg,\n  formatBN,\n  naturalToDeri,\n  getPoolV1Config,\n  deriToNatural,\n} from '../../shared';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport { getPriceInfoForV1 } from '../../shared/utils/oracle'\nimport {\n  calculateMaxRemovableShares,\n  calculateMaxWithdrawMargin,\n  isOrderValid,\n} from '../calculation';\n\n/**\n * Unlock the account in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {string} response.[error]\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Deposit margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string|number} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  return await pPool.depositMargin(accountAddress, naturalToDeri(amount));\n};\n\n/**\n * Withdraw margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  let res;\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const { multiplier, minInitialMarginRatio } = await pPool.getParameters();\n\n  const maxWithdrawMargin = calculateMaxWithdrawMargin(\n    price,\n    volume,\n    margin,\n    cost,\n    multiplier,\n    minInitialMarginRatio\n  );\n  if (bg(amount).lte(maxWithdrawMargin)) {\n    try {\n      const tx = await pPool._transact(\n        'withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'amount exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Mint in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const mint = async (chainId, poolAddress, accountAddress, amount) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  //const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const decimals = await bToken.decimals();\n  const BONE = 10 ** decimals;\n  amount = formatBN(bg(amount).multipliedBy(BONE));\n  let res;\n  try {\n    const tx = await bToken._transact('mint', [amount], accountAddress);\n    res = { success: true, transaction: tx };\n  } catch (error) {\n    res = { success: false, error };\n  }\n  return res;\n};\n\n/**\n * Add liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  let res;\n  try {\n    const tx = await pPool._transact(\n      'addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n      [naturalToDeri(amount)],\n      accountAddress\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\n/**\n * Remove liquidity in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} shares\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  shares\n) => {\n  const { lTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n\n  const [lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    lToken.balance(accountAddress),\n    lToken.totalSupply(),\n  ]);\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const {\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n  } = await pPool.getStateValues();\n\n  const maxRemovableShares = calculateMaxRemovableShares(\n    lTokenBalance,\n    lTokenTotalSupply,\n    liquidity,\n    tradersNetVolume,\n    tradersNetCost,\n    multiplier,\n    minPoolMarginRatio,\n    price\n  );\n  let res;\n  if (bg(shares).lte(maxRemovableShares)) {\n    try {\n      const tx = await pPool._transact(\n        'removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(shares)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'shares exceeds allowed' };\n  }\n  return res;\n};\n\n/**\n * Trade with margin in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} newVolume\n * @param {string} amount\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  amount = '0'\n) => {\n  const { pTokenAddress, symbol } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  const price = deriToNatural((await getPriceInfoForV1(symbol)).price).toString();\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minPoolMarginRatio,\n  } = await pPool.getParameters();\n  const { liquidity, tradersNetVolume } = await pPool.getStateValues();\n  const { volume, margin } = await pToken.getPositionInfo(accountAddress);\n  let res;\n  const orderValidation = isOrderValid(\n    price,\n    margin,\n    volume,\n    liquidity,\n    tradersNetVolume,\n    multiplier,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    bg(newVolume),\n    bg(amount)\n  );\n  if (orderValidation.success) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(newVolume), naturalToDeri(amount)],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.message };\n  }\n  return res;\n};\n\n/**\n * Close position in the perpertual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {boolean} response.success\n * @returns {boolean} response.[error] - error message when request failed\n * @returns {Object} response.transaction - eth transaction receipt object\n */\nexport const closePosition = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  let { volume } = await pToken.getPositionInfo(accountAddress);\n  volume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await pPool._transact(\n        'tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)',\n        [naturalToDeri(volume), '0'],\n        accountAddress\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import {\n  //naturalToDeri,\n  deriToNatural,\n  hexToString,\n  toChecksumAddress,\n  hexToNumber,\n  hexToNumberString,\n  bg,\n} from '../../shared/utils';\nimport { getPoolV1Config } from '../../shared/config';\n\nimport { databaseFactory } from '../../shared/factory';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  bTokenSymbol,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier,\n    feeRatio\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  // console.log(JSON.stringify(res))\n  return res;\n};\n\nconst processLiquidateEvent = async (\n  info,\n  txHash,\n  bTokenSymbol,\n  multiplier\n) => {\n  // console.log(info)\n  const volume = deriToNatural(info.volume).abs();\n  // const cost = deriToNatural(info.cost).abs()\n  // const margin = info.margin\n  const timestamp = `${info.timestamp}000`;\n  const price = deriToNatural(info.price);\n  // const liquidator = info.liquidator\n  // const reward = info.reward\n  const national = volume.times(price).times(multiplier);\n  // const transactionFee = volume.times(price).times(multiplier).times(feeRatio)\n\n  const res = {\n    direction: 'Liquidation',\n    baseToken: bTokenSymbol,\n    price: price.toString(),\n    notional: national.toString(),\n    volume: bg(volume).times(multiplier).toString(),\n    transactionFee: '0',\n    transactionHash: txHash.toString(),\n    time: timestamp,\n    // cost: naturalToDeri(cost).toString(),\n    // margin: margin.toString(),\n    // liquidator,\n    // reward: reward.toString(),\n  };\n  return res;\n};\n\n/**\n * Get the user trade history\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n * @returns {string} response[].direction\n * @returns {string} response[].baseToken\n * @returns {string} response[].price\n * @returns {string} response[].notional\n * @returns {string} response[].volume\n * @returns {string} response[].transactionFee\n * @returns {string} response[].time - Timestamp of the trade\n */\n\nexport const getTradeHistory = async (chainId, poolAddress, accountAddress) => {\n  const keyMeta = `${chainId}.${poolAddress}`;\n  const db = databaseFactory();\n  let [tradeFromBlock, liquidateFromBlock] = await Promise.all([\n    db.getValues([`${keyMeta}.tradeHistoryBlock`]),\n    db.getValues([`${keyMeta}.liquidateHistoryBlock`]),\n  ]);\n  tradeFromBlock = hexToNumber(tradeFromBlock[0]);\n  liquidateFromBlock = hexToNumber(liquidateFromBlock[0]);\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [\n      tradeHistoryOffline,\n      tradeHistoryOnline,\n      liquidateHistoryOffline,\n      liquidateHistoryOnline,\n    ] = await Promise.all([\n      getTradeHistoryOffline(chainId, poolAddress, accountAddress),\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOffline(chainId, poolAddress, accountAddress),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n      .concat(liquidateHistoryOnline)\n      .concat(tradeHistoryOffline)\n      .concat(liquidateHistoryOffline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline, liquidateHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n      getLiquidateHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        liquidateFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline.concat(liquidateHistoryOnline);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n\n// get trade history combined from cache and from online pull\nconst getTradeHistoryOffline = async (chainId, poolAddress, accountAddress) => {\n  // console.log(chainId, poolAddress, accountAddress)\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.tradeHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.trade`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const tradeHistoryLength = keyArray.length / 8;\n      // console.log(`trade history length: ${tradeHistoryLength}`)\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < tradeHistoryLength; i++) {\n        const indexBase = i * 8;\n        //console.log(resp[indexBase + 6].trim());\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n\n// get trade history online from the Block number\nexport const getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const {\n    multiplier,\n    feeRatio,\n    minInitialMarginRatio,\n  } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processTradeEvent(\n      perpetualPool,\n      bTokenSymbol,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      minInitialMarginRatio\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get liquidate history online from the Block number\nexport const getLiquidateHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  fromBlock\n) => {\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  // console.log(poolAddr, bTokenAddress);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  //perpetualPool.setAccount(accountAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n  const filters = { owner: accountAddress };\n  const events = await perpetualPool._getPastEvents(\n    'Liquidate',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n  const { multiplier } = await perpetualPool.getParameters();\n\n  const result = [];\n  // console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    // const info = item.returnValues;\n    const res = await processLiquidateEvent(\n      item.returnValues,\n      item.transactionHash,\n      bTokenSymbol,\n      multiplier\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\n// get trade history combined from cache and from online pull\nconst getLiquidateHistoryOffline = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let result = [];\n  // use dev database\n  const db = databaseFactory();\n  const keyBlock = `${chainId}.${poolAddress}.liquidateHistoryBlock`;\n  const keyMeta = `${chainId}.${poolAddress}.${toChecksumAddress(\n    accountAddress\n  )}.liquidate`;\n  //const [res, fromBlock] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const [res] = await db.getValues([`${keyMeta}.count`, keyBlock]);\n  const count = hexToNumber(res);\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  try {\n    if (count && count >= 0) {\n      let keyArray = [];\n      for (let i = count; i > 0; i--) {\n        const key = `${keyMeta}.${i.toString()}`;\n        keyArray = keyArray.concat([\n          `${key}.direction`,\n          `${key}.baseToken`,\n          `${key}.price`,\n          `${key}.notional`,\n          `${key}.volume`,\n          `${key}.transactionFee`,\n          `${key}.transactionHash`,\n          `${key}.time`,\n        ]);\n      }\n      // console.log(keyArray)\n      const liquidateHistoryLength = keyArray.length / 8;\n      const resp = await db.getValues(keyArray);\n      for (let i = 0; i < liquidateHistoryLength; i++) {\n        const indexBase = i * 8;\n        const item = {\n          direction: hexToString(resp[indexBase]).trim(),\n          baseToken: hexToString(resp[indexBase + 1]).trim(),\n          price: deriToNatural(resp[indexBase + 2]).toString(),\n          notional: deriToNatural(resp[indexBase + 3]).toString(),\n          volume: bg(deriToNatural(resp[indexBase + 4])).times(multiplier).toString(),\n          transactionFee: deriToNatural(resp[indexBase + 5]).toString(),\n          transactionHash: resp[indexBase + 6],\n          time: hexToNumberString(resp[indexBase + 7]).toString(),\n        };\n        result.push(item);\n      }\n    } else {\n      result = [];\n    }\n  } catch (err) {\n    console.log(err);\n    result = [];\n  }\n  return result;\n};\n","// const\nimport { getPoolV1Config } from '../../shared/config';\nimport { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getTradeHistoryOnline,\n} from './trade_history_api';\nimport { perpetualPoolFactory } from '../factory';\n\n/**\n * Get specification from REST API, please refer {@link getSpecification}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getSpecification2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/specification/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate from REST API, please refer {@link getFundingRate}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRate2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/funding_rate/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity used from REST API, please refer {@link getLiquidityUsed}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getLiquidityUsed2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(`${getHttpBase()}/liquidity_used/${poolAddress}`);\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get funding rate cache from REST API, it used to 'fundingRateCache.update(chainId, poolAddress, result)'\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object}\n */\nexport const getFundingRateCache2 = async (chainId, poolAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/funding_rate_cache/${poolAddress}`\n  );\n  if (res && res.success) {\n    let result = res.data;\n    result.price = bg(result.price);\n    result.fundingRate = bg(result.fundingRate);\n    result.liquidityUsed = bg(result.liquidityUsed);\n    return result;\n  }\n  return res;\n};\n\n/**\n * Get position info from REST API, please refer {@link getPositionInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getPositionInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/position_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity info from REST API, please refer {@link getLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance from REST API, please refer {@link getWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get liquidity of the slp pool from REST API, please refer {@link getSlpLiquidityInfo}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the slp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getSlpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/slp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getClpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpLiquidityInfo2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_liquidity_info/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the clp pool from REST API, please refer {@link getSlpWalletBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getClpWalletBalance2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/clp_wallet_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get balance of the deri pool from REST API, please refer {@link getDeriBalance}\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object}\n */\nexport const getDeriBalance2 = async (chainId, poolAddress, accountAddress) => {\n  const res = await fetchJson(\n    `${getHttpBase()}/deri_balance/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    return res.data;\n  }\n  return res;\n};\n\n/**\n * Get the user trade history from REST API, please refer {@link getTradeHistory}\n * @async\n * @method\n * @param {string} chainId - Chain Id\n * @param {string} poolAddress - Pool Address\n * @param {string} accountAddress - Account Address\n * @returns {Object[]} response\n */\nexport const getTradeHistory2 = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  let tradeFromBlock, liquidateFromBlock, tradeHistory;\n  const { bTokenSymbol } = getPoolV1Config(chainId, poolAddress);\n  const res = await fetchJson(\n    `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}`\n  );\n  if (res && res.success) {\n    tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n    liquidateFromBlock = parseInt(res.data.liquidateHistoryBlock);\n    tradeHistory = res.data.tradeHistory;\n  }\n\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const {\n    multiplier,\n  } = await perpetualPool.getParameters();\n  tradeHistory = tradeHistory.filter((i) => i).map((i) => {\n    return {\n      direction: i.direction.trim(),\n      baseToken: bTokenSymbol,\n      price: deriToNatural(i.price).toString(),\n      notional: deriToNatural(i.notional).toString(),\n      volume: deriToNatural(i.volume).times(multiplier).toString(),\n      transactionFee: deriToNatural(i.transactionFee).toString(),\n      transactionHash: i.transactionHash,\n      time: i.time.toString(),\n    };\n  });\n  if (tradeFromBlock !== 0 && liquidateFromBlock !== 0) {\n    // console.log(tradeFromBlock, liquidateFromBlock)\n    const [tradeHistoryOnline ] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      )\n    ]);\n    const result = tradeHistoryOnline.concat(tradeHistory);\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  } else {\n    const { initialBlock } = getPoolV1Config(chainId, poolAddress);\n    tradeFromBlock = parseInt(initialBlock);\n    liquidateFromBlock = parseInt(initialBlock);\n    const [tradeHistoryOnline] = await Promise.all([\n      getTradeHistoryOnline(\n        chainId,\n        poolAddress,\n        accountAddress,\n        tradeFromBlock + 1\n      ),\n    ]);\n    const result = tradeHistoryOnline\n    return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n  }\n};\n","import {\n  validateArgs,\n  naturalWithPercentage,\n  deriToNatural,\n  bg,\n} from '../../shared/utils';\nimport {\n  bTokenFactory,\n} from '../../shared/factory';\nimport { getPoolV1Config } from '../../shared';\nimport { getPriceFromRest } from '../../shared/utils/oracle';\nimport { getPoolInfoApy } from '../../shared/api/database_api';\nimport {\n  lTokenFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\nimport {\n  fundingRateCache,\n  PerpetualPoolParametersCache,\n  priceCache,\n} from './api_v1_globals';\nimport {\n  calculateFundingRate,\n  calculateLiquidityUsed,\n  calculateShareValue,\n  calculateMaxRemovableShares,\n  calculateEntryPrice,\n  calculateMarginHeld,\n  calculatePnl,\n  calculateLiquidationPrice,\n  processFundingRate,\n} from '../calculation';\n\n/**\n * Get the contract information\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.addresses\n * @returns {string} response.symbol\n * @returns {string} response.bTokenSymbol\n * @returns {string} response.multiplier\n * @returns {string} response.feeRatio\n * @returns {string} response.minPoo\n * @returns {string} response.minPoolMarginRatio\n * @returns {string} response.minInitialMarginRatio\n * @returns {string} response.minMaintenanceMarginRatio\n * @returns {string} response.minAddLiquidity\n * @returns {string} response.redemptionFeeRatio\n * @returns {string} response.fundingRateCoefficient\n * @returns {string} response.minLiquidationReward\n * @returns {string} response.maxLiquidationReward\n * @returns {string} response.liquidationCutRatio\n * @returns {string} response.priceDelayAllowance\n */\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  //accountAddress,\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    feeRatio,\n    minPoolMarginRatio,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n    minAddLiquidity,\n    redemptionFeeRatio,\n    fundingRateCoefficient,\n    minLiquidationReward,\n    maxLiquidationReward,\n    liquidationCutRatio,\n    priceDelayAllowance,\n  } = await pPool.getParameters();\n  let symbol = await pPool.symbol();\n  const bTokenSymbol = await bToken.symbol();\n\n  // fix symbol BTCUSD issue, will remove later\n  // if (poolAddress === '0xA2D7316Bc60AA9463DfB78379d25E77371990507') {\n  //   symbol = 'iMEME'\n  // }\n\n  return {\n    addresses: poolAddress,\n    symbol,\n    bTokenSymbol,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    minInitialMarginRatio: minInitialMarginRatio.toString(),\n    minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n    minAddLiquidity: minAddLiquidity.toString(),\n    redemptionFeeRatio: redemptionFeeRatio.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minLiquidationReward: minLiquidationReward.toString(),\n    maxLiquidationReward: maxLiquidationReward.toString(),\n    liquidationCutRatio: liquidationCutRatio.toString(),\n    priceDelayAllowance: priceDelayAllowance.toString(),\n  };\n};\n\n/**\n * Get position Information of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.volume\n * @returns {string} response.averageEntryPrice\n * @returns {string} response.margin\n * @returns {string} response.marginHeld\n * @returns {string} response.unrealizedPnl\n * @returns {string} response.liquidationPrice\n */\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress) => {\n  const { pTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress, poolAddress);\n  //pToken.setAccount(accountAddress);\n  const {\n    multiplier,\n    minInitialMarginRatio,\n    minMaintenanceMarginRatio,\n  } = await pPool.getParameters();\n  const symbol = await pPool.symbol()\n  //console.log('getPositionInfo', chainId, poolAddress, accountAddress, price);\n  const { volume, margin, cost } = await pToken.getPositionInfo(accountAddress);\n  const price = await getPriceFromRest(symbol);\n  if (price === '') {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: '',\n      unrealizedPnl: '',\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  } else {\n    return {\n      price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(\n        volume,\n        cost,\n        multiplier\n      ).toString(),\n      margin: margin.toString(),\n      marginHeld: calculateMarginHeld(\n        price,\n        volume,\n        multiplier,\n        minInitialMarginRatio\n      ).toString(),\n      unrealizedPnl: calculatePnl(price, volume, multiplier, cost).toString(),\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        cost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n    };\n  }\n};\n\n/**\n * Get liquidity Info of the user\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {Object} response\n * @returns {string} response.totalSupply\n * @returns {string} response.poolLiquidity\n * @returns {string} response.shares\n * @returns {string} response.shareValue\n * @returns {string} response.maxRemovableShares\n */\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { lTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress, poolAddress);\n  //lToken.setAccount(accountAddress);\n\n  const [lTokenBalance, lTokenTotalSupply, symbol] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    pPool.symbol(),\n  ]);\n  const price = await getPriceFromRest(symbol);\n  const {\n    liquidity,\n    tradersNetCost,\n    tradersNetVolume,\n  } = await pPool.getStateValues();\n  const { multiplier, minPoolMarginRatio } = await pPool.getParameters();\n  const poolDynamicEquity = liquidity.plus(\n    tradersNetCost.minus(tradersNetVolume.times(price).times(multiplier))\n  );\n\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      tradersNetVolume,\n      tradersNetCost,\n      multiplier,\n      minPoolMarginRatio,\n      price\n    ).toString(),\n  };\n};\n\n/**\n * Get user balance in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {string} user balance\n */\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress, poolAddress);\n  //bToken.setAccount(accountAddress);\n  const balance = await bToken.balanceOf(accountAddress);\n  return balance.toString();\n};\n\n/**\n * Check account is unlocked in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @returns {bool}\n */\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const { bTokenAddress } = getPoolV1Config(chainId, poolAddress);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  //bToken.setAccount(accountAddress);\n  return await bToken.isUnlocked(accountAddress, poolAddress);\n};\n\n/**\n * Get estimate margin in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} accountAddress\n * @param {string} volume\n * @param {string} leverage\n * @returns {string}\n */\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage\n) => {\n  const pPool = perpetualPoolFactory(chainId, poolAddress);\n  //pPool.setAccount(accountAddress);\n  const { multiplier } = await pPool.getParameters();\n  const symbol = await pPool.symbol();\n  const price = await getPriceFromRest(symbol);\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .div(bg(leverage))\n    .toString();\n};\n\n/**\n * Get estimate Fee in the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} volume\n * @returns {string}\n */\nexport const getEstimatedFee = async (chainId, poolAddress, volume) => {\n  // const price = await getBTCUSDPrice(chainId, poolAddress);\n  let price = priceCache.get();\n  let parameters = PerpetualPoolParametersCache.get();\n  if (price === '') {\n    const pPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbol = await pPool.symbol();\n    await priceCache._update(poolAddress, symbol);\n    price = priceCache.get();\n  }\n  // const pPool = perpetualPoolFactory(chainId, poolAddress, accountAddress);\n  // const { multiplier, feeRatio } = await pPool.getParameters();\n  if (!parameters.multiplier) {\n    parameters = await PerpetualPoolParametersCache.update(\n      chainId,\n      poolAddress\n    );\n  }\n  //console.log('price', price);\n  const { multiplier, feeRatio } = parameters;\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};\n\n/**\n * Get funding rate of the perpetual pool\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.fundingRate0\n * @returns {string} response.fundingRatePerBlock\n * @returns {string} response.liquidity\n * @returns {string} response.volume\n * @returns {string} response.tradersNetVolume\n */\nexport const getFundingRate = async (chainId, poolAddress) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const res = await perpetualPool\n    .getFundingRate()\n    .catch((err) => console.log('getFundingRate', err));\n  fundingRateCache.set(chainId, poolAddress, res);\n  const poolInfo = await getPoolInfoApy(chainId, poolAddress);\n\n  if (res) {\n    // console.log(hexToNatural(res[0]));\n    const {\n      fundingRate,\n      fundingRatePerBlock,\n      liquidity,\n      tradersNetVolume,\n      multiplier,\n    } = res;\n    const volume = poolInfo.volume24h;\n    // fundingRate = processFundingRate(chainId, fundingRate);\n\n    return {\n      fundingRate0: naturalWithPercentage(fundingRate),\n      fundingRatePerBlock: bg(fundingRatePerBlock).toExponential(10),\n      liquidity: liquidity.toString(),\n      volume: deriToNatural(volume).toString(),\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString(),\n    };\n  }\n};\n\nexport const getFundingRateCache = async(chainId, poolAddress) => {\n  return fundingRateCache.get(chainId, poolAddress)\n}\n\n/**\n * Get estimate funding rate\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let fundingRate1;\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        fundingRate1: '0',\n      };\n    }\n    // console.log(parameters)\n    fundingRate1 = calculateFundingRate(...parameters);\n    fundingRate1 = processFundingRate(chainId, fundingRate1);\n    return {\n      fundingRate1: naturalWithPercentage(fundingRate1),\n    };\n  }\n};\n\n/**\n * Get liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @returns {Object} response\n * @returns {string} response.liquidityUsed0\n */\nexport const getLiquidityUsed = async (chainId, poolAddress) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool.getFundingRate();\n  }\n  if (res) {\n    const { liquidityUsed } = res;\n    return {\n      liquidityUsed0: naturalWithPercentage(liquidityUsed),\n    };\n  }\n};\n\n/**\n * Get estimate liquidity used\n * @async\n * @method\n * @param {string} chainId\n * @param {string} poolAddress\n * @param {string} newNetVolume\n * @returns {Object} response\n * @returns {string} response.fundingRate1\n */\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume\n) => {\n  let res;\n  res = fundingRateCache.get(chainId, poolAddress);\n  if (!res) {\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    res = await perpetualPool\n      .getFundingRate()\n      .catch((err) => console.log('getLiquidityUsed', err));\n  }\n  if (res) {\n    const parameters = [\n      bg(res.tradersNetVolume).plus(bg(newNetVolume)).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.poolMarginRatio,\n    ];\n    if (!validateArgs(...parameters)) {\n      return {\n        liquidityUsed1: '0',\n      };\n    }\n    const liquidityUsed1 = calculateLiquidityUsed(...parameters);\n    return {\n      liquidityUsed1: naturalWithPercentage(liquidityUsed1),\n    };\n  }\n};\n","import { bg, max } from '../../shared/utils';\n\nexport const calculateEntryPrice = (volume, cost, multiplier) =>\n  volume.eq(0) ? bg(0) : cost.div(volume).div(multiplier);\n\nexport const calculateMarginHeld = (\n  price,\n  volume,\n  multiplier,\n  minInitialMarginRatio\n) => {\n  return volume.abs().times(price).times(multiplier).times(minInitialMarginRatio)\n};\n\nexport const calculatePnl = (price, volume, multiplier, cost) => {\n  return volume.times(price).times(multiplier).minus(cost);\n}\n\n// export const calculateMaxWithdrawMargin = (\n//   price,\n//   volume,\n//   margin,\n//   cost,\n//   multiplier,\n//   minInitialMarginRatio\n// ) => {\n//   if (volume.eq(0)) {\n//     return margin;\n//   }\n//   const held = calculateMarginHeld(\n//     price,\n//     volume,\n//     multiplier,\n//     minInitialMarginRatio\n//   );\n//   const pnl = calculatePnl(price, volume, multiplier, cost);\n//   const withdrawable = max(margin.plus(pnl).minus(held.times(1.02)), bg(0));\n//   return withdrawable;\n// };\n\nexport const calculateLiquidationPrice = (\n  volume,\n  margin,\n  cost,\n  dynamicCost,\n  multiplier,\n  minMaintenanceMarginRatio\n) => {\n  const tmp = cost.minus(margin);\n  let res = volume.gt(0)\n    ? tmp.div(bg(1).minus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier)\n    : tmp.div(bg(1).plus(minMaintenanceMarginRatio)).minus(dynamicCost).div(volume).div(multiplier);\n  res = max(res, bg(0));\n  return res;\n};\n\nexport const isOrderValid = (\n  //price,\n  margin,\n  marginHeld,\n  liquidity,\n  liquidityUsed,\n  // multiplier,\n  // minPoolMarginRatio,\n  // newVolume,\n) => {\n  const minMargin = marginHeld;\n  // const poolMaxVolume = liquidity.minus(liquidityUsed)\n  //   .div(minPoolMarginRatio)\n  //   .div(price)\n  //   .div(multiplier);\n  if (margin.gte(minMargin)) {\n    // if (\n    //   newVolume.lte(poolMaxVolume) &&\n    //   newVolume.gte(poolMaxVolume.negated())\n    // ) {\n    if (liquidity.minus(liquidityUsed).gte(0)) {\n      return { success: true };\n    }\n    return { success: false, error: 'Pool has insufficient liquidity' };\n  }\n  return { success: false, error: 'Trader has insufficient margin' };\n};\n\nexport const calculateTxFee = (volume, price, multiplier, feeRatio) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(multiplier)\n    .times(feeRatio)\n    .toString();\n};","import { bg, getDailyBlockNumber, validateArgs } from '../../shared/utils';\n\nexport const calculateLiquidityUsed = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  poolMarginRatio\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio\n    )\n  ) {\n    return bg(tradersNetVolume)\n      .times(price)\n      .times(multiplier)\n      .times(poolMarginRatio)\n      .div(liquidity)\n      .abs();\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      poolMarginRatio,\n    ];\n    throw new Error(`calculateLiquidityUsed: invalid args: ${args}`);\n  }\n}\n\nexport const calculateFundingRate = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  liquidity,\n  fundingRateCoefficient\n) => {\n  if (\n    validateArgs(\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    )\n  ) {\n    return bg(liquidity).eq(0) ? bg(0) : bg(tradersNetVolume)\n      .times(price)\n      // .times(price)\n      // .times(multiplier)\n      .times(multiplier)\n      .times(fundingRateCoefficient)\n      .div(liquidity);\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient\n    ];\n    throw new Error(`calculateFundingRate: invalid args: ${args}`);\n  }\n};\n\nexport const processFundingRate = (chainId, fundingRate) => {\n  const annualBlockCount = getDailyBlockNumber(chainId);\n  //console.log(annualBlockCount);\n  return bg(fundingRate).times(annualBlockCount);\n};\n\nexport const calculateFundingFee = (\n  tradersNetVolume,\n  price,\n  multiplier,\n  fundingRateCoefficient,\n  dynamicEquity,\n  cumulativeFundingRate,\n  lastCumulativeFundingRate,\n  lastUpdatedBlockNumber,\n  latestBlockNumber,\n  volume,\n) => {\n  if (bg(volume).eq(0)) {\n    return '0'\n  } else {\n    const args = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      dynamicEquity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    ];\n    if (\n      validateArgs(...args)\n    ) {\n      return bg(dynamicEquity).eq(0) ? bg(0) : bg(tradersNetVolume)\n        .times(price)\n        .times(multiplier)\n        .times(price)\n        .times(multiplier)\n        .times(fundingRateCoefficient)\n        .div(dynamicEquity)\n        .times(bg(latestBlockNumber).minus(lastUpdatedBlockNumber))\n        .plus(cumulativeFundingRate)\n        .minus(lastCumulativeFundingRate)\n        .times(volume)\n    } else {\n      console.log(`calculateFundingFee: invalid args: ${args}`);\n      return 'NaN'\n    }\n  }\n};","import { bg, max, min } from '../../shared/utils'\n\nexport const calculateBTokenDynamicEquities = (bTokens) => {\n  //const dynamicEquities = bTokens.map((b) => bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl))\n  //const totalDynamicEquity = dynamicEquities.reduce((accum, d) => accum.plus(d), bg(0))\n  const totalDynamicEquity = bTokens.reduce((accum, b) => accum.plus(bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)), bg(0))\n  return totalDynamicEquity\n}\n\nexport const isBToken0RatioValid = (bTokens, bTokenId, amount, bToken0Ratio) => {\n  bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).plus(amount)\n  const totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  const b = bTokens['0']\n  const dynamicEquity = bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n  //console.log('estimatedBToken0Ratio',dynamicEquity.div(totalDynamicEquity).toString())\n  // use 1 as efficient\n  if (\n    !totalDynamicEquity.eq(0) &&\n    dynamicEquity.div(totalDynamicEquity).times('1').lt(bToken0Ratio)\n  ) {\n    return { success: false, error: 'Trader has insufficient bToken0' };\n  } else {\n    return { success: true };\n  }\n}\n\nexport const isPoolMarginRatioValid = (bTokens, bTokenId, amount, userLiquidity, symbols, poolMarginRatio) => {\n  if (bg(amount).gte(userLiquidity)) {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(userLiquidity)\n  } else {\n    bTokens[bTokenId].liquidity = bg(bTokens[bTokenId].liquidity).minus(amount)\n  }\n  let totalDynamicEquity = calculateBTokenDynamicEquities(bTokens)\n  let totalCost = bg(0)\n  for (let i=0; i<symbols.length; i++) {\n    const s = symbols[i]\n    if (!bg(s.tradersNetVolume).eq(0)) {\n      const cost = bg(s.tradersNetVolume).times(s.price).times(s.multiplier)\n      totalDynamicEquity = totalDynamicEquity.plus(s.tradersNetCost).minus(cost)\n      totalCost = totalCost.plus(cost.abs())\n    }\n  }\n  //console.log(totalDynamicEquity.toString(), totalCost.toString())\n  if (\n    !totalCost.eq(0) &&\n    totalDynamicEquity.div(totalCost).times('1').lt(poolMarginRatio)\n  ) {\n    return { success: false, error: 'Trader has insufficient liquidity' };\n  } else {\n    return { success: true };\n  }\n}\n\n\nexport const calculateMaxRemovableLiquidity = (\n  bToken,\n  userLiquidity,\n  cost,\n  pnl,\n  restLiquidity,\n  minPoolMarginRatio,\n) => {\n  if (bg(cost).eq(0)) {\n    return userLiquidity;\n  } else {\n    return max(\n      min(\n        bToken.liquidity.minus(\n          minPoolMarginRatio\n            .times(cost)\n            .plus(pnl)\n            .minus(restLiquidity)\n            .div(bToken.price)\n            .div(bToken.discount)\n        ).times('0.98'),\n        userLiquidity\n      ),\n      bg(0)\n    );\n  }\n};\n\n// for v1 mining\nexport const calculateShareValue = (lTokenTotalSupply, liquidity) =>\n  bg(lTokenTotalSupply).eq(0) ? bg(0) : bg(liquidity).div(lTokenTotalSupply);\n\nexport const calculateMaxRemovableShares = (\n  lTokenBalance,\n  lTokenTotalSupply,\n  liquidity,\n  value,\n  cost,\n  minPoolMarginRatio,\n) => {\n  const shareValue = calculateShareValue(lTokenTotalSupply, liquidity);\n  const removable = bg(liquidity)\n    .plus(cost)\n    .minus(value)\n    .minus(bg(value).abs().times(minPoolMarginRatio));\n  const shares = max(min(bg(lTokenBalance), removable.div(shareValue)), bg(0));\n  return shares;\n};\n","import {\n  getPoolConfig2,\n  getPoolBTokenIdList,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { databaseFactory } from '../../shared/factory';\nimport { bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { lTokenFactory, perpetualPoolFactory } from '../factory';\nimport { calculateMaxRemovableLiquidity } from '../calculation';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  try {\n    const { lToken: lTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const lToken = lTokenFactory(chainId, lTokenAddress);\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress);\n\n    const [parameterInfo, bTokenInfo, lTokenAsset] = await Promise.all([\n      perpetualPool.getParameters(),\n      perpetualPool.getBToken(bTokenId),\n      lToken.getAsset(accountAddress, bTokenId),\n    ]);\n    const { minPoolMarginRatio } = parameterInfo;\n    let promises = [];\n    for (let i = 0; i < bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n    }\n    const bTokens = await Promise.all(promises);\n\n    promises = [];\n    for (let i = 0; i < symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n    }\n    const symbols = await Promise.all(promises);\n\n    const cost = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      );\n    }, bg(0));\n    const totalPnl = symbols.reduce((accum, s) => {\n      return accum.plus(\n        bg(s.tradersNetVolume)\n          .times(s.price)\n          .times(s.multiplier)\n          .minus(s.tradersNetCost)\n      );\n    }, bg(0));\n    const restLiquidity = bTokens.reduce((accum, b, index) => {\n      if (index === parseInt(bTokenId)) {\n        return accum.plus(b.pnl);\n      } else {\n        return accum.plus(\n          bg(b.liquidity).times(b.price).times(b.discount).plus(b.pnl)\n        );\n      }\n    }, bg(0));\n\n    const { liquidity: poolLiquidity } = bTokenInfo;\n    const { liquidity, pnl, lastCumulativePnl } = lTokenAsset;\n    const maxRemovableShares = calculateMaxRemovableLiquidity(\n      bTokens[bTokenId],\n      liquidity,\n      cost,\n      totalPnl,\n      restLiquidity,\n      minPoolMarginRatio\n    );\n    const approximatePnl = pnl.plus(\n      bg(bTokens[bTokenId].cumulativePnl)\n        .minus(lastCumulativePnl)\n        .times(liquidity)\n    );\n    return {\n      //totalSupply: lTokenTotalSupply.toString(),\n      poolLiquidity: poolLiquidity.toString(),\n      // shares: liquidity.toString(),\n      // shareValue: '1',\n      // maxRemovableShares: liquidity.toString()\n      shares: liquidity.toString(),\n      pnl: approximatePnl.div(bTokens[bTokenId].price).toString(),\n      maxRemovableShares: maxRemovableShares.toString(),\n    };\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    poolLiquidity: '',\n    shares: '',\n    pnl: '',\n    maxRemovableShares: '',\n  };\n};\n\nexport const getPoolLiquidity = async (chainId, poolAddress, bTokenId) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity${bTokenId}`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol: '',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return {\n    liquidity: '',\n    symbol: '',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy${bTokenId}`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n        `${poolNetwork}.${poolAddress}.V2.multiplier${bTokenId}`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h, multiplier] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n        multiplier: deriToNatural(multiplier).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`);\n  }\n};\n","import { getPriceInfo } from '../../shared/utils/oracle';\nimport {\n  getPoolBTokenIdList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport {\n  perpetualPoolRouterFactory,\n  perpetualPoolFactory,\n  lTokenFactory,\n} from '../factory';\nimport { isBToken0RatioValid, isPoolMarginRatioValid } from '../calculation';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.addLiquidity(\n        accountAddress,\n        bTokenId,\n        amount\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const tx = await perpetualPoolRouter.removeLiquidity(\n        accountAddress,\n        bTokenId,\n        amount,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const addLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const { minBToken0Ratio } = await perpetualPool.getParameters();\n  const validation = isBToken0RatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    minBToken0Ratio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.addLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n\nexport const removeLiquidityWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress, lToken: lTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n\n  const lToken = lTokenFactory(chainId, lTokenAddress);\n  const lTokenAsset = await lToken.getAsset(accountAddress, bTokenId);\n  const { liquidity: userLiquidity } = lTokenAsset;\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  promises = [];\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  const { minPoolMarginRatio } = await perpetualPool.getParameters();\n\n  const validation = isPoolMarginRatioValid(\n    bTokens,\n    bTokenId,\n    amount,\n    userLiquidity,\n    symbols,\n    minPoolMarginRatio\n  );\n  let res;\n  if (validation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.removeLiquidityWithPrices(\n        accountAddress,\n        bTokenId,\n        amount,\n        priceInfos,\n        isMaximum\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: validation.error };\n  }\n  return res;\n};\n","export const priceCache = (function(){\n  let _prices = {}\n  return {\n    get(poolAddress, symbolId) {\n      const key = `${poolAddress}.${symbolId}`\n      if (Object.keys(_prices).includes(key)) {\n        const [price, ] = _prices[key].split('|')\n        //if (parseInt(timestamp) - Date.now() < 10000) {\n          return price\n        //}\n      }\n      console.log('please init priceCache first')\n    },\n    // update(chainId, poolAddress, symbolId) {\n    //   // place holder\n    // },\n    set(poolAddress, symbolId, val) {\n      if (!isNaN(parseFloat(val))) {\n        const timestamp = Date.now().toString()\n        _prices[`${poolAddress}.${symbolId}`] = `${val}|${timestamp}`\n      }\n    }\n  }\n})()\n\nexport const fundingRateCache = (function () {\n  let resourceMap = {};\n  return {\n    get(chainId, contractAddress, symbolId) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      if (Object.keys(resourceMap).includes(key)) {\n        return resourceMap[key];\n      }\n      console.log(`fundingRateCache: key is not in exist: ${key}`);\n      return undefined;\n    },\n    set(chainId, contractAddress, symbolId, resource) {\n      const key = `${chainId}.${contractAddress}.${symbolId}`;\n      resourceMap[key] = resource;\n    },\n  };\n})();\n\nexport const liquidatePriceCache = (function() {\n  let _cache = {}\n  return {\n    get(address) {\n      if (Object.keys(_cache).includes(address)) {\n        return _cache[address]\n      } else {\n        return {}\n      }\n    },\n    set(address, val) {\n      _cache[address] = val\n    },\n  }\n})()\n","import { bTokenFactory } from '../../shared/factory';\nimport {\n  getPoolBTokenIdList,\n  getPoolBTokenList,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolSymbolList,\n} from '../../shared/config';\nimport { bg, min, max } from '../../shared/utils'\nimport { getOraclePrice } from '../../shared/utils/oracle'\nimport { getIndexInfo } from '../../shared/config/token';\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport {\n  calculateEntryPrice,\n  calculateLiquidationPrice,\n  calculateFundingRate,\n  calculateFundingFee,\n  processFundingRate,\n} from '../calculation';\nimport { perpetualPoolFactory, pTokenFactory } from '../factory';\n\nexport const getSpecification = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    const {symbol } = getPoolConfig2(poolAddress, undefined, symbolId)\n    const bTokens = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const bTokenDiscounts = (await Promise.all(\n      bTokens.reduce(\n        (acc, b, index) =>\n          acc.concat([perpetualPool.getBToken(index.toString())]),\n        []\n      )\n    )).map((b) => b.discount);\n    const { multiplier, feeRatio, fundingRateCoefficient} = symbolInfo\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo\n    return {\n      symbol: symbol,\n      bTokenSymbol: bTokens.map((b) => b.bTokenSymbol),\n      bTokenMultiplier: bTokenDiscounts.map((b) => b.toString()),\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      //minAddLiquidity: minAddLiquidity.toString(),\n      //redemptionFeeRatio: redemptionFeeRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol)\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    symbol: '',\n    bTokenSymbol: [],\n    bTokenMultiplier: [],\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  };\n};\n\nexport const getPositionInfo = async (chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, positionInfo, margins, positions, latestPrice] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const { volume, cost, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbolInfo\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    const price = symbolPrices[symbolId]\n    priceCache.set(poolAddress, symbolId, price)\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[symbolId]).times(minInitialMarginRatio)\n    //console.log('margin', margin.toString(), marginHeld.toString())\n    //\n    //const unrealizedPnl = bg(positions[symbolId].volume).times(price).times(multiplier).minus(positions[symbolId].cost)\n    const unrealizedPnl = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    const unrealizedPnlList = symbols.map((s, index) => {\n      return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    })\n\n    const totalCost = positions.reduce((accum, a) => {\n      return accum.plus(bg(a.cost))\n    }, bg(0))\n    const dynamicCost = symbols.reduce((accum, s, index) => {\n      if (index !== parseInt(symbolId)) {\n        return accum.plus(bg(positions[index].volume).times(symbolPrices[index]).times(s.multiplier))\n      } else {\n        return accum\n      }\n    }, bg(0))\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      latestPrice,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n\n    // set liquidatePrice cache\n    liquidatePriceCache.set(poolAddress, {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    });\n  return {\n      price: price,\n      volume: bg(volume).times(multiplier).toString(),\n      averageEntryPrice: calculateEntryPrice(volume, cost, multiplier).toString(),\n      margin: margin.toString(),\n      marginHeld: marginHeld.toString(),\n      marginHeldBySymbol: marginHeldBySymbol.toString(),\n      unrealizedPnl: unrealizedPnl.toString(),\n      unrealizedPnlList,\n      liquidationPrice: calculateLiquidationPrice(\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        multiplier,\n        minMaintenanceMarginRatio\n      ).toString(),\n      fundingFee: fundingFee.toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    volume: '',\n    averageEntryPrice: '',\n    margin: '',\n    marginHeld: '',\n    unrealizedPnl: '',\n    liquidationPrice: '',\n  };\n}\n\nexport const getPositionInfos = async (chainId, poolAddress, accountAddress) => {\n  try {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = symbolConfigList.map((i) => i.symbolId)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    //console.log('bTokenList', bTokenList)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, '0')\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [parameterInfo, lastUpdatedBlockNumber, latestBlockNumber, margins, positions] = await Promise.all([\n      //perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n      //pToken.getPosition(accountAddress, symbolId),\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      //getOraclePrice(chainId, symbolList[parseInt(symbolId)])\n    ])\n    const {\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n    } = parameterInfo\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    promises = []\n    for (let i=0; i<symbolList.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n\n    const marginHeld = symbols.reduce((accum, s, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).times(minInitialMarginRatio).abs())\n    }, bg(0))\n    //\n    // const unrealizedPnlList = symbols.map((s, index) => {\n    //   return [s.symbol, bg(symbolPrices[index]).times(s.multiplier).times(positions[index].volume).minus(positions[index].cost).toString()]\n    // })\n\n    //console.log('cost', costTotal.toString())\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n\n    return positions.map((p, index) => {\n      const symbol = symbols[index]\n      const symbolId = symbolIdList[index]\n      const price = symbolPrices[index]\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate } = symbol\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const marginHeldBySymbol = bg(volume).abs().times(multiplier).times(symbolPrices[index]).times(minInitialMarginRatio)\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n      const totalCost = positions.reduce((accum, a) => {\n        return accum.plus(bg(a.cost))\n      }, bg(0))\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(bg(positions[idx].volume).times(symbolPrices[idx]).times(s.multiplier))\n        } else {\n          return accum\n        }\n      }, bg(0))\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume,\n      );\n      return {\n        symbol: symbol.symbol,\n        symbolId: index.toString(),\n        price: symbolPrices[index],\n        volume: bg(p.volume).times(multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(p.volume, cost, multiplier).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        //unrealizedPnlList,\n        unrealizedPnl: unrealizedPnl.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n        fundingFee: fundingFee.toString()\n      };\n    }).filter((p) => p.volume !== '0')\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return '';\n}\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId,\n) => {\n  try {\n    let {\n      volume,\n      margin,\n      totalCost,\n      dynamicCost,\n      price,\n      multiplier,\n      minMaintenanceMarginRatio,\n    } = liquidatePriceCache.get(poolAddress);\n    totalCost = bg(totalCost).plus(bg(newVolume).times(price).times(multiplier))\n    //console.log(totalCost.toString())\n    return calculateLiquidationPrice(\n      bg(volume).plus(newVolume),\n      margin,\n      totalCost,\n      dynamicCost,\n      multiplier,\n      minMaintenanceMarginRatio\n    ).toString();\n  } catch (err) {\n    console.log(`${err}`);\n  }\n  return '';\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress, bTokenId) => {\n  try {\n    const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return false\n}\n\nexport const getEstimatedFee = async (chainId, poolAddress, volume, symbolId) => {\n  try {\n    let price = priceCache.get(poolAddress, symbolId)\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    if (!price) {\n      //price = await getOraclePrice(poolAddress, symbolId)\n      price = await getOraclePrice(chainId, symbol)\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    //console.log(volume, price, multiplier, feeRatio)\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  try {\n    const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const [price, symbolInfo ] = await Promise.all([\n      //getOraclePrice(poolAddress, symbolId),\n      getOraclePrice(chainId, symbol),\n      perpetualPool.getSymbol(symbolId),\n    ])\n    priceCache.set(poolAddress, symbolId, price)\n    const {multiplier} = symbolInfo\n    //console.log('m',multiplier.toString())\n    return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return ''\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n  const {symbol} = getPoolConfig2(poolAddress, null, symbolId)\n  let bTokenIdList = getPoolBTokenIdList(poolAddress)\n  let promiseList = []\n  for (let i=0; i<bTokenIdList.length; i++) {\n    promiseList.push(perpetualPool.getBToken(i))\n  }\n  const bTokenInfoList = await Promise.all(promiseList)\n  const liquidity = bTokenInfoList.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n  //const pnl = bTokenInfoList.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  //console.log('pnl', pnl.toString())\n\n  const [price, symbolInfo, parameterInfo ] = await Promise.all([\n    //getOraclePrice(poolAddress, symbolId),\n    getOraclePrice(chainId, symbol),\n    perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n  ])\n  priceCache.set(poolAddress, symbolId, price)\n  const { multiplier, fundingRateCoefficient, tradersNetVolume, feeRatio } = symbolInfo;\n  const { minPoolMarginRatio } = parameterInfo;\n  const fundingRateArgs = [\n    tradersNetVolume,\n    price,\n    multiplier,\n    liquidity,\n    fundingRateCoefficient,\n  ]\n  const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs)\n  const fundingRate = processFundingRate(chainId, fundingRatePerBlock)\n  // const liquidityUsedArgs = [\n  //   tradersNetVolume,\n  //   price,\n  //   multiplier,\n  //   liquidity,\n  //   minPoolMarginRatio,\n  // ]\n  let symbolIdList = getPoolSymbolIdList(poolAddress)\n  let promises = []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  const symbols = await Promise.all(promises)\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n    return accum.plus(bg(a.tradersNetVolume).times(a.price).times(a.multiplier).times(minPoolMarginRatio).abs())\n  }, bg(0))\n\n  //const liquidityUsed = liquidityUsedInAmount.div(liquidity)\n  const res = {\n    price,\n    multiplier: multiplier.toString(),\n    feeRatio: feeRatio.toString(),\n    tradersNetVolume: tradersNetVolume.toString(),\n    liquidity: liquidity.toString(),\n    //pnl: pnl.toString(),\n    fundingRateCoefficient: fundingRateCoefficient.toString(),\n    minPoolMarginRatio: minPoolMarginRatio.toString(),\n    fundingRatePerBlock: fundingRatePerBlock,\n    fundingRate: fundingRate,\n    liquidityUsed: liquidityUsedInAmount.div(liquidity)\n  }\n  fundingRateCache.set(chainId, poolAddress, symbolId, res)\n  return res\n}\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  try {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const { fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier } = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  };\n}\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const args = [\n      bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n      res.price,\n      res.multiplier,\n      res.liquidity,\n      res.fundingRateCoefficient,\n    ]\n    let fundingRate1 = calculateFundingRate(...args)\n    fundingRate1 = processFundingRate(chainId, fundingRate1)\n    return {\n      fundingRate1: fundingRate1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    fundingRate1: '',\n  }\n}\n\nexport const getLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    return {\n      liquidityUsed0: res.liquidityUsed.times(100).toString(),\n    };\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed0: '',\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId,\n) => {\n  try {\n    let res = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!res) {\n      res = await _getFundingRate(chainId, poolAddress, symbolId)\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    // const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    // const pToken = pTokenFactory(chainId, pTokenAddress);\n    // const { volume } = pToken.getPosition(accountAddress, symbolId);\n    let symbolIdList = getPoolSymbolIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    let liquidityUsed0 = symbols.reduce((accum, a, index) => {\n      if (index === parseInt(symbolId)) {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume.plus(newNetVolume)).abs())\n      } else {\n        return accum.plus(bg(a.price).times(a.multiplier).times(a.tradersNetVolume).abs())\n      }\n    }, bg(0))\n    //liquidityUsed0 = liquidityUsed0.times(res.minPoolMarginRatio)\n    //const liquidityUsed = bg(newNetVolume).times(res.price).times(res.multiplier).times(res.minPoolMarginRatio).div(res.liquidity)\n    const liquidityUsed1 = liquidityUsed0.times(res.minPoolMarginRatio).div(res.liquidity)\n    return {\n      liquidityUsed1: liquidityUsed1.times(100).toString()\n    }\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidityUsed1: '',\n  }\n}\n\n\nexport const getPoolBTokensBySymbolId = async(chainId, poolAddress, accountAddress, symbolId) => {\n  try {\n    let bTokenList = getPoolBTokenList(poolAddress)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    // let bTokenList = bTokensConfigList.map((i) => {\n    //   return {bTokenId: i.bTokenId, bTokenSymbol: i.bTokenSymbol, bTokenAddress: i.bToken}\n    // })\n    let promiseList = []\n    for (let i=0; i<bTokenList.length; i++) {\n      promiseList.push(bTokenFactory(chainId, bTokenList[i].bTokenAddress).balanceOf(accountAddress))\n    }\n    const resultList = await Promise.all(promiseList)\n    for (let i=0; i<bTokenList.length; i++) {\n      bTokenList[i].walletBalance = resultList[i].toString()\n    }\n\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    const [margins, positions, parameterInfo] = await Promise.all([\n      pToken.getMargins(accountAddress),\n      pToken.getPositions(accountAddress),\n      perpetualPool.getParameters(),\n    ]);\n    const { minInitialMarginRatio } = parameterInfo;\n\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const margin = bTokens.reduce((accum, a, index) => {\n      return accum.plus(bg(a.price).times(a.discount).times(margins[index]))\n    }, bg(0))\n    //console.log('margin', margin.toString())\n\n    promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n\n    promises = []\n    const symbolList = symbols.map((s) => s.symbol)\n    for (let i=0; i< symbols.length; i++) {\n      promises.push(getOraclePrice(chainId, symbolList[i]))\n    }\n    const symbolPrices = await Promise.all(promises)\n    //console.log(symbolPrices)\n\n    const marginHeld = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).abs().times(minInitialMarginRatio))\n    }, bg(0))\n    //console.log('marginHeld', marginHeld.toString())\n\n    const pnl = symbols.reduce((accum, a, index) => {\n      return accum.plus(bg(symbolPrices[index]).times(a.multiplier).times(positions[index].volume).minus(positions[index].cost))\n    }, bg(0))\n    //console.log('pnl', pnl.toString())\n\n    bTokenList = bTokenList.map((i, index) => {\n      if(!isNaN(parseFloat(bTokens[index].price)) || bTokens[index].price !== '0') {\n        i.availableBalance = max(min(margin.minus(marginHeld).plus(pnl).div(bTokens[index].price).div(bTokens[index].discount), margins[index]), bg(0)).toString()\n      } else {\n        i.availableBalance = '-'\n      }\n      return i\n    })\n    return bTokenList\n  } catch(err) {\n    console.log(`${err}`)\n  }\n  return []\n}\n\nexport const getFundingFee = async(chainId, poolAddress, accountAddress, symbolId) => {\n    const symbolConfigList = getPoolSymbolList(poolAddress)\n    const symbolList = symbolConfigList.map((i) => i.symbol)\n    const {pToken: pTokenAddress } = getPoolConfig2(poolAddress, null, symbolId)\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const pToken = pTokenFactory(chainId, pTokenAddress);\n    const [symbolInfo, positionInfo, price, lastUpdatedBlockNumber, latestBlockNumber] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      pToken.getPosition(accountAddress, symbolId),\n      getOraclePrice(chainId, symbolList[parseInt(symbolId)]),\n      perpetualPool.getLastUpdatedBlockNumber(),\n      perpetualPool.getLatestBlockNumber(),\n    ])\n    const { volume, lastCumulativeFundingRate } = positionInfo\n    const { multiplier, fundingRateCoefficient, tradersNetVolume, cumulativeFundingRate, } = symbolInfo;\n    const bTokenIdList = getPoolBTokenIdList(poolAddress)\n    let promises = []\n    for (let i=0; i<bTokenIdList.length; i++) {\n      promises.push(perpetualPool.getBToken(bTokenIdList[i]))\n    }\n    const bTokens = await Promise.all(promises)\n    const liquidity = bTokens.reduce((accum, i) => accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)), bg(0))\n    const fundingFee = calculateFundingFee(\n      tradersNetVolume,\n      price,\n      multiplier,\n      fundingRateCoefficient,\n      liquidity,\n      cumulativeFundingRate,\n      lastCumulativeFundingRate,\n      lastUpdatedBlockNumber,\n      latestBlockNumber,\n      volume,\n    );\n  return fundingFee.toString()\n}\n","import {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n  getPoolBTokenIdList,\n} from '../../shared/config';\nimport { bg } from '../../shared/utils';\nimport { getPriceInfo } from '../../shared/utils/oracle';\nimport { bTokenFactory } from '../../shared/factory';\nimport { isOrderValid } from '../calculation';\nimport {\n  perpetualPoolRouterFactory,\n  pTokenFactory,\n  perpetualPoolFactory,\n} from '../factory';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const { bToken: bTokenAddress } = getPoolConfig2(poolAddress, bTokenId);\n  const bToken = bTokenFactory(chainId, bTokenAddress);\n  let res;\n  try {\n    const tx = await bToken.unlock(accountAddress, poolAddress);\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.addMargin(\n      accountAddress,\n      bTokenId,\n      amount\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const tx = await perpetualPoolRouter.removeMargin(\n      accountAddress,\n      bTokenId,\n      amount,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  let symbolIdList = getPoolSymbolIdList(poolAddress);\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .plus(newVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const tx = await perpetualPoolRouter.trade(\n        accountAddress,\n        symbolId,\n        newVolume\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n\nexport const depositMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.addMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const withdrawMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum = false\n) => {\n  const { router: routerAddress } = getPoolConfig2(poolAddress);\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  let res;\n  try {\n    const promises = symbolIdList.map(async (s) => {\n      return await getPriceInfo(s);\n    });\n    const prices = await Promise.all(promises);\n    const priceInfos = prices.map((p, index) => {\n      return [\n        symbolIdList[index],\n        p.timestamp,\n        p.price,\n        parseInt(p.v).toString(),\n        p.r,\n        p.s,\n      ];\n    });\n    const tx = await perpetualPoolRouter.removeMarginWithPrices(\n      accountAddress,\n      bTokenId,\n      amount,\n      priceInfos,\n      isMaximum\n    );\n    res = { success: true, transaction: tx };\n  } catch (err) {\n    res = { success: false, error: err };\n  }\n  return res;\n};\n\nexport const tradeWithMarginWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  //const [price, symbolInfo, parameterInfo, positions] = await Promise.all([\n  const [parameterInfo, positions] = await Promise.all([\n    //  getOraclePrice(poolAddress, symbolId),\n    //  perpetualPool.getSymbol(symbolId),\n    perpetualPool.getParameters(),\n    pToken.getPositions(accountAddress),\n    //pToken.getMargin(accountAddress, symbolId),\n  ]);\n\n  //const { multiplier } = symbolInfo;\n  const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n\n  const bTokenIdList = getPoolBTokenIdList(poolAddress);\n  const margins = await pToken.getMargins(accountAddress);\n  let promises = [];\n  for (let i = 0; i < bTokenIdList.length; i++) {\n    promises.push(perpetualPool.getBToken(bTokenIdList[i]));\n  }\n  const bTokens = await Promise.all(promises);\n  const margin = bTokens.reduce((accum, i, index) => {\n    return accum.plus(bg(i.price).times(i.discount).times(margins[index]));\n  }, bg(0));\n\n  const liquidity = bTokens.reduce(\n    (accum, i) =>\n      accum.plus(bg(i.liquidity).times(i.price).times(i.discount).plus(i.pnl)),\n    bg(0)\n  );\n  //console.log('liquidity', liquidity.toString())\n  promises = [];\n  for (let i = 0; i < symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]));\n  }\n  const symbols = await Promise.all(promises);\n  let marginHeld = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.price)\n          .times(a.multiplier)\n          .times(positions[index].volume.plus(newVolume))\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.price).times(a.multiplier).times(positions[index].volume).abs()\n      );\n    }\n  }, bg(0));\n  marginHeld = marginHeld.times(minInitialMarginRatio);\n\n  //console.log('margin', margin.toString(), marginHeld.toString())\n  let liquidityUsed = symbols.reduce((accum, a, index) => {\n    if (index === parseInt(symbolId)) {\n      return accum.plus(\n        bg(a.tradersNetVolume.plus(newVolume))\n          .times(a.price)\n          .times(a.multiplier)\n          .abs()\n      );\n    } else {\n      return accum.plus(\n        bg(a.tradersNetVolume).times(a.price).times(a.multiplier).abs()\n      );\n    }\n  }, bg(0));\n  liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n  //console.log('liquidityUsed', liquidityUsed.toString())\n\n  // const pnl = bTokens.reduce((accum, i) => accum.plus(i.pnl), bg(0))\n  // console.log('pnl', pnl.toString())\n\n  const orderValidation = isOrderValid(\n    //price,\n    margin,\n    marginHeld,\n    liquidity,\n    liquidityUsed\n    //multiplier,\n    //minPoolMarginRatio,\n    //bg(newVolume),\n  );\n  let res;\n  if (orderValidation.success) {\n    try {\n      promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n  } else {\n    res = { success: false, error: orderValidation.error };\n  }\n  return res;\n};\n\nexport const closePositionWithPrices = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const { router: routerAddress, pToken: pTokenAddress } = getPoolConfig2(\n    poolAddress\n  );\n  const symbolIdList = getPoolSymbolIdList(poolAddress);\n  const perpetualPoolRouter = perpetualPoolRouterFactory(\n    chainId,\n    routerAddress\n  );\n  const pToken = pTokenFactory(chainId, pTokenAddress);\n  const { volume } = await pToken.getPosition(accountAddress, symbolId);\n  const newVolume = volume.negated();\n  let res;\n  if (!volume.eq(0)) {\n    try {\n      const promises = symbolIdList.map(async (s) => {\n        return await getPriceInfo(s);\n      });\n      const prices = await Promise.all(promises);\n      const priceInfos = prices.map((p, index) => {\n        return [\n          symbolIdList[index],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ];\n      });\n      const tx = await perpetualPoolRouter.tradeWithPrices(\n        accountAddress,\n        symbolId,\n        newVolume,\n        priceInfos\n      );\n      res = { success: true, transaction: tx };\n    } catch (err) {\n      res = { success: false, error: err };\n    }\n    return res;\n  } else {\n    res = { success: false, error: 'no position to close' };\n  }\n  return res;\n};\n","import { bg, deriToNatural, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolFactory } from '../factory';\n\nconst processTradeEvent = async (\n  perpetualPool,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  symbols,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await perpetualPool._getTimeStamp(blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const symbol = symbols.find((s) => s.symbolId == info.symbolId)\n  const transactionFee = perpetualPool._calculateFee(\n    tradeVolume,\n    price,\n    multiplier[parseInt(symbolId)],\n    feeRatio[parseInt(symbolId)]\n  );\n  const notional = tradeVolume.abs().times(price).times(multiplier[parseInt(symbolId)]);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    //baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    volume: bg(volume).times(multiplier[parseInt(symbolId)]).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n  const toBlock = await perpetualPool._getBlockInfo('latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters = { owner: accountAddress };\n  let events = await perpetualPool._getPastEvents(\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      perpetualPool,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      symbols,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const perpetualPool = perpetualPoolFactory(chainId, poolAddress);\n    const symbolIdList = getPoolSymbolIdList(poolAddress)\n    //console.log(symbolIdList)\n\n    let promises = []\n    for (let i=0; i<symbolIdList.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n    }\n    const symbols = await Promise.all(promises)\n    //console.log(symbols)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = parseInt(i.symbolId)\n          if (i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              //baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n            const prices = i.price.split(',').map((s)=> deriToNatural(s))\n            const volumes= i.volume.split(',').map((v)=> deriToNatural(v))\n            const res = ids.map((id) => {\n              return {\n                direction: i.direction.trim(),\n                symbolId: id.toString(),\n                symbol: symbols[id].symbol,\n                volume: volumes[id].times(symbols[id].multiplier).abs().toString(),\n                price: prices[id].toString(),\n                notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            })\n            return res\n            } else {\n              return {\n                direction: i.direction.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                notional: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","\n/* eslint-disable */\nexport const perpetualPoolLiteAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[7]\", \"name\": \"parameters\", \"type\": \"uint256[7]\" }, { \"internalType\": \"address[5]\", \"name\": \"addresses\", \"type\": \"address[5]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLastUpdateBlock\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getLiquidity\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"minPoolMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minMaintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getProtocolFeeAccrued\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingRateCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"price\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" } ], \"internalType\": \"struct IPerpetualPoolLite.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatio\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"fundingRateCoefficient\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"price\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IPerpetualPoolLite.SignedPrice[]\", \"name\": \"prices\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\nexport const bTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const lTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const pTokenLiteAbi = [{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount\",\"type\":\"int256\"}],\"name\":\"UpdateMargin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"name\":\"UpdatePosition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"addMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"addSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveSymbolIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getMargin\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getNumPositionHolders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"getPosition\",\"outputs\":[{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"isActiveSymbolId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"removeSymbolId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPool\",\"type\":\"address\"}],\"name\":\"setPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"}],\"name\":\"toggleCloseOnly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"margin\",\"type\":\"int256\"}],\"name\":\"updateMargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"symbolId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"int256\",\"name\":\"volume\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"cost\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lastCumulativeFundingRate\",\"type\":\"int256\"}],\"internalType\":\"struct IPTokenLite.Position\",\"name\":\"position\",\"type\":\"tuple\"}],\"name\":\"updatePosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]\nexport const perpetualPoolLiteViewerAbi = [ { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" } ], \"name\": \"getOffChainOracleSymbols\", \"outputs\": [ { \"internalType\": \"string[]\", \"name\": \"\", \"type\": \"string[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n/* eslint-disable */","import {\n  //getPoolConfig,\n  ContractBase,\n  deriToNatural,\n  naturalToDeri,\n  //isEqualSet,\n  bTokenFactory,\n} from '../../shared';\nimport { checkOffChainOracleSymbol, getPriceInfos } from '../../shared/utils/oracle';\nimport { perpetualPoolLiteAbi } from './abis';\nimport { lTokenLiteFactory, pTokenLiteFactory } from '../factory';\n\nexport class PerpetualPoolLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, perpetualPoolLiteAbi);\n  }\n\n  async init() {\n    // init web3 and contract\n    await this._init();\n    // init address and parameters\n    if (!this.addresses || !this.pToken) {\n      [this.addresses, this.parameters] = await Promise.all([\n        this.getAddresses(),\n        this.getParameters(),\n      ]);\n      const { bTokenAddress, lTokenAddress, pTokenAddress } = this.addresses;\n      // init bToken, pToken and lToken\n      this.bToken = bTokenFactory(this.chainId, bTokenAddress);\n      this.pToken = pTokenLiteFactory(this.chainId, pTokenAddress);\n      this.lToken = lTokenLiteFactory(this.chainId, lTokenAddress);\n      this.bTokenSymbol = await this.bToken.symbol();\n    }\n    const symbolIds = await this.pToken.getActiveSymbolIds();\n    // update symbolIds\n    if (\n      !this.activeSymbolIds ||\n      this.activeSymbolIds.toString() !== symbolIds.toString() ||\n      !this.offChainOracleSymbolIds\n    ) {\n      this.activeSymbolIds = symbolIds;\n      this.symbols = await Promise.all(\n        this.activeSymbolIds.reduce(\n          (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n          []\n        )\n      );\n      this.activeSymbolNames = this.symbols.map((s) => s.symbol);\n      this.offChainOracleSymbols = await Promise.all(\n        this.symbols\n          .map((s) => s.oracleAddress)\n          .reduce(\n            (acc, o, index) => [\n              ...acc,\n              checkOffChainOracleSymbol(\n                this.chainId,\n                o,\n                this.symbols[index].symbol\n              ),\n            ],\n            []\n          )\n      );\n      this.offChainOracleSymbolIds = this.activeSymbolIds.reduce(\n        (acc, i, index) => {\n          return this.offChainOracleSymbols[index] === '' ? acc : [...acc, i];\n        },\n        []\n      );\n      this.offChainOracleSymbols = this.offChainOracleSymbols.filter(\n        (s) => s && s !== ''\n      );\n      //console.log('offchain', this.offChainOracleSymbols);\n    }\n  }\n\n  // update symbols\n  async getSymbols() {\n    await this.init()\n    this.symbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [...acc, this.getSymbol(symbolId)],\n        []\n      )\n    );\n    return this.symbols\n  }\n\n  // update positions\n  async getPositions(accountAddress) {\n    await this.init()\n    this.positions = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, symbolId) => [\n          ...acc,\n          this.pToken.getPosition(accountAddress, symbolId),\n        ],\n        []\n      )\n    );\n    return this.positions\n  }\n\n  async getAddresses() {\n    const res = await this._call('getAddresses');\n    return res;\n  }\n  async getParameters() {\n    const res = await this._call('getParameters');\n    return {\n      // decimals0: res.decimals0,\n      // minBToken0Ratio: deriToNatural(res.minBToken0Ratio),\n      minPoolMarginRatio: deriToNatural(res.minPoolMarginRatio),\n      minInitialMarginRatio: deriToNatural(res.minInitialMarginRatio),\n      minMaintenanceMarginRatio: deriToNatural(res.minMaintenanceMarginRatio),\n      minLiquidationReward: deriToNatural(res.minLiquidationReward),\n      maxLiquidationReward: deriToNatural(res.maxLiquidationReward),\n      liquidationCutRatio: deriToNatural(res.liquidationCutRatio),\n      protocolFeeCollectRatio: deriToNatural(res.protocolFeeCollectRatio),\n    };\n  }\n  async getLastUpdateBlock() {\n    const res = await this._call('getLastUpdateBlock');\n    return parseInt(res);\n  }\n  async getProtocolFeeAccrued() {\n    const res = await this._call('getProtocolFeeAccrued');\n    return deriToNatural(res);\n  }\n  async getLiquidity() {\n    const res = await this._call('getLiquidity');\n    return deriToNatural(res);\n  }\n  // async getBTokenOracle(bTokenId) {\n  //   //bTokenId = parseInt(bTokenId)\n  //   return await this._call('getBTokenOracle', [bTokenId])\n  // }\n  async getSymbol(symbolId) {\n    //symbolId = parseInt(symbolId)\n    try {\n      const res = await this._call('getSymbol', [symbolId]);\n      return {\n        symbol: res.symbol,\n        symbolId: res.symbolId,\n        oracleAddress: res.oracleAddress,\n        multiplier: deriToNatural(res.multiplier),\n        feeRatio: deriToNatural(res.feeRatio),\n        fundingRateCoefficient: deriToNatural(res.fundingRateCoefficient),\n        price: deriToNatural(res.price),\n        cumulativeFundingRate: deriToNatural(res.cumulativeFundingRate),\n        tradersNetVolume: deriToNatural(res.tradersNetVolume),\n        tradersNetCost: deriToNatural(res.tradersNetCost),\n      };\n    } catch (err) {\n      throw new Error(`PerpetualPool#getSymbol error: ${err}`);\n    }\n  }\n\n  // async getSymbolOracle(symbolId) {\n  //   //symbolId = parseInt(symbolId)\n  //   return await this._call('getSymbolOracle', [symbolId])\n  // }\n\n  async _getSymbolPrices() {\n    let prices = [];\n    await this.init()\n    if (this.offChainOracleSymbolIds.length > 0) {\n      const priceInfos = await getPriceInfos(this.offChainOracleSymbols);\n      prices = Object.values(priceInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.offChainOracleSymbolIds[\n            this.offChainOracleSymbols.indexOf(Object.keys(priceInfos)[index])\n          ],\n          p.timestamp,\n          p.price,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return prices;\n  }\n\n  // === transaction ===\n  async addLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async addMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async removeMargin(accountAddress, amount) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(amount), prices],\n      accountAddress\n    );\n  }\n\n  async trade(accountAddress, symbolId, newVolume) {\n    const prices = await this._getSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(newVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils';\nimport { lTokenLiteAbi } from './abis';\n\nexport class LTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenLiteAbi)\n  }\n\n  // === query ===\n  async balanceOf(accountAddress) {\n    const res = await this._call('balanceOf', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply');\n    return deriToNatural(res);\n  }\n  async pool() {\n    return await this._call('pool');\n  }\n}\n","import { ContractBase } from '../../shared/contract'\nimport { deriToNatural } from '../../shared/utils'\nimport { pTokenLiteAbi } from './abis';\n\nconst processPosition = (res) => {\n  return {\n    volume: deriToNatural(res.volume),\n    cost: deriToNatural(res.cost),\n    lastCumulativeFundingRate: deriToNatural(res.lastCumulativeFundingRate),\n  }\n}\nexport class PTokenLite extends ContractBase {\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenLiteAbi)\n  }\n\n  // === query ===\n  async pool() {\n    return await this._call('pool');\n  }\n  async balanceOf(accountAddress) {\n    return await this._call('balanceOf', [accountAddress]);\n  }\n  async exists(accountAddress) {\n    return await this._call('exists', [accountAddress]);\n  }\n  async ownerOf(tokenId) {\n    return await this._call('ownerOf', [tokenId]);\n  }\n  async getMargin(accountAddress) {\n    const res = await this._call('getMargin', [accountAddress]);\n    return deriToNatural(res)\n  }\n  async getPosition(accountAddress, symbolId) {\n    const res = await this._call('getPosition', [accountAddress, symbolId]);\n    if (Array.isArray(res)) {\n      return processPosition(res)\n    } else {\n      throw new Error(`PToken#getMargin: invalid result with (${accountAddress})`)\n    }\n  }\n  async getActiveSymbolIds() {\n    return await this._call('getActiveSymbolIds');\n  }\n  async isActiveSymbolId(symbolId) {\n    return await this._call('isActiveSymbolId', [symbolId]);\n  }\n  async isApprovedForAll(owner, operator) {\n    return await this._call('isApprovedForAll', [owner, operator]);\n  }\n  async getApproved(tokenId) {\n    return await this._call('getApproved', [tokenId]);\n  }\n  async getNumPositionHolders(symbolId) {\n    return await this._call('getNumPositionHolders', [symbolId]);\n  }\n\n  // === transaction ===\n}\n","import { ContractBase } from '../../shared';\nimport { perpetualPoolLiteViewerAbi } from './abis';\n\nexport class PerpetualPoolLiteViewer extends ContractBase {\n  constructor(chainId, poolAddress) {\n    super(chainId, poolAddress, perpetualPoolLiteViewerAbi);\n  }\n  async getOffChainOracleSymbols(poolAddress) {\n    const res = await this._call('getOffChainOracleSymbols', [poolAddress]);\n    //return res.filter((s) => s && s !== '');\n    return res\n  }\n}\n","import {\n  PerpetualPoolLite,\n  LTokenLite,\n  PTokenLite,\n  PerpetualPoolLiteViewer \n} from './contract';\n\nconst factory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\nexport const perpetualPoolLiteFactory = factory(PerpetualPoolLite)\n\nexport const lTokenLiteFactory = factory(LTokenLite)\n\nexport const pTokenLiteFactory = factory(PTokenLite)\n\nexport const perpetualPoolLiteViewerFactory = factory(PerpetualPoolLiteViewer)","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg, deriToNatural, getNetworkName } from '../../shared/utils';\nimport { databaseFactory } from '../../shared/factory';\nimport { calculateMaxRemovableShares, calculateShareValue } from '../../v1/calculation';\nimport { lTokenLiteFactory, pTokenLiteFactory, perpetualPoolLiteFactory } from '../factory';\n\n\nconst _getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  //const { lToken:lTokenAddress, pToken:pTokenAddress} = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  // const bTokenSymbol = perpetualPool.bTokenSymbol\n  // const lToken = lTokenLiteFactory(chainId, lTokenAddress)\n  // const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  const lToken = perpetualPool.lToken\n  // const pToken = perpetualPool.pToken\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  //const symbolIndex = symbolIds.indexOf(symbolId)\n  //const symbols = perpetualPool.symbols\n\n  const [liquidity, lTokenBalance, lTokenTotalSupply] = await Promise.all([\n    //perpetualPool.getParameters(),\n    perpetualPool.getLiquidity(),\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n    //pToken.getActiveSymbolIds(),\n  ])\n  const { minPoolMarginRatio } = parameterInfo;\n  let promises = []\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises)\n  const totalPnl = symbols.reduce((acc, s) => {\n    return acc.plus(s.tradersNetVolume.times(s.price).times(s.multiplier).minus(s.tradersNetCost))\n  }, bg(0))\n  const poolDynamicEquity = liquidity.minus(totalPnl)\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0))\n  const value = symbols.reduce((acc, s) => acc.plus(bg(s.tradersNetVolume).times(s.price).times(s.multiplier)), bg(0))\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      poolDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      minPoolMarginRatio\n    ).toString(),\n  };\n}\nexport const getLiquidityInfo = async(chainId, poolAddress, accountAddress) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n}\n\nexport const getPoolLiquidity = async (chainId, poolAddress) => {\n  // use the dev database\n  const db = databaseFactory();\n  try {\n    const res = await db\n      .getValues([`${chainId}.${poolAddress}.liquidity`])\n      .catch((err) => console.log('getPoolLiquidity', err));\n    if (res) {\n      const [liquidity] = res;\n      return {\n        liquidity: deriToNatural(liquidity).toString(),\n        symbol:'',\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n  return {\n    liquidity: '',\n    symbol:'',\n  };\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress) => {\n  const db = databaseFactory(true);\n  try {\n    const poolNetwork = getNetworkName(chainId);\n    const res = await db\n      .getValues([\n        `${poolNetwork}.${poolAddress}.apy`,\n        `${poolNetwork}.${poolAddress}.volume.1h`,\n        `${poolNetwork}.${poolAddress}.volume.24h`,\n      ])\n      .catch((err) => console.log('getPoolInfoApy', err));\n    if (res) {\n      const [apy, volume1h, volume24h] = res;\n      return {\n        apy: deriToNatural(apy).toString(),\n        volume1h: deriToNatural(volume1h).toString(),\n        volume24h: deriToNatural(volume24h).toString(),\n      };\n    }\n  } catch (err) {\n    console.log(`${err}`)\n  }\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { perpetualPoolLiteFactory } from '../factory.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    return await perpetualPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","import {\n  calculateEntryPrice ,\n  calculateFundingRate,\n  calculateLiquidationPrice,\n  processFundingRate,\n  calculateFundingFee,\n} from '../../v2/calculation';\nimport { getPoolConfig } from \"../../shared/config\"\nimport { bTokenFactory } from \"../../shared/factory\"\nimport {  perpetualPoolLiteFactory, pTokenLiteFactory } from \"../factory.js\"\nimport {\n  bg,\n  catchApiError,\n  getLatestBlockNumber,\n} from '../../shared/utils';\nimport {  getOraclePriceFromCache2 } from '../../shared/utils/oracle'\nimport { fundingRateCache, liquidatePriceCache, priceCache } from '../../shared/api/api_globals';\nimport { getIndexInfo } from '../../shared/config/token';\n\nexport const getSpecification = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    //const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'v2_lite');\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const bTokenSymbol = perpetualPool.bTokenSymbol\n    const [symbolInfo, parameterInfo] = await Promise.all([\n      perpetualPool.getSymbol(symbolId),\n      perpetualPool.getParameters(),\n    ])\n    const { symbol, multiplier, feeRatio, fundingRateCoefficient } = symbolInfo;\n    const {\n      minPoolMarginRatio,\n      minInitialMarginRatio,\n      minMaintenanceMarginRatio,\n      minLiquidationReward,\n      maxLiquidationReward,\n      liquidationCutRatio,\n      protocolFeeCollectRatio,\n    } = parameterInfo;\n\n    return {\n      symbol,\n      bTokenSymbol,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      minInitialMarginRatio: minInitialMarginRatio.toString(),\n      minMaintenanceMarginRatio: minMaintenanceMarginRatio.toString(),\n      minLiquidationReward: minLiquidationReward.toString(),\n      maxLiquidationReward: maxLiquidationReward.toString(),\n      liquidationCutRatio: liquidationCutRatio.toString(),\n      protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n      indexConstituents: getIndexInfo(symbol),\n    }\n  }, args, 'getSpecification', {\n    symbol: '',\n    bTokenSymbol: '',\n    multiplier: '',\n    feeRatio: '',\n    fundingRateCoefficient: '',\n    minPoolMarginRatio: '',\n    minInitialMarginRatio: '',\n    minMaintenanceMarginRatio: '',\n    minLiquidationReward: '',\n    maxLiquidationReward: '',\n    liquidationCutRatio: '',\n    protocolFeeCollectRatio: '',\n    indexConstituents: { url: '', tokens: [] },\n  })\n}\n\nexport const getPositionInfo = async(chainId, poolAddress, accountAddress, symbolId) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n\n    if (symbolIndex > -1) {\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      const symbol = symbols[symbolIndex].symbol\n      const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        symbolInfo,\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        positionInfo,\n        margin,\n        latestPrice,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const { volume, cost, lastCumulativeFundingRate } = positionInfo;\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbolInfo;\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      // }\n      //const symbols = await Promise.all(promises);\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n        const address = isOffchain ? '' : symbols[i].oracleAddress\n        const _symbol = symbolList[i]\n        promises.push(\n          getOraclePriceFromCache2.get(chainId, _symbol, address),\n        );\n      }\n      const symbolPrices = await Promise.all(promises);\n      let price;\n      if (symbolIndex === '-1') {\n        price = '0';\n      } else {\n        price = symbolPrices[symbolIndex];\n        priceCache.set(poolAddress, symbolId, price);\n      }\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n      const unrealizedPnl = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n        );\n      }, bg(0));\n      const unrealizedPnlList = symbols.map((s, index) => {\n        return [\n          s.symbol,\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .minus(positions[index].cost)\n            .toString(),\n        ];\n      }, bg(0));\n\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n      const dynamicCost = symbols.reduce((accum, s, index) => {\n        if (index !== symbolIndex) {\n          return accum.plus(\n            bg(positions[index].volume)\n              .times(symbolPrices[index])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        latestPrice,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n\n      liquidatePriceCache.set(poolAddress, {\n        volume,\n        margin,\n        totalCost,\n        dynamicCost,\n        price,\n        multiplier,\n        minMaintenanceMarginRatio,\n      });\n\n      return {\n        symbol:symbols[symbolIndex].symbol,\n        price,\n        volume: bg(volume).times(symbols[symbolIndex].multiplier).toString(),\n        averageEntryPrice: calculateEntryPrice(\n          volume,\n          cost,\n          multiplier\n        ).toString(),\n        margin: margin.toString(),\n        marginHeld: marginHeld.toString(),\n        marginHeldBySymbol: marginHeldBySymbol.toString(),\n        unrealizedPnl: unrealizedPnl.toString(),\n        unrealizedPnlList,\n        fundingFee: fundingFee.toString(),\n        liquidationPrice: calculateLiquidationPrice(\n          volume,\n          margin,\n          totalCost,\n          dynamicCost,\n          multiplier,\n          minMaintenanceMarginRatio\n        ).toString(),\n      };\n    } else {\n      throw new Error(`-- getPostionInfo: invalid symbolId(${symbolId})`)\n    }\n  }, args, 'getPositionInfo', {\n      symbol: '',\n      price: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      fundingFee: '',\n      liquidationPrice: '',\n  })\n}\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const pToken = perpetualPool.pToken\n    const parameterInfo = perpetualPool.parameters \n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      // const symbol = symbols[symbolIndex].symbol\n      // const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      // const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n      const [\n        liquidity,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        margin,\n      ] = await Promise.all([\n        //const [ parameterInfo, symbolInfo, liquidity, symbolIds, latestBlockNumber, positionInfo, margin, latestPrice] = await Promise.all([\n        //perpetualPool.getSymbol(symbolId),\n        perpetualPool.getLiquidity(),\n        perpetualPool.getLastUpdateBlock(),\n        getLatestBlockNumber(chainId),\n        //pToken.getPosition(accountAddress, symbolId),\n        pToken.getMargin(accountAddress),\n        //getOraclePriceFromCache2.get(chainId, symbol,oracleAddress),\n      ]);\n      //console.log(latestBlockNumber, lastUpdatedBlockNumber)\n      const {\n        minInitialMarginRatio,\n        minMaintenanceMarginRatio,\n      } = parameterInfo;\n\n      const symbolList = symbols.map((s) => s.symbol);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        const isOffchain = perpetualPool.offChainOracleSymbolIds.indexOf(symbolIds[i]) > -1\n        const address = isOffchain ? '' : symbols[i].oracleAddress\n        const _symbol = symbolList[i]\n        promises.push(\n          getOraclePriceFromCache2.get(chainId, _symbol, address),\n        );\n      }\n      const symbolPrices = await Promise.all(promises);\n\n      const marginHeld = symbols.reduce((acc, s, index) => {\n        return acc.plus(\n          bg(symbolPrices[index])\n            .times(s.multiplier)\n            .times(positions[index].volume)\n            .times(minInitialMarginRatio)\n            .abs()\n        );\n      }, bg(0));\n\n      // const unrealizedPnlList = symbols.map((s, index) => {\n      //   return [\n      //     s.symbol,\n      //     bg(symbolPrices[index])\n      //       .times(s.multiplier)\n      //       .times(positions[index].volume)\n      //       .minus(positions[index].cost)\n      //       .toString(),\n      //   ];\n      // }, bg(0));\n      const totalCost = positions.reduce((accum, p) => {\n        return accum.plus(bg(p.cost));\n      }, bg(0));\n\n      return positions.map((p, index) => {\n      const symbolId = symbolList[index]\n      const symbol = symbols[index]\n      const price = symbolPrices[index]\n\n      const { volume, cost, lastCumulativeFundingRate } = p\n      const {\n        multiplier,\n        fundingRateCoefficient,\n        tradersNetVolume,\n        cumulativeFundingRate,\n      } = symbol;\n      priceCache.set(poolAddress, symbolId, price);\n\n      const unrealizedPnl = bg(symbolPrices[index]).times(symbol.multiplier).times(p.volume).minus(p.cost)\n\n      const dynamicCost = symbols.reduce((accum, s, idx) => {\n        if (idx !== index) {\n          return accum.plus(\n            bg(positions[idx].volume)\n              .times(symbolPrices[idx])\n              .times(s.multiplier)\n          );\n        } else {\n          return accum;\n        }\n      }, bg(0));\n      const fundingFee = calculateFundingFee(\n        tradersNetVolume,\n        price,\n        multiplier,\n        fundingRateCoefficient,\n        liquidity,\n        cumulativeFundingRate,\n        lastCumulativeFundingRate,\n        lastUpdatedBlockNumber,\n        latestBlockNumber,\n        volume\n      );\n      const marginHeldBySymbol = bg(volume)\n        .abs()\n        .times(multiplier)\n        .times(price)\n        .times(minInitialMarginRatio);\n\n        return {\n          symbol: symbol.symbol,\n          symbolId: symbol.symbolId,\n          price,\n          volume: bg(volume).times(symbols[index].multiplier).toString(),\n          averageEntryPrice: calculateEntryPrice(\n            volume,\n            cost,\n            multiplier\n          ).toString(),\n          margin: margin.toString(),\n          marginHeld: marginHeld.toString(),\n          marginHeldBySymbol: marginHeldBySymbol.toString(),\n          unrealizedPnl: unrealizedPnl.toString(),\n          //unrealizedPnlList,\n          fundingFee: fundingFee.toString(),\n          liquidationPrice: calculateLiquidationPrice(\n            volume,\n            margin,\n            totalCost,\n            dynamicCost,\n            multiplier,\n            minMaintenanceMarginRatio\n          ).toString(),\n        };\n      }).filter((p) => p.volume !== '0')\n  }, args, 'getPositionInfos', [])\n}\n\nexport const getWalletBalance = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(accountAddress)\n    return balance.toString()\n  }, args, 'getWalletBalance', '')\n}\n\nexport const isUnlocked = async(chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress]\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const { bToken:bTokenAddress } = getPoolConfig(poolAddress, '0', null, 'v2_lite')\n    const bToken = bTokenFactory(chainId, bTokenAddress)\n    return await bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nconst _getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n  await perpetualPool.init()\n  const parameterInfo = perpetualPool.parameters\n  const symbolIds = perpetualPool.activeSymbolIds\n  const symbolIndex = symbolIds.indexOf(symbolId)\n\n  let promises = [];\n  for (let i = 0; i < symbolIds.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIds[i]));\n  }\n  const symbols = await Promise.all(promises);\n\n  if (symbolIndex > -1) {\n    const symbolInfo = symbols[symbolIndex];\n    const symbol = symbols[symbolIndex].symbol;\n    const isOffchainOracleSymbol =\n      perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n    const oracleAddress = isOffchainOracleSymbol\n      ? ''\n      : symbols[symbolIndex].oracleAddress;\n    const [liquidity, price] = await Promise.all([\n      perpetualPool.getLiquidity(),\n       getOraclePriceFromCache2.get(chainId, symbol, oracleAddress),\n    ]);\n    priceCache.set(poolAddress, symbolId, price);\n    const {\n      multiplier,\n      fundingRateCoefficient,\n      tradersNetVolume,\n      feeRatio,\n    } = symbolInfo;\n    const { minPoolMarginRatio } = parameterInfo;\n    const fundingRateArgs = [\n      tradersNetVolume,\n      price,\n      multiplier,\n      liquidity,\n      fundingRateCoefficient,\n    ];\n    const fundingRatePerBlock = calculateFundingRate(...fundingRateArgs);\n    const fundingRate = processFundingRate(chainId, fundingRatePerBlock);\n\n    const liquidityUsedInAmount = symbols.reduce((accum, a) => {\n      return accum.plus(\n        bg(a.tradersNetVolume)\n          .times(a.price)\n          .times(a.multiplier)\n          .times(minPoolMarginRatio)\n          .abs()\n      );\n    }, bg(0));\n\n    const res = {\n      price,\n      multiplier: multiplier.toString(),\n      feeRatio: feeRatio.toString(),\n      tradersNetVolume: tradersNetVolume.toString(),\n      liquidity: liquidity.toString(),\n      fundingRateCoefficient: fundingRateCoefficient.toString(),\n      minPoolMarginRatio: minPoolMarginRatio.toString(),\n      fundingRatePerBlock: fundingRatePerBlock,\n      fundingRate: fundingRate,\n      liquidityUsed: liquidityUsedInAmount.div(liquidity),\n    };\n    fundingRateCache.set(chainId, poolAddress, symbolId, res);\n    return res;\n  } else {\n    throw new Error(`-- getFundingRate: invalide symbolId(${symbolId})`);\n  }\n}\n\nexport const getEstimatedFee = async(chainId, poolAddress, volume, symbolId) => {\n  const args = [chainId, poolAddress, volume, symbolId]\n  return catchApiError(async(chainId, poolAddress, volume, symbolId) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = perpetualPool.activeSymbolIds.indexOf(symbolId)\n\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    const symbol = symbols[symbolIndex]\n    let price = priceCache.get(poolAddress, symbolId)\n    //console.log('symbol',symbol)\n\n    if (!price) {\n      const symbolName = symbol.symbol;\n      const isOffchainOracleSymbol =\n        perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1;\n      const oracleAddress = isOffchainOracleSymbol ? '' : symbol.oracleAddress;\n      price = await getOraclePriceFromCache2.get(chainId, symbolName, oracleAddress, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n    }\n    let cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    if (!cache || !cache.multiplier) {\n      await _getFundingRate(chainId, poolAddress, symbolId)\n      cache = fundingRateCache.get(chainId, poolAddress, symbolId)\n    }\n    const { multiplier, feeRatio } = cache;\n    return bg(volume).abs().times(price).times(multiplier).times(feeRatio).toString()\n  }, args, 'getFundingFee', '')\n}\nexport const getEstimatedMargin = async(\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId,\n) => {\n  const args = [chainId, poolAddress, accountAddress, volume, leverage, symbolId]\n  return catchApiError(async(chainId, poolAddress, accountAddress, volume, leverage, symbolId) => {\n    const { symbol } = getPoolConfig(poolAddress, '0', symbolId, 'v2_lite');\n    //console.log('symbol',symbol)\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    const symbolIndex = symbolIds.indexOf(symbolId)\n    let promises = [];\n    for (let i = 0; i < symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]));\n    }\n    const symbols = await Promise.all(promises);\n    if (symbolIndex > -1) {\n      const symbol = symbols[symbolIndex].symbol\n      const isOffchainOracleSymbol = perpetualPool.offChainOracleSymbolIds.indexOf(symbolId) > -1\n      const oracleAddress = isOffchainOracleSymbol ? '' : symbols[symbolIndex].oracleAddress\n\n      const price =  await getOraclePriceFromCache2.get(chainId, symbol, oracleAddress, 'v2_lite')\n      priceCache.set(poolAddress, symbolId, price)\n      const { multiplier } = symbols[symbolIndex]\n      return bg(volume).abs().times(price).times(multiplier).div(bg(leverage)).toString()\n    } else {\n      throw new Error(`-- getEstimatedMargin: invalid symbolId(${symbolId})`)\n    }\n\n  }, args, 'getEstimatedMargin', '')\n}\n\nexport const getFundingRateCache = async(chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId)\n}\n\nexport const getFundingRate = async(chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId]\n  return catchApiError(async(chainId, poolAddress, symbolId) => {\n    const res = await _getFundingRate(chainId, poolAddress, symbolId)\n    const {fundingRate, fundingRatePerBlock, liquidity, tradersNetVolume, multiplier} = res\n    return {\n      fundingRate0: fundingRate.times(100).toString(),\n      fundingRatePerBlock: fundingRatePerBlock.toString(),\n      liquidity: liquidity.toString(),\n      volume: '-',\n      tradersNetVolume: bg(tradersNetVolume).times(multiplier).toString()\n    }\n  }, args, 'getFundingRate', {\n    fundingRate0: '',\n    fundingRatePerBlock: '',\n    liquidity: '',\n    volume: '',\n    tradersNetVolume: '',\n  })\n}\n\nexport const getEstimatedFundingRate = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const args = [\n        bg(res.tradersNetVolume).plus(newNetVolume).toString(),\n        res.price,\n        res.multiplier,\n        res.liquidity,\n        res.fundingRateCoefficient,\n      ];\n      let fundingRate1 = calculateFundingRate(...args);\n      fundingRate1 = processFundingRate(chainId, fundingRate1);\n      return {\n        fundingRate1: fundingRate1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    ''\n  );\n}\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    ''\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async(chainId, poolAddress, newNetVolume, symbolId) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId]\n  return catchApiError(\n    async () => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        symbolId,\n        'v2_lite'\n      );\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const symbolIds = await pToken.getActiveSymbolIds();\n      let promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      let liquidityUsed0 = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(s.tradersNetVolume.plus(newNetVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(s.tradersNetVolume).abs()\n          );\n        }\n      }, bg(0));\n      const liquidityUsed1 = liquidityUsed0\n        .times(res.minPoolMarginRatio)\n        .div(res.liquidity);\n      return {\n        liquidityUsed1: liquidityUsed1.times(100).toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    ''\n  );\n}\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\nimport { isOrderValid } from '../../v2/calculation';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory.js';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    // const { bToken: bTokenAddress } = getPoolConfig(\n    //   poolAddress,\n    //   '0',\n    //   null,\n    //   'v2_lite'\n    // );\n    // const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await perpetualPool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n      await perpetualPool.init()\n      return await perpetualPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      return await perpetualPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n      // const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      // const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      const pToken = perpetualPool.pToken\n      const parameterInfo = perpetualPool.parameters\n      // const symbols = perpetualPool.symbols\n      const symbolIds = perpetualPool.activeSymbolIds\n      const [liquidity, margin] = await Promise.all([\n        //perpetualPool.getParameters(),\n        perpetualPool.getLiquidity(),\n        pToken.getMargin(accountAddress),\n        //pToken.getActiveSymbolIds(),\n      ]);\n      const { minInitialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      let promises = [];\n\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(perpetualPool.getSymbol(symbolIds[i]));\n      }\n      const symbols = await Promise.all(promises);\n\n      promises = [];\n      for (let i = 0; i < symbolIds.length; i++) {\n        promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      }\n      const positions = await Promise.all(promises);\n\n      let marginHeld = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.price)\n              .times(s.multiplier)\n              .times(positions[index].volume.plus(newVolume))\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n          );\n        }\n      }, bg(0));\n      marginHeld = marginHeld.times(minInitialMarginRatio);\n\n      let liquidityUsed = symbols.reduce((acc, s, index) => {\n        if (index === parseInt(symbolId)) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newVolume)\n              .times(s.price)\n              .times(s.multiplier)\n              .abs()\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n          );\n        }\n      }, bg(0));\n      liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      const orderValidation = isOrderValid(\n        margin,\n        marginHeld,\n        liquidity,\n        liquidityUsed\n      );\n      if (orderValidation.success) {\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error(orderValidation.error);\n      }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'v2_lite'\n      // );\n\n      const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n      await perpetualPool.init()\n      //const pToken = pTokenLiteFactory(chainId, pTokenAddress);\n      const pToken = perpetualPool.pToken\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!volume.eq(0)) {\n        const newVolume = volume.negated();\n        return await perpetualPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { bg, deriToNatural, getBlockInfo, getPastEvents, getHttpBase, fetchJson } from '../../shared/utils';\nimport {\n  getPoolConfig,\n  getPoolConfig2,\n  getPoolSymbolIdList,\n} from '../../shared/config';\nimport { perpetualPoolLiteFactory, pTokenLiteFactory } from '../factory';\nimport { calculateTxFee } from '../../v2/calculation/position';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  feeRatio,\n  bTokenSymbol,\n  symbols,\n  symbolIds,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const price = deriToNatural(info.price);\n  const time = `${+timeStamp.timestamp}000`;\n  const symbolId = info.symbolId\n  const index = symbolIds.findIndex((s) => s === symbolId)\n  const symbol = symbols[index]\n  const transactionFee = calculateTxFee(\n    tradeVolume,\n    price,\n    symbol.multiplier,\n    symbol.feeRatio,\n  );\n  const notional = tradeVolume.abs().times(price).times(symbol.multiplier);\n  const volume = tradeVolume.abs();\n\n  const res = {\n    direction,\n    baseToken: bTokenSymbol,\n    symbolId,\n    symbol: symbol && symbol.symbol,\n    price: price.toString(),\n    notional: notional.toString(),\n    //volume: volume.toString(),\n    volume: bg(volume).times(symbol.multiplier).toString(),\n    transactionFee: transactionFee.toString(),\n    transactionHash: txHash.toString(),\n    time,\n  };\n  return res;\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol } = getPoolConfig(poolAddress, undefined, undefined, 'v2_lite')\n  const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress);\n  const { pTokenAddress } = await perpetualPool.getAddresses()\n  const pToken = pTokenLiteFactory(chainId, pTokenAddress)\n  //const symbolIdList = getPoolSymbolIdList(poolAddress)\n  const symbolIdList = await pToken.getActiveSymbolIds()\n  const toBlock = await getBlockInfo(chainId, 'latest');\n  fromBlock = parseInt(fromBlock);\n\n  let promises= []\n  for (let i=0; i<symbolIdList.length; i++) {\n    promises.push(perpetualPool.getSymbol(symbolIdList[i]))\n  }\n  let symbols = await Promise.all(promises)\n\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n  const feeRatio = symbols.map((i) => i.feeRatio.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, perpetualPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  const result = [];\n  events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      feeRatio,\n      bTokenSymbol,\n      symbols,\n      symbolIdList,\n    );\n    result.unshift(res);\n  }\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const res = await fetchJson(\n      `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n    );\n    if (res && res.success) {\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n\n    const perpetualPool = perpetualPoolLiteFactory(chainId, poolAddress)\n    await perpetualPool.init()\n    const symbolIds = perpetualPool.activeSymbolIds\n    //const symbolIndex = symbolIds.indexOf(symbolId)\n\n    let promises= []\n    for (let i=0; i<symbolIds.length; i++) {\n      promises.push(perpetualPool.getSymbol(symbolIds[i]))\n    }\n    let symbols = await Promise.all(promises)\n\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          if (i.direction !== 'LIQUIDATION') {\n            const index = symbolIds.indexOf(i.symbolId);\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              //volume: deriToNatural(i.volume).toString(),\n              volume: deriToNatural(i.volume)\n                .times(symbols[index].multiplier)\n                .toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          } else {\n            if (i.volume !== '' && i.volume.indexOf(',') > -1 && !i.price.startsWith('NaN')) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc\n                }\n              }, []);\n              const prices = i.price.split(',').map((s)=> deriToNatural(s))\n              const volumes = i.volume.split(',').map((v)=> deriToNatural(v))\n              return ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id].abs().times(symbols[id].multiplier).toString(),\n                  price: prices[id].toString(),\n                  notional: volumes[id].abs().times(prices[id]).times(symbols[id].multiplier).toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              })\n            } else {\n              // handle missing price data\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                price: '',\n                notional: '',\n                //volume: deriToNatural(i.volume).toString(),\n                volume: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              }\n            }\n          }\n        }).flat();\n    }\n      //console.log('tradeHistory1',tradeHistory)\n    if (tradeFromBlock !== 0) {\n      // console.log(tradeFromBlock, liquidateFromBlock)\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n\n      const {initialBlock} = getPoolConfig2(poolAddress)\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","const invalidValues = [NaN, null, undefined];\n\nfunction getEverlastingTimePriceAndDelta(S, K, V, T) {\n  let u = Math.sqrt(8 / V / V / T + 1);\n  let timeValue, delta;\n  if (S > K) {\n    timeValue = (K * Math.pow(S / K, (1 - u) / 2)) / u;\n    delta = ((1 - u) * timeValue) / S / 2;\n  } else if (S === K) {\n    timeValue = K / u;\n    delta = 0;\n  } else {\n    timeValue = (K * Math.pow(S / K, (1 + u) / 2)) / u;\n    delta = ((1 + u) * timeValue) / S / 2;\n  }\n  return [timeValue, delta];\n}\n\nfunction getDynamicInitialMarginRatio(\n  spot,\n  strike,\n  isCall,\n  initialMarginRatio,\n  minInitialMarginRatio\n) {\n  if ((isCall && spot >= strike) || (!isCall && strike >= spot)) {\n    return initialMarginRatio;\n  } else {\n    let otmRatio = (isCall ? strike - spot : spot - strike) / strike;\n    return Math.max(\n      (1 - otmRatio * 3) * initialMarginRatio,\n      minInitialMarginRatio\n    );\n  }\n}\n\n// multiple position for same underlier, e.x. BTCUSD\nfunction canLiquidateWithPrice(\n  pool,\n  trader,\n  symbols,\n  positions,\n  newUnderlierPrice\n) {\n  let newDynamicMargin = trader.dynamicMargin;\n  let newInitialMargin = trader.initialMargin;\n\n  for (let i = 0; i < symbols.length; i++) {\n    let symbol = symbols[i];\n    let position = positions[i];\n    if (position.volume === 0) {\n      continue;\n    }\n\n    let newIntrinsicValue = symbol.isCall\n      ? Math.max(newUnderlierPrice - symbol.strikePrice, 0)\n      : Math.max(symbol.strikePrice - newUnderlierPrice, 0);\n    let [newTimeValue, newDelta] = getEverlastingTimePriceAndDelta(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.volatility,\n      pool.fundingPeriod\n    );\n    if (newIntrinsicValue > 0) {\n      newDelta += symbol.isCall ? 1 : -1;\n    }\n    let newPnl =\n      position.volume * (newIntrinsicValue + newTimeValue) * symbol.multiplier -\n      position.cost;\n    let newDynamicMarginRatio = getDynamicInitialMarginRatio(\n      newUnderlierPrice,\n      symbol.strikePrice,\n      symbol.isCall,\n      pool.initialMarginRatio,\n      0.01\n    );\n\n    newDynamicMargin = newDynamicMargin - position.pnl + newPnl;\n    newInitialMargin =\n      newInitialMargin -\n      Math.abs(\n        position.volume *\n          symbol.spotPrice *\n          symbol.multiplier *\n          symbol.dynamicMarginRatio\n      ) +\n      Math.abs(\n        position.volume *\n          newUnderlierPrice *\n          symbol.multiplier *\n          newDynamicMarginRatio\n      );\n  }\n\n  let newMaintenanceMargin =\n    (newInitialMargin * pool.maintenanceMarginRatio) / pool.initialMarginRatio;\n\n  if (\n    invalidValues.includes(newMaintenanceMargin) ||\n    invalidValues.includes(newDynamicMargin)\n  ) {\n    throw new Error(\n      `-- canLiquidateWithPrice: Invalid Margin value: ${newMaintenanceMargin} ${newDynamicMargin}`\n    );\n  }\n  return newMaintenanceMargin > newDynamicMargin;\n}\n\nexport function findLiquidationPrice(pool, trader, symbols, positions) {\n  if (symbols.length != positions.length) {\n    throw new Error(\n      'canLiquidateWithPrice: symbols and positions length not match'\n    );\n  }\n  if (symbols.length === 0) {\n    return {\n      numPositions: positions.length,\n      price1: null,\n      price2: null,\n    };\n  }\n  let head = symbols[0].symbol.slice(0, 6);\n  for (let i = 0; i < symbols.length; i++) {\n    if (!symbols[i].symbol.startsWith(head)) {\n      throw new Error('canLiquidateWithPrice: symbols not in same underlier');\n    }\n  }\n\n  if (trader.maintenanceMargin > trader.dynamicMargin) {\n    return {\n      numPositions: positions.length,\n      price1: symbols[0].spotPrice,\n      price2: symbols[0].spotPrice,\n    };\n  }\n\n  let final1, final2;\n  let price1, price2;\n  let l1, l2;\n\n  price1 = symbols[0].spotPrice / 10;\n  price2 = symbols[0].spotPrice;\n  l1 = canLiquidateWithPrice(pool, trader, symbols, positions, price1);\n  l2 = false;\n  while (true) {\n    if (l1 && l2) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final1 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final1 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  price1 = symbols[0].spotPrice;\n  price2 = symbols[0].spotPrice * 10;\n  l1 = false;\n  l2 = canLiquidateWithPrice(pool, trader, symbols, positions, price2);\n  while (true) {\n    if (l1 && l2) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    if (!l1 && !l2) {\n      final2 = null;\n      break;\n    }\n    if (price2 - price1 < symbols[0].spotPrice / 1000) {\n      final2 = (price1 + price2) / 2;\n      break;\n    }\n    let price = (price1 + price2) / 2;\n    let l = canLiquidateWithPrice(pool, trader, symbols, positions, price);\n    if (l === l1) price1 = price;\n    else price2 = price;\n  }\n\n  return {\n    numPositions: positions.length,\n    price1: final1,\n    price2: final2,\n  };\n}\n","import { bg, max, normalizeOptionSymbol, toNumberForObject } from \"../../shared\"\nimport { findLiquidationPrice } from './findLiquidationPrice2';\n\nexport const dynamicInitialMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialMarginRatio), bg(0.01))\n  }\n}\n\nexport const dynamicInitialPoolMarginRatio = (spot, strike, isCall, initialMarginRatio) => {\n  // for pool\n  const initialPoolMarginRatio = bg(initialMarginRatio).times(10)\n  if ((bg(strike).gte(spot) && !isCall) || (bg(strike).lte(spot) && isCall)) {\n    return initialMarginRatio\n  } else {\n    const otmRatio = isCall ? bg(strike).minus(spot).div(strike) : bg(spot).minus(strike).div(strike)\n    return max((bg(1).minus(otmRatio.times(3))).times(initialPoolMarginRatio), bg(0.01).times(10))\n  }\n}\n\nexport const getDeltaFundingPerSecond = (symbol, delta, price, totalDynamicEquity, newNetVolume)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(delta)\n        .times(bg(symbol.tradersNetVolume).plus(newNetVolume))\n        .times(price)\n        .times(price)\n        .times(symbol.multiplier)\n        .times(symbol.multiplier)\n        .times(symbol.deltaFundingCoefficient)\n        .div(totalDynamicEquity);\n} \nexport const getpremiumFunding = (symbol, premiumFundingCoefficient, totalDynamicEquity)  => {\n  return bg(totalDynamicEquity).eq(0)\n    ? bg(0)\n    : bg(symbol.timeValue)\n        .times(symbol.multiplier)\n        .times(premiumFundingCoefficient)\n        .div(totalDynamicEquity);\n} \n\nexport const getIntrinsicPrice = (price, strikePrice, isCall) => {\n  return isCall\n    ? max(bg(price).minus(strikePrice), bg(0))\n    : max(bg(strikePrice).minus(price), bg(0));\n};\n\n\nexport const getMarginHeldBySymbol = (\n  volume,\n  price,\n  symbol,\n  initialMarginRatio\n) => {\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(\n      dynamicInitialMarginRatio(\n        price,\n        symbol.strikePrice,\n        symbol.isCall,\n        initialMarginRatio\n      )\n    );\n};\n\nexport const getAverageEntryPrice = (position, symbol) => {\n  return bg(position.volume).eq(0)\n    ? '0'\n    : bg(position.cost).div(position.volume).div(symbol.multiplier).toString();\n};\n\nexport const getLiquidationPrice = (state, symbolId)  => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const normalizedSymbol = normalizeOptionSymbol(symbolState[symbolId].symbol)\n  let res = findLiquidationPrice(\n    toNumberForObject(poolState, [\n      'initialMarginRatio',\n      'maintenanceMarginRatio',\n      'fundingPeriod',\n      'fundingCoefficient',\n      'marginMultiplier',\n      'liquidity',\n      'totalDynamicEquity',\n      'totalInitialMargin',\n    ]),\n    toNumberForObject(traderState, [\n      'margin',\n      'totalPnl',\n      'totalFundingAccrued',\n      'dynamicMargin',\n      'initialMargin',\n      'maintenanceMargin',\n    ]),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'volatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativeFundingRate',\n          'fundingPerSecond',\n        ])\n      ),\n    symbolState\n      .filter((s, index) => positionState[index].volume !== '0')\n      .filter((s) => s.symbol.startsWith(normalizedSymbol))\n      .map((s) =>\n        toNumberForObject(positionState[s.symbolId], [\n          'volume',\n          'cost',\n          'lastCumulativePremiumFundingRate',\n          'pnl',\n          'premiumFundingAccrued',\n        ])\n      )\n  );\n  res.underlier = normalizedSymbol\n  return res\n}\n\nexport const getLiquidationPrices = (state) => {\n  const { poolState, symbolState, traderState, positionState } = state;\n  const symbols = symbolState.filter((s, index) => positionState[index].volume !== '0').map((s) => s.symbol);\n  const oracleSymbols = symbols\n    .map((i) => normalizeOptionSymbol(i))\n    .filter((value, index, self) => self.indexOf(value) === index);\n\n  const liquidationPrices = oracleSymbols.map((oSymbol) => {\n    let res = findLiquidationPrice(\n      toNumberForObject(poolState, [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'premiumFundingPeriod',\n        'premiumFundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      toNumberForObject(traderState, [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(s, [\n          'multiplier',\n          'strikePrice',\n          'spotPrice',\n          'dpmmPrice',\n          'underlierVolatility',\n          'timePrice',\n          'dynamicMarginRatio',\n          'intrinsicValue',\n          'timeValue',\n          'delta',\n          'K',\n          'tradersNetVolume',\n          'tradersNetCost',\n          'cumulativePremiumFundingRate',\n          'premiumFundingPerSecond',\n          ])\n        ),\n      symbolState\n        .filter((s, index) => positionState[index].volume !== '0')\n        .filter((s) => s.symbol.startsWith(oSymbol))\n        .map((s) =>\n          toNumberForObject(positionState[s.symbolId], [\n            'volume',\n            'cost',\n            'lastCumulativeDeltaFundingRate',\n            'lastCumulativePremiumFundingRate',\n            'pnl',\n            'deltaFundingAccrued',\n            'premiumFundingAccrued',\n          ])\n        )\n    );\n    return res;\n  });\n  return oracleSymbols.map((i, index) => { \n    liquidationPrices[index].underlier = i\n    return liquidationPrices[index]\n  })\n};","/* eslint-disable */\nexport const everlastingOptionAbi = [ { \"inputs\": [ { \"internalType\": \"uint256[6]\", \"name\": \"parameters\", \"type\": \"uint256[6]\" }, { \"internalType\": \"address[6]\", \"name\": \"addresses\", \"type\": \"address[6]\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"AddMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"address\", \"name\": \"oldController\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"ChangeController\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"ExecuteMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"liquidator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"reward\", \"type\": \"uint256\" } ], \"name\": \"Liquidate\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"migrationTimestamp\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" } ], \"name\": \"PrepareMigration\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"collector\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"ProtocolFeeCollection\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveLiquidity\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"RemoveMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradeCost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" } ], \"name\": \"Trade\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"addLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"strikePrice\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"addSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"approveMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"claimNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"collectProtocolFee\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"controller\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"source\", \"type\": \"address\" } ], \"name\": \"executeMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getAddresses\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"bTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"lTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pTokenAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"liquidatorQualifierAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"protocolFeeCollector\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricerAddress\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getParameters\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maxLiquidationReward\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidationCutRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeCollectRatio\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolMarginMultiplier\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getPoolStateValues\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"lastTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"protocolFeeAccrued\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getSymbol\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioITM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"feeRatioOTM\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IEverlastingOption.SymbolInfo\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"liquidate\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationDestination\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"migrationTimestamp\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"target\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"graceDays\", \"type\": \"uint256\" } ], \"name\": \"prepareMigration\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"lShares\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeLiquidity\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"bAmount\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"removeMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbol\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newController\", \"type\": \"address\" } ], \"name\": \"setNewController\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"multiplier\", \"type\": \"uint256\" } ], \"name\": \"setPoolMarginMulitplier\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioITM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"feeRatioOTM\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"alpha\", \"type\": \"uint256\" } ], \"name\": \"setSymbolParameters\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"tradeVolume\", \"type\": \"int256\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"timestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }, { \"internalType\": \"uint8\", \"name\": \"v\", \"type\": \"uint8\" }, { \"internalType\": \"bytes32\", \"name\": \"r\", \"type\": \"bytes32\" }, { \"internalType\": \"bytes32\", \"name\": \"s\", \"type\": \"bytes32\" } ], \"internalType\": \"struct IEverlastingOption.SignedValue[]\", \"name\": \"volatilities\", \"type\": \"tuple[]\" } ], \"name\": \"trade\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const everlastingOptionViewerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"theoreticalPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetPosition\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" } ], \"name\": \"_calculateDpmmPrice\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"changePercent\", \"type\": \"int256\" } ], \"name\": \"_calculateOptionValueChange\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"change\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"spot\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strike\", \"type\": \"int256\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"minInitialMarginRatio\", \"type\": \"int256\" } ], \"name\": \"_getDynamicInitialMarginRatio\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"_getTraderPortfolio\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"_initState\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"str\", \"type\": \"string\" }, { \"internalType\": \"uint256\", \"name\": \"start\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"end\", \"type\": \"uint256\" } ], \"name\": \"_slice\", \"outputs\": [ { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolFundingRates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateSymbolPrices\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderFunding\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"name\": \"_updateTraderMargins\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getPoolStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getPriceOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"int256[]\", \"name\": \"spotPrices\", \"type\": \"int256[]\" }, { \"internalType\": \"int256[]\", \"name\": \"volatilities\", \"type\": \"int256[]\" } ], \"name\": \"getTraderStates\", \"outputs\": [ { \"components\": [ { \"components\": [ { \"internalType\": \"address\", \"name\": \"pool\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"pToken\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"optionPricer\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"initialMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPeriod\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingCoefficient\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"marginMultiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"liquidity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDynamicEquity\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalInitialMargin\", \"type\": \"int256\" }, { \"internalType\": \"uint256\", \"name\": \"preTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"curTimestamp\", \"type\": \"uint256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaBTCUSD\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalDollarDeltaETHUSD\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PoolState\", \"name\": \"pool\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalPnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"totalFundingAccrued\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"initialMargin\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"maintenanceMargin\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.TraderState\", \"name\": \"trader\", \"type\": \"tuple\" }, { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracleAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"volatilityAddress\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isCall\", \"type\": \"bool\" }, { \"internalType\": \"int256\", \"name\": \"multiplier\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"alpha\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"strikePrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"spotPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"volatility\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"intrinsicValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dpmmPrice\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dynamicMarginRatio\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetVolume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"tradersNetCost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingPerSecond\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"u\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"gamma\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueUpPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dValueDownPercent5\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"dollarDelta\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.SymbolState[]\", \"name\": \"symbols\", \"type\": \"tuple[]\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"pnl\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"fundingAccrued\", \"type\": \"int256\" } ], \"internalType\": \"struct EverlastingOptionViewer.PositionState[]\", \"name\": \"positions\", \"type\": \"tuple[]\" } ], \"internalType\": \"struct EverlastingOptionViewer.State\", \"name\": \"state\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"poolAddress\", \"type\": \"address\" } ], \"name\": \"getVolatilityOracles\", \"outputs\": [ { \"components\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"internalType\": \"string\", \"name\": \"symbol\", \"type\": \"string\" }, { \"internalType\": \"address\", \"name\": \"oracle\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"isOffChain\", \"type\": \"bool\" } ], \"internalType\": \"struct EverlastingOptionViewer.OracleInfo[]\", \"name\": \"\", \"type\": \"tuple[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" } ]\n\nexport const lTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" } ], \"name\": \"allowance\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [ { \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transfer\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\nexport const pTokenOptionAbi = [ { \"inputs\": [ { \"internalType\": \"string\", \"name\": \"name_\", \"type\": \"string\" }, { \"internalType\": \"string\", \"name\": \"symbol_\", \"type\": \"string\" } ], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"ApprovalForAll\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"amount\", \"type\": \"int256\" } ], \"name\": \"UpdateMargin\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [ { \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"indexed\": false, \"internalType\": \"int256\", \"name\": \"lastCumulativeFundingRate2\", \"type\": \"int256\" } ], \"name\": \"UpdatePosition\", \"type\": \"event\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"name\": \"addMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"addSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"approve\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"balanceOf\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"exists\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getActiveSymbolIds\", \"outputs\": [ { \"internalType\": \"uint256[]\", \"name\": \"\", \"type\": \"uint256[]\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"getApproved\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getMargin\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"\", \"type\": \"int256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getNumPositionHolders\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"getPosition\", \"outputs\": [ { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"\", \"type\": \"tuple\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"getTokenId\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"isActiveSymbolId\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" } ], \"name\": \"isApprovedForAll\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" } ], \"name\": \"mint\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"ownerOf\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"pool\", \"outputs\": [ { \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"removeSymbolId\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" } ], \"name\": \"safeTransferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"bool\", \"name\": \"approved\", \"type\": \"bool\" } ], \"name\": \"setApprovalForAll\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"newPool\", \"type\": \"address\" } ], \"name\": \"setPool\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"bytes4\", \"name\": \"interfaceId\", \"type\": \"bytes4\" } ], \"name\": \"supportsInterface\", \"outputs\": [ { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [ { \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" } ], \"name\": \"toggleCloseOnly\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalMinted\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [ { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" } ], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"tokenId\", \"type\": \"uint256\" } ], \"name\": \"transferFrom\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"int256\", \"name\": \"margin\", \"type\": \"int256\" } ], \"name\": \"updateMargin\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"symbolId\", \"type\": \"uint256\" }, { \"components\": [ { \"internalType\": \"int256\", \"name\": \"volume\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"cost\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"lastCumulativePremiumFundingRate\", \"type\": \"int256\" } ], \"internalType\": \"struct IPTokenOption.Position\", \"name\": \"position\", \"type\": \"tuple\" } ], \"name\": \"updatePosition\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" } ]\n\n/* eslint-enable */","import { ContractBase, deleteIndexedKey, fromWeiForObject } from '../../shared';\nimport { everlastingOptionViewerAbi } from './abis';\n\nexport class EverlastingOptionViewer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionViewerAbi);\n  }\n\n  // query\n  async _getTraderPortfolio(state, account) {\n    const res = await this._call('_getTraderPortfolio', [state, account]);\n    return res;\n  }\n  async _initState(poolAddress, oraclePrices) {\n    const res = await this._call('_initState', [poolAddress, oraclePrices]);\n    return res;\n  }\n  async _updateSymbolPrices(state) {\n    const res = await this._call('_updateSymbolPrices', [state]);\n    return res;\n  }\n  async getPoolStates(poolAddress, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getPoolStates', [poolAddress, oraclePrices, oracleVolatilities]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        //'cumulativeDeltaFundingRate',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      symbolState,\n    };\n  }\n  async getTraderStates(poolAddress, account, oraclePrices, oracleVolatilities) {\n    const res = await this._call('getTraderStates', [\n      poolAddress,\n      account,\n      oraclePrices,\n      oracleVolatilities,\n    ]);\n    const symbolState = res[2].reduce((acc, i) => {\n      const symbol = fromWeiForObject(deleteIndexedKey(i), [\n        'multiplier',\n        'strikePrice',\n        'spotPrice',\n        'dpmmPrice',\n        'dynamicMarginRatio',\n        'intrinsicValue',\n        'timeValue',\n        'delta',\n        'alpha',\n        'K',\n        'tradersNetVolume',\n        'tradersNetCost',\n        'cumulativeFundingRate',\n        //'deltaFundingPerSecond',\n        'fundingPerSecond',\n        'volatility',\n      ]);\n      return acc.concat([symbol])\n    }, [])\n    const positionState = res[3].reduce((acc, i) => {\n      const position = fromWeiForObject(deleteIndexedKey(i), [\n        'volume',\n        'cost',\n        'pnl',\n        //'lastCumulativeDeltaFundingRate',\n        'lastCumulativeFundingRate',\n        //'deltaFundingAccrued',\n        'fundingAccrued',\n      ])\n      return acc.concat([position])\n    }, [])\n    return {\n      poolState: fromWeiForObject(deleteIndexedKey(res[0]), [\n        'initialMarginRatio',\n        'maintenanceMarginRatio',\n        'fundingPeriod',\n        'fundingCoefficient',\n        'liquidity',\n        'totalDynamicEquity',\n        'totalInitialMargin',\n      ]),\n      traderState: fromWeiForObject(deleteIndexedKey(res[1]), [\n        'margin',\n        'totalPnl',\n        'totalFundingAccrued',\n        'dynamicMargin',\n        'initialMargin',\n        'maintenanceMargin',\n      ]),\n      symbolState: symbolState,\n      positionState: positionState,\n    };\n  }\n  async getVolatilityOracles(poolAddress) {\n    const res = await this._call('getVolatilityOracles', [poolAddress]);\n    return res;\n  }\n  async getPriceOracles(poolAddress) {\n    const res = await this._call('getPriceOracles', [poolAddress]);\n    return res;\n  }\n\n  // tx\n}\n","import { ContractBase, fromWei } from '../../shared'\nimport { lTokenOptionAbi } from './abis.js'\n\nexport class LTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, lTokenOptionAbi)\n  }\n\n  // query\n  // async allowance(owner, spender) {\n  //   const res = await this._call('allowance', [owner, spender])\n  //   return res\n  // }\n  async balanceOf(account) {\n    const res = await this._call('balanceOf', [account])\n    return fromWei(res)\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return fromWei(res)\n  }\n\n  // tx\n  // async approve(accountAddress, spender, amount) {\n  //   return await this._transact('approve', [spender, amount], accountAddress)\n  // }\n  // async transfer(accountAddress, to, amount) {\n  //   return await this._transact('transfer', [to, amount], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, amount) {\n  //   return await this._transact('transferFrom', [from, to, amount], accountAddress)\n  // }\n\n}","import { ContractBase, fromWei } from '../../shared'\nimport { pTokenOptionAbi } from './abis.js'\n\nexport class PTokenOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenOptionAbi)\n  }\n\n  // query\n  async balanceOf(owner) {\n    const res = await this._call('balanceOf', [owner])\n    return res\n  }\n  async exists(owner) {\n    const res = await this._call('exists', [owner])\n    return res\n  }\n  async getActiveSymbolIds() {\n    const res = await this._call('getActiveSymbolIds', [])\n    return res\n  }\n  async getApproved(tokenId) {\n    const res = await this._call('getApproved', [tokenId])\n    return res\n  }\n  async getMargin(owner) {\n    const res = await this._call('getMargin', [owner])\n    return fromWei(res)\n  }\n  async getNumPositionHolders(symbolId) {\n    const res = await this._call('getNumPositionHolders', [symbolId])\n    return res\n  }\n  async getPosition(owner, symbolId) {\n    const res = await this._call('getPosition', [owner, symbolId])\n    return {\n      volume: fromWei(res[0]),\n      cost: fromWei(res[1]),\n      lastCumulativePremiumFundingRate: fromWei(res[2]),\n    };\n }\n  async getTokenId(owner) {\n    const res = await this._call('getTokenId', [owner])\n    return res\n  }\n  async isActiveSymbolId(symbolId) {\n    const res = await this._call('isActiveSymbolId', [symbolId])\n    return res\n  }\n  async isApprovedForAll(owner, operator) {\n    const res = await this._call('isApprovedForAll', [owner, operator])\n    return res\n  }\n  async name() {\n    const res = await this._call('name', [])\n    return res\n  }\n  async ownerOf(tokenId) {\n    const res = await this._call('ownerOf', [tokenId])\n    return res\n  }\n  async pool() {\n    const res = await this._call('pool', [])\n    return res\n  }\n  async symbol() {\n    const res = await this._call('symbol', [])\n    return res\n  }\n  async totalMinted() {\n    const res = await this._call('totalMinted', [])\n    return res\n  }\n  async totalSupply() {\n    const res = await this._call('totalSupply', [])\n    return res\n  }\n\n  // tx\n  async addMargin(accountAddress, owner, delta) {\n    return await this._transact('addMargin', [owner, delta], accountAddress)\n  }\n  async updateMargin(accountAddress, owner, margin) {\n    return await this._transact('updateMargin', [owner, margin], accountAddress)\n  }\n  async updatePosition(accountAddress, owner, symbolId, position) {\n    return await this._transact('updatePosition', [owner, symbolId, position], accountAddress)\n  }\n\n  // async approve(accountAddress, operator, tokenId) {\n  //   return await this._transact('approve', [operator, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId], accountAddress)\n  // }\n  // async safeTransferFrom(accountAddress, from, to, tokenId, data) {\n  //   return await this._transact('safeTransferFrom', [from, to, tokenId, data], accountAddress)\n  // }\n  // async setApprovalForAll(accountAddress, operator, approved) {\n  //   return await this._transact('setApprovalForAll', [operator, approved], accountAddress)\n  // }\n  // async toggleCloseOnly(accountAddress, symbolId) {\n  //   return await this._transact('toggleCloseOnly', [symbolId], accountAddress)\n  // }\n  // async transferFrom(accountAddress, from, to, tokenId) {\n  //   return await this._transact('transferFrom', [from, to, tokenId], accountAddress)\n  // }\n}","import { factory } from '../../shared';\nimport { EverlastingOptionViewer } from '../contract/everlasting_option_viewer';\nimport { LTokenOption } from '../contract/l_token_option';\nimport { PTokenOption } from '../contract/p_token_option';\n\nexport const everlastingOptionViewerFactory = factory(EverlastingOptionViewer);\nexport const lTokenOptionFactory = factory(LTokenOption);\nexport const pTokenOptionFactory = factory(PTokenOption);","import { getOracleVolatilitiesForOption, getPriceInfo } from \"../shared/utils/oracle\"\nimport { deriToNatural } from \"../shared/utils\"\n\nexport const volatilitiesCache = (function() {\n  const cache = {}\n  return {\n    async get(symbols=['BTCUSD']){\n      const key = symbols.join('_')\n      if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n        const timestamp = Math.floor(Date.now()/1000)\n        const data = await getOracleVolatilitiesForOption(symbols)\n        cache[key] = {\n          data,\n          timestamp,\n        }\n        return cache[key].data\n      } else {\n        return cache[key].data\n      }\n    }\n  }\n})()\n\nexport const volatilityCache = (function() {\n  const cache = {}\n  return {\n    async get(symbol){\n      const key = symbol\n      if (!Object.keys(cache).includes(key) || (Math.floor(Date.now()/1000) - cache[key].timestamp > 30)) {\n        const timestamp = Math.floor(Date.now()/1000)\n        const res = await getPriceInfo(symbol, 'option')\n        const data = deriToNatural(res.volatility).toString()\n        cache[key] = {\n          data,\n          timestamp,\n        }\n        //console.log('new key')\n        return cache[key].data\n      } else {\n        return cache[key].data\n      }\n    }\n  }\n})()\n\nexport const volatilitiesCache2 = async (symbols) => {\n  return await Promise.all(\n    symbols.reduce((acc, s) => acc.concat(volatilityCache.get(s)), [])\n  )\n}\n","import {\n  ContractBase,\n  deleteIndexedKey,\n  fromWeiForObject,\n  fromWei,\n  naturalToDeri,\n  getPoolConfig,\n  getPoolViewerConfig,\n  isEqualSet,\n} from '../../shared';\nimport { getVolatilitySymbols } from '../../shared/config/token';\nimport {\n  getOracleVolatilityForOption,\n} from '../../shared/utils/oracle';\nimport {\n  everlastingOptionViewerFactory,\n  pTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\nimport { everlastingOptionAbi } from './abis.js';\n\nexport class EverlastingOption extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, everlastingOptionAbi);\n\n    this.config = getPoolConfig(\n      contractAddress,\n      undefined,\n      undefined,\n      'option'\n    );\n    // this.offchainSymbolIds = this.config.offchainSymbolIds;\n    // this.offchainSymbols = this.config.offchainSymbols;\n    this.volatilitySymbols = this.config.volatilitySymbols;\n    this.bTokenAddress = this.config.bToken;\n    this.lTokenAddress = this.config.lToken;\n    this.pTokenAddress = this.config.pToken;\n    this.viewerAddress = getPoolViewerConfig(this.chainId, 'option');\n  }\n  async _updateConfig() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.viewer) {\n      this.viewer = everlastingOptionViewerFactory(\n        this.chainId,\n        this.viewerAddress\n      );\n    }\n\n    const activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    if (\n      !this.activeSymbolIds ||\n      !isEqualSet(new Set(this.activeSymbolIds), new Set(activeSymbolIds))\n    ) {\n      // symbol is updated\n      const activeSymbols = await Promise.all(\n        activeSymbolIds.reduce((acc, i) => acc.concat([this.getSymbol(i)]), [])\n      );\n      const symbolVolatilities = await volatilitiesCache.get(\n        activeSymbols.map((s) => s.symbol)\n      );\n      //console.log(symbolVolatilities)\n      const state = await this.viewer.getPoolStates(\n        this.contractAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      // update state\n      this.activeSymbolIds = activeSymbolIds;\n      this.activeSymbols = symbolState.filter((s) =>\n        this.activeSymbolIds.includes(s.symbolId)\n      );\n      // for tx use\n      this.volatilitySymbols = getVolatilitySymbols(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n    }\n  }\n\n  // query\n  // async OptionPricer() {\n  //   const res = await this._call('OptionPricer', []);\n  //   return res;\n  // }\n  // async PmmPricer() {\n  //   const res = await this._call('PmmPricer', []);\n  //   return res;\n  // }\n  // async _T() {\n  //   const res = await this._call('_T', []);\n  //   return fromWei(res);\n  // }\n  async getAddresses() {\n    const res = await this._call('getAddresses', []);\n    return deleteIndexedKey(res);\n  }\n  async getLastTimestamp() {\n    const res = await this._call('getPoolStateValues', []);\n    return res[1];\n  }\n  async getLiquidity() {\n    const res = await this._call('getPoolStateValues', []);\n    return fromWei(res[0]);\n  }\n  async getParameters() {\n    const res = await this._call('getParameters', []);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'initialMarginRatio',\n      'liquidationCutRatio',\n      'maintenanceMarginRatio',\n      'maxLiquidationReward',\n      'minLiquidationReward',\n      'minPoolMarginRatio',\n      'protocolFeeCollectRatio',\n    ]);\n  }\n  // async getProtocolFeeAccrued() {\n  //   const res = await this._call('getPoolStateValues', []);\n  //   return fromWei(res[2])\n  // }\n\n  async getSymbol(symbolId) {\n    const res = await this._call('getSymbol', [symbolId]);\n    return fromWeiForObject(deleteIndexedKey(res), [\n      'strikePrice',\n      'multiplier',\n      'feeRatioITM',\n      'feeRatioOTM',\n      'alpha',\n      'tradersNetVolume',\n      'tradersNetCost',\n      'cumulativeFundingRate',\n    ]);\n    // return {\n    //   symbolId: res[0],\n    //   symbol: res[1],\n    //   oracleAddress: res[2],\n    //   volatilityAddress: res[3],\n    //   isCall: res[4],\n    //   strikePrice: fromWei(res[5]),\n    //   multiplier: fromWei(res[6]),\n    //   feeRatio: fromWei(res[7]),\n    //   alpha: fromWei(res[8]),\n    //   tradersNetVolume: fromWei(res[9]),\n    //   tradersNetCost: fromWei(res[10]),\n    //   cumulativeFundingRate: fromWei(res[11]),\n    // };\n  }\n  async updateSymbols() {\n    if (!this.pToken) {\n      this.pToken = pTokenOptionFactory(this.chainId, this.pTokenAddress);\n    }\n    if (!this.activeSymbolIds) {\n      this.activeSymbolIds = await this.pToken.getActiveSymbolIds();\n    }\n    this.activeSymbols = await Promise.all(\n      this.activeSymbolIds.reduce(\n        (acc, i) => acc.concat([this.getSymbol(i)]),\n        []\n      )\n    );\n    return this.activeSymbols\n  }\n\n  // tx\n  async _getVolSymbolPrices() {\n    await this._updateConfig();\n    let volatilities = [];\n    if (this.volatilitySymbols.length > 0) {\n      const volatilityInfos = await getOracleVolatilityForOption(\n        this.activeSymbols.map((s) => s.symbol)\n      );\n      volatilities = Object.values(volatilityInfos).reduce((acc, p, index) => {\n        acc.push([\n          this.activeSymbolIds[index],\n          p.timestamp,\n          p.volatility,\n          parseInt(p.v).toString(),\n          p.r,\n          p.s,\n        ]);\n        return acc;\n      }, []);\n    }\n    //console.log('prices', prices);\n    return volatilities;\n  }\n\n  async addLiquidity(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'addLiquidity',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async removeLiquidity(accountAddress, lShares) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeLiquidity',\n      [naturalToDeri(lShares), prices],\n      accountAddress\n    );\n  }\n  async addMargin(accountAddress, bAmount) {\n    return await this._transact(\n      'addMargin',\n      [naturalToDeri(bAmount)],\n      accountAddress\n    );\n  }\n  async removeMargin(accountAddress, bAmount) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'removeMargin',\n      [naturalToDeri(bAmount), prices],\n      accountAddress\n    );\n  }\n  async trade(accountAddress, symbolId, tradeVolume) {\n    const prices = await this._getVolSymbolPrices();\n    return await this._transact(\n      'trade',\n      [symbolId, naturalToDeri(tradeVolume), prices],\n      accountAddress\n    );\n  }\n}\n","import { ContractBase, fromWei } from '../../shared'\n\nexport const optionPricerAbi = [ { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValue\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [ { \"internalType\": \"int256\", \"name\": \"S\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"K\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"V\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"T\", \"type\": \"int256\" } ], \"name\": \"getEverlastingTimeValueAndDelta\", \"outputs\": [ { \"internalType\": \"int256\", \"name\": \"timeValue\", \"type\": \"int256\" }, { \"internalType\": \"int256\", \"name\": \"delta\", \"type\": \"int256\" } ], \"stateMutability\": \"pure\", \"type\": \"function\" } ]\n\nexport class OptionPricer extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, optionPricerAbi)\n  }\n\n  async getEverlastingTimeValueAndDelta(S, K, V, T) {\n    const res = await this._call('getEverlastingTimeValueAndDelta', [S, K, V, T])\n    return {\n      timeValue: fromWei(res.timeValue),\n      delta: fromWei(res.delta),\n    };\n  }\n}","import { factory } from '../../shared';\nimport { EverlastingOption } from '../contract/everlasting_option';\nimport { OptionPricer } from '../contract/option_pricer';\n\nexport const everlastingOptionFactory = factory(EverlastingOption);\nexport const optionPricerFactory = factory(OptionPricer);","import { getPoolConfig } from '../../shared/config';\nimport { catchApiError, bg } from '../../shared/utils';\nimport {\n  calculateMaxRemovableShares,\n  calculateShareValue,\n} from '../../v1/calculation';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport {\n  lTokenOptionFactory,\n} from '../factory/tokens';\nimport { volatilitiesCache } from '../utils';\n\nconst _getLiquidityInfo = async (chainId, poolAddress, accountAddress) => {\n  const { lToken: lTokenAddress } = getPoolConfig(\n    poolAddress,\n    '0',\n    '0',\n    'option'\n  );\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig()\n  const lToken = lTokenOptionFactory(chainId, lTokenAddress);\n  const [\n    lTokenBalance,\n    lTokenTotalSupply,\n  ] = await Promise.all([\n    lToken.balanceOf(accountAddress),\n    lToken.totalSupply(),\n  ]);\n\n  const symbols = optionPool.activeSymbols\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(poolAddress, [], symbolVolatilities)\n  const { poolState } = state;\n  const { initialMarginRatio, liquidity, totalDynamicEquity } = poolState;\n  const cost = symbols.reduce((acc, s) => acc.plus(s.tradersNetCost), bg(0));\n  const value = symbols.reduce(\n    (acc, s) =>\n      acc.plus(bg(s.tradersNetVolume).times(s.strikePrice).times(s.multiplier)),\n    bg(0)\n  );\n  return {\n    totalSupply: lTokenTotalSupply.toString(),\n    poolLiquidity: liquidity.toString(),\n    shares: lTokenBalance.toString(),\n    shareValue: calculateShareValue(\n      lTokenTotalSupply,\n      totalDynamicEquity\n    ).toString(),\n    maxRemovableShares: calculateMaxRemovableShares(\n      lTokenBalance,\n      lTokenTotalSupply,\n      liquidity,\n      value,\n      cost,\n      bg(initialMarginRatio).times(10)\n    ).toString(),\n  };\n};\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  return catchApiError(\n    _getLiquidityInfo,\n    [chainId, poolAddress, accountAddress],\n    'getLiquidityInfo',\n    {\n      totalSupply: '',\n      poolLiquidity: '',\n      shares: '',\n      shareValue: '',\n      maxRemovableShares: '',\n    }\n  );\n};\n","import { catchTxApiError } from '../../shared/utils';\nimport { everlastingOptionFactory } from '../factory/pool.js';\n\nexport const addLiquidity = async(chainId, poolAddress, accountAddress, amount) => {\n  const args = [chainId, poolAddress, accountAddress, amount]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.addLiquidity(accountAddress, amount)\n  }, args)\n}\n\nexport const removeLiquidity = async(chainId, poolAddress, accountAddress, amount, isMaximum=false) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum]\n  return catchTxApiError(async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    return await optionPool.removeLiquidity(accountAddress, amount, isMaximum)\n  }, args)\n}\n","/*\n    1. Calculate the cost for user input volume\n    2. Calculate the final price if user input volume is traded\n*/\n\nexport function getMidPrice(tradersNetVolume, theoreticalPrice, K) {\n    return theoreticalPrice * (1 + K * tradersNetVolume)\n}\n\nexport function queryTradePMM(tradersNetVolume, theoreticalPrice, K, volume) {\n    return theoreticalPrice * (volume + ((tradersNetVolume + volume) ** 2 - tradersNetVolume ** 2) * K / 2)\n}\n","import {\n  bg,\n  max,\n  bTokenFactory,\n  catchApiError,\n  getPoolConfig,\n} from '../../shared';\nimport { fundingRateCache } from '../../shared/api/api_globals';\nimport { normalizeOptionSymbol } from '../../shared/config/token';\nimport { wrappedOracleFactory } from '../../shared/factory/oracle';\nimport { queryTradePMM } from '../calculation/PMM2';\nimport {\n  dynamicInitialMarginRatio,\n  dynamicInitialPoolMarginRatio,\n  getAverageEntryPrice,\n  //getDeltaFundingPerSecond,\n  getLiquidationPrice,\n  getLiquidationPrices,\n  getMarginHeldBySymbol,\n} from '../calculation/trade';\nimport { everlastingOptionFactory } from '../factory/pool';\nimport { volatilitiesCache, volatilitiesCache2, volatilityCache } from '../utils';\nimport { getIndexInfo } from '../../shared/config/token';\n\n//\nconst SECONDS_IN_A_DAY = 86400;\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const { bTokenSymbol } = getPoolConfig(poolAddress, '0', '0', 'option');\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const [symbolInfo2, poolInfo2] = await Promise.all([\n        optionPool.getSymbol(symbolId),\n        optionPool.getParameters(),\n      ]);\n\n      const symbols = optionPool.activeSymbols\n      const symbolVolatilities = await volatilitiesCache.get(\n        symbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbolInfo = symbolState[symbolIndex];\n      const { dynamicMarginRatio, isCall } =\n        symbolInfo;\n      const { symbol, multiplier, feeRatioOTM, feeRatioITM } = symbolInfo2;\n      const {\n        initialMarginRatio,\n        maintenanceMarginRatio,\n        minLiquidationReward,\n        maxLiquidationReward,\n        liquidationCutRatio,\n        protocolFeeCollectRatio,\n      } = poolInfo2;\n\n      return {\n        symbol,\n        bTokenSymbol,\n        multiplier: multiplier.toString(),\n        feeRatioOTM: feeRatioOTM.toString(),\n        feeRatioITM: feeRatioITM.toString(),\n        //minPoolMarginRatio: minPoolMarginRatio.toString(),\n        initialMarginRatioOrigin: initialMarginRatio.toString(),\n        initialMarginRatio: dynamicMarginRatio.toString(),\n        maintenanceMarginRatioOrigin: maintenanceMarginRatio.toString(),\n        maintenanceMarginRatio: bg(dynamicMarginRatio)\n          .times(maintenanceMarginRatio)\n          .div(initialMarginRatio)\n          .toString(),\n        minLiquidationReward: minLiquidationReward.toString(),\n        maxLiquidationReward: maxLiquidationReward.toString(),\n        liquidationCutRatio: liquidationCutRatio.toString(),\n        protocolFeeCollectRatio: protocolFeeCollectRatio.toString(),\n        isCall: isCall,\n        indexConstituents: getIndexInfo(symbol),\n      };\n    },\n    args,\n    'getSpecification',\n    {\n      symbol: '',\n      bTokenSymbol: '',\n      multiplier: '',\n      feeRatio: '',\n      //minPoolMarginRatio: '',\n      initialMarginRatio: '',\n      maintenanceMarginRatio: '',\n      minLiquidationReward: '',\n      maxLiquidationReward: '',\n      liquidationCutRatio: '',\n      protocolFeeCollectRatio: '',\n      indexConstituents: { url: '', tokens: [] },\n    }\n  );\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { symbol: symbolName} = getPoolConfig(\n        poolAddress,\n        undefined,\n        symbolId,\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      let symbolVolatilities = [],\n        volPrice;\n      if (symbols && symbols.length > 0) {\n        [symbolVolatilities, volPrice] = await Promise.all([\n          volatilitiesCache.get(\n            symbols.map((s) => s.symbol)\n          ),\n          volatilityCache.get(`VOL-${normalizeOptionSymbol(symbolName)}`),\n        ]);\n      }\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, symbolState, traderState, positionState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, totalPnl, initialMargin } = traderState;\n      const symbolIndex = symbolState.findIndex((s) => s.symbolId === symbolId);\n      const symbol = symbolState[symbolIndex];\n      const position = positionState[symbolIndex];\n      const price = await wrappedOracleFactory(\n        chainId,\n        symbol.oracleAddress\n      ).getPrice();\n      return {\n        symbolId,\n        symbol: symbolName,\n        price,\n        strikePrice: symbol.strikePrice.toString(),\n        timePrice: symbol.timeValue.toString(),\n        markPrice: symbol.dpmmPrice.toString(),\n        volume: bg(position.volume).times(symbol.multiplier).toString(),\n        averageEntryPrice: getAverageEntryPrice(position, symbol),\n        margin: margin.toString(),\n        marginHeld: initialMargin.toString(),\n        marginHeldBySymbol: getMarginHeldBySymbol(\n          position.volume,\n          price,\n          symbol,\n          initialMarginRatio\n        ).toString(),\n        unrealizedPnl: totalPnl,\n        unrealizedPnlList: symbolState\n          .filter((s, index) => positionState[index].pnl !== '0')\n          .map((s) => [s.symbol, positionState[symbolState.findIndex((oS) => oS.symbolId === s.symbolId)].pnl]),\n        premiumFundingAccrued: positionState[symbolIndex].fundingAccrued,\n        isCall: symbol.isCall,\n        volatility: bg(volPrice).times(100).toString(),\n        liquidationPrice: getLiquidationPrice(state, symbolId),\n      };\n    },\n    args,\n    'getPositionInfo',\n    {\n      price: '',\n      strikePrice: '',\n      timePrice: '',\n      volume: '',\n      averageEntryPrice: '',\n      margin: '',\n      marginHeld: '',\n      marginHeldBySymbol: '',\n      unrealizedPnl: '',\n      unrealizedPnlList: [],\n      premiumFundingAccrued: '',\n      liquidationPrice: '',\n      volatility: '',\n    }\n  );\n};\n\nexport const getPositionInfos = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress)\n      //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n      const symbols = optionPool.activeSymbols\n      const [symbolVolatilities, volPrices] = await Promise.all([\n        volatilitiesCache.get(\n          symbols.map((s) => s.symbol)\n        ),\n        volatilitiesCache2(symbols.map((s) => `VOL-${normalizeOptionSymbol(s.symbol)}`)),\n      ]);\n      const state = await optionPool.viewer.getTraderStates(\n        poolAddress,\n        accountAddress,\n        [],\n        symbolVolatilities\n      );\n      const { poolState, traderState, positionState, symbolState } = state;\n      const { initialMarginRatio } = poolState;\n      const { margin, initialMargin } = traderState;\n      const prices = await Promise.all(\n        symbols.reduce(\n          (acc, s) =>\n            acc.concat([\n              wrappedOracleFactory(chainId, s.oracleAddress).getPrice(),\n            ]),\n          []\n        )\n      );\n\n      const liquidationPrices = getLiquidationPrices(state);\n      return symbols\n        .filter((s) => positionState[s.symbolId].volume !== '0')\n        .map((s) => {\n          const vIndex = symbolState.findIndex(\n            (oS) => oS.symbolId === s.symbolId\n          );\n          return {\n            symbolId: s.symbolId,\n            symbol: s.symbol,\n            price: prices[vIndex],\n            // strikePrice: s.strikePrice.toString(),\n            // timePrice: s.timeValue.toString(),\n            volume: bg(positionState[vIndex].volume)\n              .times(symbolState[vIndex].multiplier)\n              .toString(),\n            averageEntryPrice: getAverageEntryPrice(positionState[vIndex], s),\n            margin: margin.toString(),\n            marginHeld: initialMargin.toString(),\n            marginHeldBySymbol: getMarginHeldBySymbol(\n              positionState[vIndex].volume,\n              prices[vIndex],\n              s,\n              initialMarginRatio\n            ).toString(),\n            unrealizedPnl: positionState[vIndex].pnl,\n            premiumFundingAccrued: positionState[vIndex].fundingAccrued,\n            isCall: s.isCall,\n            volatility: bg(volPrices[vIndex]).times(100).toString(),\n            liquidationPrice: liquidationPrices,\n          };\n        });\n    },\n    args,\n    'getPositionInfos',\n    []\n  );\n};\n\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress\n) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const balance = await bTokenFactory(chainId, bTokenAddress).balanceOf(\n        accountAddress\n      );\n      return balance.toString();\n    },\n    args,\n    'getWalletBalance',\n    ''\n  );\n};\n\nexport const isUnlocked = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchApiError(\n    async (chainId, poolAddress, accountAddress) => {\n      const { bToken: bTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const bToken = bTokenFactory(chainId, bTokenAddress);\n      return await bToken.isUnlocked(accountAddress, poolAddress);\n    },\n    args,\n    'isUnlocked',\n    ''\n  );\n};\n\nconst _getFundingRate = async (chainId, poolAddress, symbolId) => {\n  //const { symbol } = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  await optionPool._updateConfig();\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  //const poolViewer = everlastingOptionViewerFactory(chainId, optionPool.viewerAddress)\n  const symbols = optionPool.activeSymbols;\n  const symbolVolatilities = await volatilitiesCache.get(symbols.map((s) => s.symbol))\n  const state = await optionPool.viewer.getPoolStates(\n    poolAddress,\n    [],\n    symbolVolatilities\n  );\n  const { poolState, symbolState } = state;\n  const { initialMarginRatio, totalDynamicEquity, liquidity } = poolState;\n  const curSymbolIndex = optionPool.activeSymbolIds.indexOf(symbolId);\n  if (curSymbolIndex < 0) {\n    throw new Error(\n      `getFundingRate(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n    );\n  }\n  const symbolInfo = symbolState[curSymbolIndex];\n\n  const prices = await Promise.all(\n    symbolState.reduce(\n      (acc, s) =>\n        acc.concat([wrappedOracleFactory(chainId, s.oracleAddress).getPrice()]),\n      []\n    )\n  );\n\n  const liquidityUsedInAmount = symbolState.reduce((acc, s, index) => {\n    return acc.plus(\n      bg(s.tradersNetVolume)\n        .times(prices[index])\n        .times(s.multiplier)\n        .abs()\n        .times(\n          dynamicInitialPoolMarginRatio(\n            prices[index],\n            s.strikePrice,\n            s.isCall,\n            initialMarginRatio\n          )\n        )\n    );\n  }, bg(0));\n\n  const res = {\n    initialMarginRatio,\n    symbolIds: optionPool.activeSymbolIds,\n    symbols: symbolState,\n    liquidity,\n    totalDynamicEquity,\n    prices,\n    liquidityUsed: bg(liquidity).eq(0) ? bg(0) : liquidityUsedInAmount.div(liquidity),\n    premiumFunding: bg(symbolInfo.fundingPerSecond)\n      .div(symbolInfo.multiplier)\n      .times(SECONDS_IN_A_DAY)\n      .toString(),\n    premiumFundingPerSecond: bg(symbolInfo.fundingPerSecond).div(\n      symbolInfo.multiplier\n    ),\n  };\n  return res;\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, volume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, volume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const symbolInfo = await optionPool.getSymbol(symbolId);\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n      }\n      const { symbolIds, prices, symbols } = res;\n      const curSymbolIndex = symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      const symbol = symbols[curSymbolIndex];\n      //console.log(ivolume, prices[curSymbolIndex], symbol, intrinsicPrice.toString())\n      let fee\n      const intrinsicValue = symbol.isCall\n        ? max(bg(symbol.spotPrice).minus(symbol.strikePrice), bg(0))\n        : max(bg(symbol.strikePrice).minus(symbol.spotPrice), bg(0));\n      if (bg(intrinsicValue).gt(0)) {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.spotPrice)\n          .times(symbolInfo.feeRatioITM)\n          .toString();\n      } else {\n        fee = bg(volume)\n          .abs()\n          .times(symbol.multiplier)\n          .times(symbol.timeValue)\n          .times(symbolInfo.feeRatioOTM)\n          .toString();\n      }\n      return fee\n    },\n    args,\n    'getFundingFee',\n    ''\n  );\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  //const pToken = pTokenOptionFactory(chainId, optionPool.pTokenAddress);\n  const [parameterInfo, symbol] = await Promise.all([\n    optionPool.getParameters(),\n    optionPool.getSymbol(symbolId),\n  ]);\n  const price = await wrappedOracleFactory(\n    chainId,\n    symbol.oracleAddress\n  ).getPrice();\n  const { initialMarginRatio } = parameterInfo;\n  const marginRatio = dynamicInitialMarginRatio(\n    price,\n    symbol.strikePrice,\n    symbol.isCall,\n    initialMarginRatio\n  );\n  //console.log(marginRatio, symbol.multiplier, price, volume)\n  return bg(volume)\n    .abs()\n    .times(price)\n    .times(symbol.multiplier)\n    .times(marginRatio);\n};\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  return fundingRateCache.get(chainId, poolAddress, symbolId);\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      const res = await _getFundingRate(chainId, poolAddress, symbolId);\n      fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      const curSymbolIndex = res.symbolIds.indexOf(symbolId);\n      if (curSymbolIndex < 0) {\n        throw new Error(\n          `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n        );\n      }\n      return {\n        premiumFunding0: bg(res.premiumFunding).toString(),\n        premiumFundingPerSecond: res.premiumFundingPerSecond.toString(),\n        liquidity: res.liquidity.toString(),\n        volume: '-',\n        tradersNetVolume: res.symbols[curSymbolIndex].tradersNetVolume,\n      };\n    },\n    args,\n    'getFundingRate',\n    {\n      premiumFunding0: '',\n      premiumFundingPerSecond: '',\n      liquidity: '',\n      volume: '-',\n      tradersNetVolume: '',\n    }\n  );\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async () => {\n      // let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      // if (!res) {\n      //   res = await _getFundingRate(chainId, poolAddress, symbolId);\n      //   fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      // }\n      // const { symbolIds, symbols, prices, totalDynamicEquity } = res;\n      // const curSymbolIndex = symbolIds.indexOf(symbolId);\n      // if (curSymbolIndex < 0) {\n      //   throw new Error(\n      //     `getEstimatedFee(): invalid symbolId(${symbolId}) for pool(${poolAddress})`\n      //   );\n      // }\n      // let symbol = symbols[curSymbolIndex];\n      // //console.log('symbol.tradersNetVolume0', symbol.tradersNetVolume)\n      // //symbol.tradersNetVolume = bg(symbol.tradersNetVolume).plus(newNetVolume).toString()\n      // //console.log('symbol.tradersNetVolume1', symbol.tradersNetVolume)\n      // const deltaFunding1 = getdeltaFundingPerSecond(\n      //   symbol,\n      //   symbol.delta,\n      //   prices[curSymbolIndex],\n      //   totalDynamicEquity,\n      //   newNetVolume\n      // );\n\n      return {\n        // deltaFunding1: bg(deltaFunding1)\n        //   .div(symbol.multiplier)\n        //   .times(SECONDS_IN_A_DAY)\n        //   .toString(),\n      };\n    },\n    args,\n    'getEstimatedFundingRate',\n    {\n    }\n  );\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const args = [chainId, poolAddress, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      return {\n        liquidityUsed0: res.liquidityUsed.times(100).toString(),\n      };\n    },\n    args,\n    'getLiquidityUsed',\n    {\n      liquidityUsed0: '',\n    }\n  );\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      let res = fundingRateCache.get(chainId, poolAddress, symbolId);\n      if (!res) {\n        res = await _getFundingRate(chainId, poolAddress, symbolId);\n        fundingRateCache.set(chainId, poolAddress, symbolId, res);\n      }\n      const { symbolIds, symbols, prices, liquidity, initialMarginRatio } = res;\n\n      const liquidityUsedInAmount = symbols.reduce((acc, s, index) => {\n        if (symbolIds[index] == symbolId) {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .plus(newNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        } else {\n          return acc.plus(\n            bg(s.tradersNetVolume)\n              .times(prices[index])\n              .times(s.multiplier)\n              .abs()\n              .times(\n                dynamicInitialPoolMarginRatio(\n                  prices[index],\n                  s.strikePrice,\n                  s.isCall,\n                  initialMarginRatio\n                )\n              )\n          );\n        }\n      }, bg(0));\n      return {\n        liquidityUsed1: bg(liquidity).eq(0) ? '0' : liquidityUsedInAmount\n          .div(liquidity)\n          .times(100)\n          .toString(),\n      };\n    },\n    args,\n    'getEstimatedLiquidityUsed',\n    {\n      liquidityUsed1: '',\n    }\n  );\n};\n\nexport const getEstimatedTimePrice = (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, newNetVolume, symbolId];\n  return catchApiError(\n    async (chainId, poolAddress, newNetVolume, symbolId) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      await optionPool._updateConfig();\n      const symbolVolatilities = await volatilitiesCache.get(\n        optionPool.activeSymbols.map((s) => s.symbol)\n      );\n      const state = await optionPool.viewer.getPoolStates(\n        poolAddress,\n        [],\n        symbolVolatilities\n      );\n      const { symbolState } = state;\n\n      //const { liquidity } = poolState;\n      const index = symbolState.findIndex((s) => s.symbolId === symbolId);\n      if (index > -1) {\n        const {\n          tradersNetVolume,\n          multiplier,\n          intrinsicValue,\n          timeValue,\n          K,\n        } = symbolState[index];\n        //console.log(tradersNetVolume, multiplier, liquidity, quoteBalanceOffset, timePrice, K)\n        const args = [\n          bg(tradersNetVolume).times(multiplier).toNumber(),\n          bg(intrinsicValue).plus(timeValue).toNumber(),\n          bg(K).toNumber(),\n          bg(newNetVolume).times(multiplier).toNumber(),\n        ]\n\n        const res = queryTradePMM(...args);\n        //console.log('res', res)\n        return bg(res).div(newNetVolume).div(multiplier).toString();\n      } else {\n        console.log(\n          `invalid symbolId(${symbolId}) for the pool(${poolAddress})`\n        );\n        return '';\n      }\n    },\n    args,\n    'getEstimatedMarkPrice',\n    ''\n  );\n};\n","import { getPoolConfig } from '../../shared/config';\nimport { bTokenFactory } from '../../shared/factory';\nimport { catchTxApiError, bg } from '../../shared/utils';\n//import { isOrderValid } from '../../v2/calculation';\nimport { everlastingOptionFactory } from '../factory/pool.js';\nimport { pTokenOptionFactory} from '../factory/tokens';\n\nexport const unlock = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const { bToken: bTokenAddress } = getPoolConfig(\n      poolAddress,\n      '0',\n      '0',\n      'option'\n    );\n    const bToken = bTokenFactory(chainId, bTokenAddress);\n    return await bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.addMargin(accountAddress, amount);\n    },\n    args\n  );\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  isMaximum = false\n) => {\n  const args = [chainId, poolAddress, accountAddress, amount, isMaximum];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, amount, isMaximum) => {\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      return await optionPool.removeMargin(\n        accountAddress,\n        amount,\n        isMaximum\n      );\n    },\n    args\n  );\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, newVolume, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, newVolume, symbolId) => {\n      // const { pToken: pTokenAddress } = getPoolConfig(\n      //   poolAddress,\n      //   '0',\n      //   '0',\n      //   'option'\n      // );\n      // const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      // const [parameterInfo, liquidity, margin, symbolIds] = await Promise.all([\n      //   optionPool.getParameters(),\n      //   optionPool.getLiquidity(),\n      //   pToken.getMargin(accountAddress),\n      //   pToken.getActiveSymbolIds(),\n      // ]);\n      // no minInitialMarginRatio in option\n      // const { initialMarginRatio, minPoolMarginRatio } = parameterInfo;\n      // let promises = [];\n\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(optionPool.getSymbol(symbolIds[i]));\n      // }\n      // const symbols = await Promise.all(promises);\n\n      // promises = [];\n      // for (let i = 0; i < symbolIds.length; i++) {\n      //   promises.push(pToken.getPosition(accountAddress, symbolIds[i]));\n      // }\n      // const positions = await Promise.all(promises);\n\n      // let marginHeld = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.price)\n      //         .times(s.multiplier)\n      //         .times(bg(positions[index]).volume.plus(newVolume))\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.price).times(s.multiplier).times(positions[index].volume).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // marginHeld = marginHeld.times(initialMarginRatio);\n\n      // let liquidityUsed = symbols.reduce((acc, s, index) => {\n      //   if (index === parseInt(symbolId)) {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume)\n      //         .plus(newVolume)\n      //         .times(s.price)\n      //         .times(s.multiplier)\n      //         .abs()\n      //     );\n      //   } else {\n      //     return acc.plus(\n      //       bg(s.tradersNetVolume).times(s.price).times(s.multiplier).abs()\n      //     );\n      //   }\n      // }, bg(0));\n      // liquidityUsed = liquidityUsed.times(minPoolMarginRatio);\n\n      // const orderValidation = isOrderValid(\n      //   margin,\n      //   marginHeld,\n      //   liquidity,\n      //   liquidityUsed\n      // );\n      // if (orderValidation.success) {\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      // } else {\n      //   throw new Error(orderValidation.error);\n      // }\n    },\n    args\n  );\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const args = [chainId, poolAddress, accountAddress, symbolId];\n  return catchTxApiError(\n    async (chainId, poolAddress, accountAddress, symbolId) => {\n      const { pToken: pTokenAddress } = getPoolConfig(\n        poolAddress,\n        '0',\n        '0',\n        'option'\n      );\n      const optionPool = everlastingOptionFactory(chainId, poolAddress);\n      const pToken = pTokenOptionFactory(chainId, pTokenAddress);\n      const { volume } = await pToken.getPosition(accountAddress, symbolId);\n      if (!bg(volume).eq(0)) {\n        const newVolume = bg(volume).negated().toString();\n        return await optionPool.trade(accountAddress, symbolId, newVolume);\n      } else {\n        throw new Error('no position to close');\n      }\n    },\n    args\n  );\n};\n","import { deriToNatural, naturalToDeri, bg, getBlockInfo, getPastEvents, getHttpBase, fetchJson, max } from '../../shared/utils';\nimport {\n  getPoolConfig,\n} from '../../shared/config';\nimport { everlastingOptionFactory, optionPricerFactory } from '../factory/pool';\n\nconst processTradeEvent = async (\n  chainId,\n  info,\n  blockNumber,\n  txHash,\n  multiplier,\n  bTokenSymbol,\n  symbolIdList,\n  symbols,\n  pricer,\n) => {\n  const tradeVolume = deriToNatural(info.tradeVolume);\n  const timeStamp = await getBlockInfo(chainId, blockNumber);\n\n  const direction = tradeVolume.gt(0) ? 'LONG' : 'SHORT';\n  const tradeCost = deriToNatural(info.tradeCost);\n  const time = `${+timeStamp.timestamp}000`;\n  const volume = tradeVolume.abs();\n  const symbolId = info.symbolId\n  const volatility = info.volatility\n  const index = symbolIdList.indexOf(symbolId)\n  const price = bg(tradeCost).div(bg(tradeVolume).times(symbols[index].multiplier))\n  const indexPrice = deriToNatural(info.spotPrice)\n\n  const intrinsicValue = symbols[index].isCall\n    ? max(indexPrice.minus(symbols[index].strikePrice), bg(0))\n    : max(bg(symbols[index].strikePrice).minus(indexPrice), bg(0));\n  let timeValue = '0';\n  if (intrinsicValue.lte(0)) {\n    const res  = await pricer.getEverlastingTimeValueAndDelta(\n      naturalToDeri(indexPrice),\n      naturalToDeri(symbols[index].strikePrice),\n      volatility,\n      naturalToDeri(bg(1).div(365).toString())\n    );\n    timeValue = res.timeValue\n  }\n  if (index > -1) {\n    return {\n      direction,\n      baseToken: bTokenSymbol,\n      symbolId,\n      symbol: symbols[index].symbol,\n      price: price.toString(),\n      indexPrice: indexPrice.toString(),\n      volume: volume.times(symbols[index].multiplier).toString(),\n      transactionHash: txHash.toString(),\n      notional: tradeVolume\n        .abs()\n        .times(indexPrice)\n        .times(multiplier[index])\n        .toString(),\n      contractValue: tradeVolume\n        .abs()\n        .times(price)\n        .times(multiplier[index])\n        .toString(),\n      transactionFee: intrinsicValue.gt(0)\n        ? volume\n            .times(symbols[index].multiplier)\n            .times(indexPrice)\n            .times(symbols[index].feeRatioITM)\n            .toString()\n        : volume\n            .times(symbols[index].multiplier)\n            .times(timeValue)\n            .times(symbols[index].feeRatioOTM)\n            .toString(),\n      time,\n    };\n  } else {\n    return null\n  }\n};\nconst getTradeHistoryOnline = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId,\n  fromBlock\n) => {\n\n  // const symbolIdList = getPoolSymbolIdList(poolAddress)\n  //console.log('symbolIdList', symbolIdList);\n  const { bTokenSymbol, pricer:pricerAddress } = getPoolConfig(poolAddress, undefined, undefined, 'option')\n  const optionPool = everlastingOptionFactory(chainId, poolAddress);\n  const pricer = optionPricerFactory(chainId, pricerAddress)\n  const [toBlock, ] = await Promise.all([\n    getBlockInfo(chainId, 'latest'),\n    optionPool._updateConfig(),\n  ]);\n  fromBlock = parseInt(fromBlock);\n\n\n  let promises= []\n  for (let i=0; i<optionPool.activeSymbolIds.length; i++) {\n    promises.push(optionPool.getSymbol(optionPool.activeSymbolIds[i].toString()))\n  }\n  let symbols = await Promise.all(promises)\n  //let symbols = optionPool.activeSymbols\n  const multiplier = symbols.map((i) => i.multiplier.toString());\n\n  const filters =  { account: accountAddress }\n  let events = await getPastEvents(chainId, optionPool.contract,\n    'Trade',\n    filters,\n    fromBlock,\n    toBlock.number\n  );\n\n  let result = [];\n  //events  = events.filter((i) => i.returnValues.symbolId === symbolId)\n  //console.log(\"events length:\", events.length);\n  for (let i = 0; i < events.length; i++) {\n    const item = events[i];\n    const res = await processTradeEvent(\n      chainId,\n      item.returnValues,\n      item.blockNumber,\n      item.transactionHash,\n      multiplier,\n      bTokenSymbol,\n      optionPool.activeSymbolIds,\n      symbols,\n      pricer,\n    );\n    result.unshift(res);\n  }\n  result = result.filter((tr) => tr !== null)\n  return result;\n};\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  try {\n    let tradeFromBlock, tradeHistory = [];\n    const optionPool = everlastingOptionFactory(chainId, poolAddress)\n    const [res] = await Promise.all([\n      fetchJson(\n        `${getHttpBase()}/trade_history/${chainId}/${poolAddress}/${accountAddress}/${symbolId}`\n      ),\n      optionPool._updateConfig()\n    ]);\n    if (res && res.success) {\n      //console.log('his res', res.data)\n      tradeFromBlock = parseInt(res.data.tradeHistoryBlock);\n      if (res.data.tradeHistory && Array.isArray(res.data.tradeHistory)) {\n        tradeHistory = res.data.tradeHistory;\n      }\n    }\n    const symbols = optionPool.activeSymbols\n    if (tradeHistory.length > 0) {\n      tradeHistory = tradeHistory\n        .filter((i) => !(i.direction === 'LIQUIDATION' && i.symbolId === '0'))\n        .map((i) => {\n          const index = symbols.findIndex((s) => s.symbolId === i.symbolId)\n          if (index > -1 && i.direction !== 'LIQUIDATION') {\n            return {\n              direction: i.direction.trim(),\n              baseToken: i.baseToken.trim(),\n              symbolId: i.symbolId,\n              symbol: i.symbol,\n              price: deriToNatural(i.price).div(symbols[index].multiplier).toString(),\n              indexPrice: deriToNatural(i.indexPrice).toString(),\n              notional: deriToNatural(i.notional).toString(),\n              contractValue: deriToNatural(i.contractValue).toString(),\n              volume: deriToNatural(i.volume).times(symbols[index].multiplier).toString(),\n              transactionFee: deriToNatural(i.transactionFee).toString(),\n              transactionHash: i.transactionHash,\n              time: i.time.toString(),\n            };\n          }  else if (i.direction === 'LIQUIDATION') {\n            if (\n              i.volume !== '' &&\n              i.volume.indexOf(',') > -1 &&\n              !i.price.startsWith('NaN')\n            ) {\n              const ids = i.volume.split(',').reduce((acc, v, index) => {\n                if (v !== '0') {\n                  return acc.concat([index]);\n                } else {\n                  return acc;\n                }\n              }, []);\n              const prices = i.price.split(',').map((s) => deriToNatural(s));\n              const volumes = i.volume.split(',').map((v) => deriToNatural(v));\n              const res = ids.map((id) => {\n                return {\n                  direction: i.direction.trim(),\n                  baseToken: i.baseToken.trim(),\n                  symbolId: id.toString(),\n                  symbol: symbols[id].symbol,\n                  volume: volumes[id]\n                    .times(symbols[id].multiplier)\n                    .abs()\n                    .toString(),\n                  price: prices[id].toString(),\n                  indexPrice: '',\n                  notional: '',\n                  contractValue: volumes[id]\n                    .abs()\n                    .times(prices[id])\n                    .times(symbols[id].multiplier)\n                    .toString(),\n                  transactionFee: '0',\n                  transactionHash: i.transactionHash,\n                  time: i.time.toString(),\n                };\n              });\n              return res;\n            } else {\n              return {\n                direction: i.direction.trim(),\n                baseToken: i.baseToken.trim(),\n                symbolId: '',\n                symbol: '',\n                volume: '',\n                price: '',\n                indexPrice: '',\n                notional: '',\n                contractValue: '',\n                transactionFee: '0',\n                transactionHash: i.transactionHash,\n                time: i.time.toString(),\n              };\n            }\n          } else {\n            // i.symbolId is not in activeSymbols\n            return null\n          }\n        }).flat();\n    }\n    tradeHistory = tradeHistory.filter((tr) => tr !== null)\n    // fetch tradeHistory on the block with fromBlock from rest api\n    if (tradeFromBlock !== 0) {\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline.concat(tradeHistory);\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    } else {\n      const {initialBlock} = getPoolConfig(poolAddress, undefined, symbolId, 'option')\n      tradeFromBlock = parseInt(initialBlock);\n      const [tradeHistoryOnline] = await Promise.all([\n        getTradeHistoryOnline(\n          chainId,\n          poolAddress,\n          accountAddress,\n          symbolId,\n          tradeFromBlock + 1\n        ),\n      ]);\n      const result = tradeHistoryOnline;\n      return result.sort((a, b) => parseInt(b.time) - parseInt(a.time));\n    }\n  } catch(err) {\n    console.log(`getTradeHistory(${chainId}, ${poolAddress}, ${accountAddress}, ${symbolId}): ${err}`)\n  }\n  return []\n};\n","import { catchTxApiError, naturalToDeri, toChecksumAddress } from \"../../shared\"\nimport { normalizeChainId } from \"../../shared/utils/validate\";\nimport { getOracleFactoryChainlinkConfig, getPoolV2LiteManagerConfig } from \"../config\";\nimport { chainlinkFeedFactory, oracleFactoryChainlinkFactory, perpetualPoolLiteFactory, perpetualPoolLiteManagerFactory } from \"../factory\";\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const createPool = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, parameters, bTokenAddress, pairedTokenAddress) => {\n      chainId = normalizeChainId(chainId)\n      const { address: poolManagerAddress } = getPoolV2LiteManagerConfig(chainId)\n      const poolManager = perpetualPoolLiteManagerFactory(\n        chainId,\n        poolManagerAddress\n      );\n      // process parameters\n      const newParameters = parameters.map((p) => naturalToDeri(p).toString())\n      // send tx\n     return await poolManager.createPool(accountAddress, newParameters, bTokenAddress, pairedTokenAddress)\n  }, args)\n}\n\n// parameters: [symbolId, symbol, oracleAddress, multiplier, feeRatio, fundingRateCoefficient]\nexport const addSymbol = async(...args) => {\n  return catchTxApiError(async(chainId, poolAddress, accountAddress, parameters) => {\n      chainId = normalizeChainId(chainId)\n      const perpetualPoolLite = perpetualPoolLiteFactory(chainId, poolAddress);\n      // process parameters\n      const newParameters = parameters.map((p, index) => index > 2 ? naturalToDeri(p).toString() : p)\n      // send tx\n     return await perpetualPoolLite.addSymbol(accountAddress, newParameters)\n  }, args)\n}\n\nexport const createOracle = async(...args) => {\n  return catchTxApiError(async(chainId, accountAddress, feedAddress) => {\n      chainId = normalizeChainId(chainId)\n      feedAddress = toChecksumAddress(feedAddress)\n      const feedContract = chainlinkFeedFactory(chainId, feedAddress)\n      const symbol = await feedContract.symbol()\n      if (typeof symbol === 'string' && symbol !== '') {\n        const oracleFactoryConfig = getOracleFactoryChainlinkConfig(chainId);\n        const oracleFactory = oracleFactoryChainlinkFactory(\n          chainId,\n          oracleFactoryConfig.address\n        );\n        // process parameters\n        // send tx\n        return await oracleFactory.createOracle(\n          accountAddress,\n          symbol\n        );\n      } else {\n        throw new Error(\n          `-- createOracle: cannot get description of feedAddress(${feedAddress})`\n        );\n      }\n  }, args)\n}\n","import { DeriEnv } from \"../shared/config\"\n\nexport const getPTokenAirdropConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x055FD7f825cCD1b87092A1Ee40462c4c60dDD8ba',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x632D0f5d642B0d915cE1ad0772677FC589cc724d',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n\nexport const getDeriStakingConfig = (chainId, env) => {\n  chainId = chainId.toString()\n  env = env || DeriEnv.get();\n  const config = {\n    prod: [\n      {\n        chainId: '56',\n        address: '0x0000000000000000000000000000000000000000',\n      },\n    ],\n    dev: [\n      {\n        chainId: '97',\n        address: '0x3F374d96c4Fa3B19e0702B4A85B8f823AE922ae6',\n      },\n    ],\n  };\n\n  if (Object.keys(config).includes(env)) {\n    const res = config[env].find((c) => c.chainId === chainId);\n    if (res) {\n      return res\n    }\n  } \n  throw new Error(`-- getPTokenAirdropConfig(), invalid env(${env}) or chainId(${chainId})`)\n};\n","// this file is generated by script, don't modify it !!!\nexport const pTokenAirdropNULSAbi = [{\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"bTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"pTokenAddress\",\n                \"type\": \"address\"\n            }, {\n                \"internalType\": \"address\",\n                \"name\": \"poolAddress\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"constructor\"\n    }, {\n        \"anonymous\": false,\n        \"inputs\": [{\n                \"indexed\": true,\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"tokenId\",\n                \"type\": \"uint256\"\n            }, {\n                \"indexed\": true,\n                \"internalType\": \"uint256\",\n                \"name\": \"index\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"AirdropPToken\",\n        \"type\": \"event\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"airdropPToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"getBTokenBalance\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"account\",\n                \"type\": \"address\"\n            }\n        ],\n        \"name\": \"isAirdropPToken\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"isStartAirdrop\",\n        \"outputs\": [{\n                \"internalType\": \"bool\",\n                \"name\": \"\",\n                \"type\": \"bool\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"marginUnit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"maxAirdropLimit\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"ownerAddress\",\n        \"outputs\": [{\n                \"internalType\": \"address\",\n                \"name\": \"\",\n                \"type\": \"address\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"marginUnit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMarginUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"maxAirdropLimit_\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"name\": \"setMaxAirdropLimit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"tradeUnit_\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"name\": \"setTradeUnit\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"startAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"stopAirdrop\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"totalAirdropCount\",\n        \"outputs\": [{\n                \"internalType\": \"uint256\",\n                \"name\": \"\",\n                \"type\": \"uint256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"tradeUnit\",\n        \"outputs\": [{\n                \"internalType\": \"int256\",\n                \"name\": \"\",\n                \"type\": \"int256\"\n            }\n        ],\n        \"stateMutability\": \"view\",\n        \"type\": \"function\"\n    }, {\n        \"inputs\": [],\n        \"name\": \"withdrawBToken\",\n        \"outputs\": [],\n        \"stateMutability\": \"nonpayable\",\n        \"type\": \"function\"\n    }\n]\n\n","import { contractFactory } from \"../utils\";\nimport { PTokenAirdropNULSAdapter } from \"./adapter\";\nimport { PTokenAirdropNULS } from \"./gen/PTokenAirdropNULS\";\n\nexport const PTokenAirdropNULSFactory = contractFactory(\n  PTokenAirdropNULSAdapter(PTokenAirdropNULS)\n);\n","import Web3 from \"web3\";\nimport { bg } from \"../shared/utils\";\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// convert\nexport const toWei = (number, unit = \"ether\") => {\n  return Web3.utils.toWei(number, unit);\n};\n\nexport const fromWei = (number, unit = \"ether\") => {\n  return Web3.utils.fromWei(number, unit);\n};\n\n// factory\nexport const contractFactory = (klass) => {\n  let instances = {}\n  return (chainId, address) => {\n    const key = address\n    if (Object.keys(instances).includes(key)) {\n      return instances[key];\n    } else {\n      instances[key] = new klass(chainId, address);\n      return instances[key];\n    }\n  }\n}\n\n// adapter\nconst processObjectResult = (val, propList = []) => {\n  return Object.keys(val).reduce((acc, prop) => {\n    if (typeof val[prop] === \"string\" && propList.includes(prop)) {\n      acc[prop] = bg(fromWei(val[prop])).toString();\n    } else {\n      acc[prop] = val[prop];\n    }\n    return acc;\n  }, {});\n};\n\nconst processResult = (val, propList = []) => {\n  if (isArray(val)) {\n    return val.map((v) => processResult(v, propList));\n  } else if (isObject(val)) {\n    return processObjectResult(val, propList);\n  } else if (typeof val === \"string\") {\n    return bg(fromWei(val)).toString();\n  } else {\n    return val;\n  }\n};\n\nexport const processMethod = (klass, methodName, propList = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const res = await originMethod.apply(this, args);\n    return processResult(res, propList);\n  };\n  return klass;\n};\n\nexport const processTxMethod = (klass, methodName, toWeiArgPositions = []) => {\n  const originMethod = klass.prototype[methodName];\n  klass.prototype[methodName] = async function (...args) {\n    const newArgs = args.map((arg, index) =>\n      toWeiArgPositions.indexOf(index.toString()) !== -1 ? toWei(arg) : arg\n    );\n    return await originMethod.apply(this, newArgs);\n  };\n  return klass;\n};","// this file is generated by script, don't modify it !!!\nimport { ContractBase } from '../../../shared/contract/contract_base.js'\nimport { deleteIndexedKey } from '../../../shared/utils'\nimport { pTokenAirdropNULSAbi } from '../abi/pTokenAirdropNULSAbi.js'\n\nexport class PTokenAirdropNULS extends ContractBase {\n  // init\n  constructor(chainId, contractAddress) {\n    super(chainId, contractAddress, pTokenAirdropNULSAbi)\n  }\n\n  // query\n  //  async getBTokenBalance() {\n  //    const res = await this._call('getBTokenBalance', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async isAirdropPToken(account) {\n    const res = await this._call('isAirdropPToken', [account])\n    return deleteIndexedKey(res)\n  }\n  //  async isStartAirdrop() {\n  //    const res = await this._call('isStartAirdrop', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async marginUnit() {\n  //    const res = await this._call('marginUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async maxAirdropLimit() {\n  //    const res = await this._call('maxAirdropLimit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  //  async ownerAddress() {\n  //    const res = await this._call('ownerAddress', [])\n  //    return deleteIndexedKey(res)\n  //  }\n  async totalAirdropCount() {\n    const res = await this._call('totalAirdropCount', [])\n    return deleteIndexedKey(res)\n  }\n  //  async tradeUnit() {\n  //    const res = await this._call('tradeUnit', [])\n  //    return deleteIndexedKey(res)\n  //  }\n\n  // tx\n  async airdropPToken(accountAddress) {\n    return await this._transact('airdropPToken', [], accountAddress)\n  }\n  //  async setMarginUnit(accountAddress, marginUnit_) {\n  //    return await this._transact('setMarginUnit', [marginUnit_], accountAddress)\n  //  }\n  //  async setMaxAirdropLimit(accountAddress, maxAirdropLimit_) {\n  //    return await this._transact('setMaxAirdropLimit', [maxAirdropLimit_], accountAddress)\n  //  }\n  //  async setTradeUnit(accountAddress, tradeUnit_) {\n  //    return await this._transact('setTradeUnit', [tradeUnit_], accountAddress)\n  //  }\n  //  async startAirdrop(accountAddress) {\n  //    return await this._transact('startAirdrop', [], accountAddress)\n  //  }\n  //  async stopAirdrop(accountAddress) {\n  //    return await this._transact('stopAirdrop', [], accountAddress)\n  //  }\n  //  async withdrawBToken(accountAddress) {\n  //    return await this._transact('withdrawBToken', [], accountAddress)\n  //  }\n\n}","import { catchApiError, catchTxApiError, bg } from \"../../shared/utils\";\nimport { perpetualPoolLiteFactory } from \"../../v2_lite/factory\";\nimport { getPTokenAirdropConfig } from \"../config\"\nimport { PTokenAirdropNULSFactory } from \"../contract/factory\"\n\nexport const isPTokenAirdropped = async (...args) => {\n  return catchApiError(async(chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).isAirdropPToken(accountAddress);\n  }, args, 'isPTokenAirdropped', '')\n};\n\nexport const totalAirdropCount = async (...args) => {\n  return catchApiError(async(chainId) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).totalAirdropCount();\n  }, args, 'totalAirdropCount', '')\n};\n\nexport const isUserPTokenExist = async (...args) => {\n  return catchApiError(async (chainId, poolAddress, accountAddress) => {\n    let res = '';\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const result = await pool.pToken.balanceOf(accountAddress);\n    if (result === '1') {\n      res = true;\n    } else if (result === '0') {\n      res = false;\n    }\n    return res;\n  }, args, 'isUserPTokenExist', '');\n};\n\nexport const isBTokenUnlocked = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.isUnlocked(accountAddress, poolAddress)\n  }, args, 'isUnlocked', '')\n}\n\nexport const hasRequiredBalance = async(...args) => {\n  return catchApiError(async(chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    const res = await pool.bToken.balanceOf(accountAddress)\n    console.log('res', res)\n    return bg(res).gte(100)\n  }, args, 'hasRequiredBalance', '')\n}\n\n\n// tx\nexport const unlockBToken = async (chainId, poolAddress, accountAddress) => {\n  const args = [chainId, poolAddress, accountAddress];\n  return catchTxApiError(async (chainId, poolAddress, accountAddress) => {\n    const pool = perpetualPoolLiteFactory(chainId, poolAddress);\n    await pool.init()\n    return await pool.bToken.unlock(accountAddress, poolAddress);\n  }, args);\n};\n\nexport const airdropPToken = async (...args) => {\n  return catchTxApiError(async (chainId, accountAddress) => {\n    const config = getPTokenAirdropConfig(chainId);\n    return await PTokenAirdropNULSFactory(\n      chainId,\n      config.address\n    ).airdropPToken(accountAddress);\n  }, args);\n};\n","import { catchApiError, bg, deriToNatural, databaseActivityFactory, toChecksumAddress, DeriEnv, max } from '../../shared';\n\nconst range = (n) => (new Array(n)).fill(0).map((i,index) => index)\n\nconst keyPrefix = () => (DeriEnv.get() === 'prod' ? 'TE' : 'TE2');\n\nexport const getStakingTop10Users = async () => {\n  return catchApiError(\n    async () => {\n      const db = databaseActivityFactory();\n      const key = range(10).reduce(\n        (acc, i) =>\n          acc.concat([\n            `${keyPrefix()}.top.${i + 1}.account`,\n            `${keyPrefix()}.top.${i + 1}.fee`,\n            `${keyPrefix()}.top.${i + 1}.score`,\n            `${keyPrefix()}.top.${i + 1}.cont`,\n          ]),\n        []\n      );\n      //console.log(key)\n      const res = await db.getValues(key)\n      //console.log(res)\n      if (Array.isArray(res) && res.length === 4 * 10) {\n        let result = []\n        for (let i = 0; i < res.length; i++) {\n          if ((i + 1) % 4 === 0) {\n            const info = res.slice(i - 3, i + 1);\n            const index = (i + 1) / 4\n            result.push({\n              no: index,\n              userAddr: info[0].slice(0, 42),\n              feePaid: deriToNatural(info[1]).toString(),\n              score: deriToNatural(info[2]).toString(),\n              evgCoeff: deriToNatural(info[1]).eq(0)\n                ? '0'\n                : bg(info[3]).div(info[1]).toString(),\n              rewardBNB:\n                index <= 5\n                  ? index <= 4\n                    ? index <= 3\n                      ? index <= 2\n                        ? index <= 1\n                          ? '200000'\n                          : '100000'\n                        : '50000'\n                      : '35000'\n                    : '25000'\n                  : '18000',\n            });\n          }\n        }\n        return result.filter((r) => r.userAddr !== '0x0000000000000000000000000000000000000000')\n      } else {\n        return []\n      }\n    },\n    [],\n    'getStakingTop10Users',\n    [],\n  );\n};\n\nexport const getUserStakingInfo = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.fee`,\n        `${keyPrefix()}.${accountAddress}.coef`,\n      ];\n      const res = await db.getValues(key)\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n\n      const coef = deriToNatural(res[9])\n      return {\n        userAddr: accountAddress,\n        feePaid: deriToNatural(res[8]).toString(),\n        coef: max(coef, bg(1)).toString(),\n        score: bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4).toString()\n      }\n    },\n    args,\n    'getUserStakingInfo',\n    {\n      userAddr: '',\n      feePaid: '',\n      coef: '',\n      score: '',\n    }\n  );\n};\n\nexport const getUserStakingReward = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress)\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n        `${keyPrefix()}.top.1.account`,\n        `${keyPrefix()}.top.2.account`,\n        `${keyPrefix()}.top.3.account`,\n        `${keyPrefix()}.top.4.account`,\n        `${keyPrefix()}.top.5.account`,\n        `${keyPrefix()}.top.6.account`,\n        `${keyPrefix()}.top.7.account`,\n        `${keyPrefix()}.top.8.account`,\n        `${keyPrefix()}.top.9.account`,\n        `${keyPrefix()}.top.10.account`,\n      ];\n      const res = await db.getValues(key);\n      const scoreQ1 = bg(res[0]).eq(0) ? '0': bg(10000).times(bg(res[4]).div(res[0]))\n      const scoreQ2 = bg(res[1]).eq(0) ? '0': bg(20000).times(bg(res[5]).div(res[1]))\n      const scoreQ3 = bg(res[2]).eq(0) ? '0': bg(30000).times(bg(res[6]).div(res[2]))\n      const scoreQ4 = bg(res[3]).eq(0) ? '0': bg(50000).times(bg(res[7]).div(res[3]))\n      const score = bg(scoreQ1).plus(scoreQ2).plus(scoreQ3).plus(scoreQ4);\n      const rewardDERI = bg(1000000).times(bg(score).div(110000)).toString();\n\n      const topUsers = res.slice(8).map((u) => toChecksumAddress(u.slice(0, 42)));\n      let rewardBNB = '0';\n      if (topUsers.includes(accountAddress)) {\n        if (accountAddress === topUsers[0]) {\n          rewardBNB = '200000';\n        } else if (accountAddress === topUsers[1]) {\n          rewardBNB = '100000';\n        } else if (accountAddress === topUsers[2]) {\n          rewardBNB = '50000';\n        } else if (accountAddress === topUsers[3]) {\n          rewardBNB = '35000';\n        } else if (accountAddress === topUsers[4]) {\n          rewardBNB = '25000';\n        } else {\n          rewardBNB = '18000';\n        }\n      }\n      return {\n        userAddr: accountAddress,\n        rewardBNB,\n        rewardDERI,\n      };\n    },\n    args,\n    'getUserStakingReward',\n    { userAddr: '', rewardBNB: '', rewardDERI: '' }\n  );\n};\n\nexport const getUserStakingContribution = async (accountAddress) => {\n  const args = [accountAddress];\n  return catchApiError(\n    async (accountAddress) => {\n      accountAddress = toChecksumAddress(accountAddress);\n      const db = databaseActivityFactory();\n      const key = [\n        `${keyPrefix()}.Q1.cont`,\n        `${keyPrefix()}.Q2.cont`,\n        `${keyPrefix()}.Q3.cont`,\n        `${keyPrefix()}.Q4.cont`,\n        `${keyPrefix()}.${accountAddress}.Q1.cont`,\n        `${keyPrefix()}.${accountAddress}.Q2.cont`,\n        `${keyPrefix()}.${accountAddress}.Q3.cont`,\n        `${keyPrefix()}.${accountAddress}.Q4.cont`,\n      ];\n      const res = await db.getValues(key);\n      return {\n        userAddr: accountAddress,\n        totalContrib: deriToNatural(\n          bg(res[0]).plus(res[1]).plus(res[2]).plus(res[3])\n        ).toString(),\n        userContrib: deriToNatural(\n          bg(res[4]).plus(res[5]).plus(res[6]).plus(res[7])\n        ).toString(),\n      };\n    },\n    args,\n    'getUserStakingContribution',\n    { userAddr: '', totalContrib: '', userContrib: '' }\n  );\n};","import {\n  DeriEnv,\n  getPoolConfigList as getPoolV2ConfigList,\n  getPoolV1ConfigList,\n  VERSIONS,\n} from '../shared/config';\nimport { getJsonConfig } from '../shared/config/config';\nimport { ALL_EXCEPT_OPEN_VERSIONS } from '../shared/config/version';\n\nexport const getContractAddressConfig = (env, version) => {\n  env = env || DeriEnv.get()\n  if (version === 'v1') {\n    return getPoolV1ConfigList(env);\n  } else if (VERSIONS.includes(version)) {\n    return getPoolV2ConfigList(version, env);\n  } else if (version === undefined) {\n    return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => [...acc, ...getPoolV2ConfigList(v, env)], [])\n  } else {\n    throw new Error(`getContractAddressConfig: invalid version: ${version}`);\n  }\n};\n\nexport const getPoolConfigList = (env) => {\n  env = env || DeriEnv.get();\n  return ALL_EXCEPT_OPEN_VERSIONS.reduce((acc, v) => {\n    let res = []\n    const config = getJsonConfig(v, env);\n    if (config && config.pools) {\n      res = config.pools.map((p) => {\n        p.version = v\n        return p\n      })\n    }\n    return [...acc, ...res];\n  }, []);\n};\n","//import { getLiquidityInfo2 } from '../v1/api/rest_api';\nimport { getPoolVersion, LITE_VERSIONS, LITE_AND_OPTION_VERSIONS } from '../shared/config';\nimport { getLiquidityInfo2 } from '../v1/api';\nimport {\n  getPoolLiquidity as getPoolLiquidity2,\n  getPoolInfoApy as getPoolInfoApy2,\n} from '../shared/api/database_api';\nimport {\n  getLiquidityInfoV2,\n  getPoolLiquidityV2,\n  getPoolInfoApyV2,\n} from '../v2/api';\nimport {\n  getLiquidityInfoV2l,\n  getPoolLiquidityV2l,\n  getPoolInfoApyV2l,\n} from '../v2_lite/api';\nimport {\n  getLiquidityInfoOption,\n} from '../option/api';\n\nexport const getLiquidityInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityInfoV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getLiquidityInfoOption(chainId, poolAddress, accountAddress)\n  }\n  if (bTokenId === undefined) {\n    return getLiquidityInfo2(chainId, poolAddress, accountAddress)\n  } else {\n    return getLiquidityInfoV2(chainId, poolAddress, accountAddress, bTokenId)\n  }\n};\n\nexport const getPoolLiquidity = async (\n  chainId,\n  poolAddress,\n  bTokenId,\n) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolLiquidityV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolLiquidity2(chainId, poolAddress)\n  } else {\n    return getPoolLiquidityV2(chainId, poolAddress, bTokenId)\n  }\n};\n\nexport const getPoolInfoApy = async (chainId, poolAddress, bTokenId) => {\n  if (LITE_AND_OPTION_VERSIONS.includes(getPoolVersion(poolAddress))) {\n    return getPoolInfoApyV2l(chainId, poolAddress)\n  }\n  if (bTokenId === undefined) {\n    return getPoolInfoApy2(chainId, poolAddress)\n  } else {\n    return getPoolInfoApyV2(chainId, poolAddress, bTokenId)\n  }\n};\n","//import {addLiquidity2, removeLiquidity2 } from '../v1/api/contract_transaction_api_v2';\nimport { getPoolVersion, LITE_VERSIONS } from '../shared'\nimport { addLiquidity2, removeLiquidity2 } from '../v1/api';\nimport { addLiquidityV2, removeLiquidityV2 } from '../v2/api';\nimport { addLiquidityV2l, removeLiquidityV2l } from '../v2_lite/api';\nimport { addLiquidityOption, removeLiquidityOption } from '../option/api';\n\nexport const addLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return addLiquidityV2l(chainId, poolAddress, accountAddress, amount)\n  } else if (version === 'option') {\n    return addLiquidityOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return addLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return addLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n}\n\nexport const removeLiquidity = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum,\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return removeLiquidityV2l(chainId, poolAddress, accountAddress, amount, isMaximum)\n  } else if (version === 'option') {\n    return removeLiquidityOption(chainId, poolAddress, accountAddress, amount, isMaximum)\n  }\n  if (bTokenId === undefined) {\n    return removeLiquidity2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return removeLiquidityV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum,\n    );\n  }\n}\n","import {\n  getEstimatedFundingRateOption,\n  getFundingRateCacheOption,\n  getFundingRateOption,\n  getLiquidityUsedOption,\n  getPositionInfoOption,\n  getPositionInfosPosition,\n  getSpecificationOption,\n  getWalletBalanceOption,\n  getEstimatedFeeOption,\n  getEstimatedMarginOption,\n  getEstimatedLiquidityUsedOption,\n  isUnlockedOption,\n} from '../option/api';\nimport { getPoolVersion, isDeriUnlocked, LITE_VERSIONS } from '../shared';\nimport {\n  getPositionInfo2,\n  isUnlocked2,\n  getEstimatedMargin2,\n  getEstimatedFee2,\n  getEstimatedFundingRate2,\n  getEstimatedLiquidityUsed2,\n  getWalletBalance2,\n  getSpecification2,\n  getFundingRate2,\n  getLiquidityUsed2,\n  getFundingRateCache2,\n} from '../v1/api';\n\nimport {\n  getPositionInfoV2,\n  getPositionInfosV2,\n  isUnlockedV2,\n  getEstimatedMarginV2,\n  getEstimatedFeeV2,\n  getEstimatedFundingRateV2,\n  getEstimatedLiquidityUsedV2,\n  getSpecificationV2,\n  getWalletBalanceV2,\n  getFundingRateV2,\n  getLiquidityUsedV2,\n  getFundingRateCacheV2,\n  getEstimatedLiquidatePriceV2,\n} from '../v2/api';\n\nimport {\n  getPositionInfoV2l,\n  getPositionInfosV2l,\n  isUnlockedV2l,\n  getEstimatedMarginV2l,\n  getEstimatedFeeV2l,\n  getEstimatedFundingRateV2l,\n  getEstimatedLiquidityUsedV2l,\n  getSpecificationV2l,\n  getWalletBalanceV2l,\n  getFundingRateV2l,\n  getLiquidityUsedV2l,\n  getFundingRateCacheV2l,\n} from '../v2_lite/api';\n\nexport const getSpecification = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getSpecificationV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getSpecificationOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getSpecification2(chainId, poolAddress);\n  } else {\n    return getSpecificationV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getPositionInfo = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfoV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getPositionInfoOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getPositionInfo2(chainId, poolAddress, accountAddress);\n  } else {\n    return getPositionInfoV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n\nexport const getPositionInfos = async(chainId, poolAddress, accountAddress) => {\n  const version = getPoolVersion(poolAddress);\n  if (LITE_VERSIONS.includes(version)) {\n    return getPositionInfosV2l(chainId, poolAddress, accountAddress)\n  } else if (version === 'option') {\n    return getPositionInfosPosition(chainId, poolAddress, accountAddress)\n  } else if (version === 'v1') {\n    return [\n      await getPositionInfo2(chainId, poolAddress, accountAddress),\n    ].filter((p) => p.volume !== '0');\n  } else if (version === 'v2') {\n    return getPositionInfosV2(chainId, poolAddress, accountAddress)\n  } else {\n    // return empty array for v1, v2, v2_lite\n    return []\n  }\n}\nexport const getWalletBalance = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getWalletBalanceV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return getWalletBalanceOption(chainId, poolAddress, accountAddress);\n  }\n  if (bTokenId === undefined) {\n    return getWalletBalance2(chainId, poolAddress, accountAddress);\n  } else {\n    return getWalletBalanceV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const isUnlocked = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return isUnlockedV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return isUnlockedOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return isDeriUnlocked(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return isUnlocked2(chainId, poolAddress, accountAddress);\n  } else {\n    return isUnlockedV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const getEstimatedLiquidatePrice = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  } else if (version === 'option') {\n    // place holder\n    return ''\n  }\n  if (symbolId === undefined) {\n    // place holder\n    return ''\n  } else {\n    return getEstimatedLiquidatePriceV2(chainId, poolAddress, accountAddress, newVolume, symbolId);\n  }\n};\n\nexport const getEstimatedFee = async (\n  chainId,\n  poolAddress,\n  volume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFeeV2l(chainId, poolAddress, volume, symbolId);\n  } else if (version === 'option') {\n    return getEstimatedFeeOption(chainId, poolAddress, volume, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFee2(chainId, poolAddress, volume);\n  } else {\n    return getEstimatedFeeV2(chainId, poolAddress, volume, symbolId);\n  }\n};\n\nexport const getEstimatedMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  volume,\n  leverage,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedMargin2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage\n    );\n  } else {\n    return getEstimatedMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      volume,\n      leverage,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRate = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRate2(chainId, poolAddress);\n  } else {\n    return getFundingRateV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedFundingRate = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedFundingRateV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedFundingRateOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedFundingRate2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedFundingRateV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getLiquidityUsed = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getLiquidityUsedV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getLiquidityUsedOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getLiquidityUsed2(chainId, poolAddress);\n  } else {\n    return getLiquidityUsedV2(chainId, poolAddress, symbolId);\n  }\n};\n\nexport const getEstimatedLiquidityUsed = async (\n  chainId,\n  poolAddress,\n  newNetVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getEstimatedLiquidityUsedV2l(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return getEstimatedLiquidityUsedOption(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return getEstimatedLiquidityUsed2(chainId, poolAddress, newNetVolume);\n  } else {\n    return getEstimatedLiquidityUsedV2(\n      chainId,\n      poolAddress,\n      newNetVolume,\n      symbolId\n    );\n  }\n};\n\nexport const getFundingRateCache = async (chainId, poolAddress, symbolId) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getFundingRateCacheV2l(chainId, poolAddress, symbolId);\n  } else if (version === 'option') {\n    return getFundingRateCacheOption(chainId, poolAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getFundingRateCache2(chainId, poolAddress);\n  } else {\n    return getFundingRateCacheV2(chainId, poolAddress, symbolId);\n  }\n};\n","import { closePositionOption, depositMarginOption, tradeWithMarginOption, unlockOption, withdrawMarginOption } from '../option/api';\nimport { getPoolVersion, LITE_VERSIONS, unlockDeri } from '../shared';\nimport {\n  unlock2,\n  tradeWithMargin2,\n  closePosition2,\n  depositMargin2,\n  withdrawMargin2,\n} from '../v1/api';\nimport {\n  unlockV2,\n  tradeWithMarginV2,\n  closePositionV2,\n  depositMarginV2,\n  withdrawMarginV2,\n} from '../v2/api';\nimport {\n  unlockV2l,\n  tradeWithMarginV2l,\n  closePositionV2l,\n  depositMarginV2l,\n  withdrawMarginV2l,\n} from '../v2_lite/api';\n\nexport const unlock = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return unlockV2l(chainId, poolAddress, accountAddress);\n  } else if (version === 'option') {\n    return unlockOption(chainId, poolAddress, accountAddress);\n  }\n  if (accountAddress === undefined) {\n    return unlockDeri(chainId, poolAddress);\n  } else if (bTokenId === undefined) {\n    return unlock2(chainId, poolAddress, accountAddress);\n  } else {\n    return unlockV2(chainId, poolAddress, accountAddress, bTokenId);\n  }\n};\n\nexport const depositMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return depositMarginV2l(chainId, poolAddress, accountAddress, amount);\n  } else if (version === 'option') {\n    return depositMarginOption(chainId, poolAddress, accountAddress, amount);\n  }\n  if (bTokenId === undefined) {\n    return depositMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return depositMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId\n    );\n  }\n};\n\nexport const withdrawMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  amount,\n  bTokenId,\n  isMaximum\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return withdrawMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  } else if (version === 'option') {\n    return withdrawMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      isMaximum\n    );\n  }\n  if (bTokenId === undefined) {\n    return withdrawMargin2(chainId, poolAddress, accountAddress, amount);\n  } else {\n    return withdrawMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      amount,\n      bTokenId,\n      isMaximum\n    );\n  }\n};\n\nexport const tradeWithMargin = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  newVolume,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return tradeWithMarginV2l(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  } else if (version === 'option') {\n    return tradeWithMarginOption(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n  if (symbolId === undefined) {\n    return tradeWithMargin2(chainId, poolAddress, accountAddress, newVolume);\n  } else {\n    return tradeWithMarginV2(\n      chainId,\n      poolAddress,\n      accountAddress,\n      newVolume,\n      symbolId\n    );\n  }\n};\n\nexport const closePosition = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return closePositionV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return closePositionOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return closePosition2(chainId, poolAddress, accountAddress);\n  } else {\n    return closePositionV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { getPoolVersion, LITE_VERSIONS } from '../shared';\nimport { getTradeHistoryOption } from '../option/api';\nimport { getTradeHistory2 } from '../v1/api';\nimport { getTradeHistoryV2 } from '../v2/api';\nimport { getTradeHistoryV2l } from '../v2_lite/api';\n\nexport const getTradeHistory = async (\n  chainId,\n  poolAddress,\n  accountAddress,\n  symbolId\n) => {\n  const version = getPoolVersion(poolAddress)\n  if (LITE_VERSIONS.includes(version)) {\n    return getTradeHistoryV2l(chainId, poolAddress, accountAddress, symbolId);\n  } else if (version === 'option') {\n    return getTradeHistoryOption(chainId, poolAddress, accountAddress, symbolId);\n  }\n  if (symbolId === undefined) {\n    return getTradeHistory2(chainId, poolAddress, accountAddress);\n  } else {\n    return getTradeHistoryV2(chainId, poolAddress, accountAddress, symbolId);\n  }\n};\n","import { io } from \"socket.io-client\";\nimport {equalIgnoreCase } from \"../utils/utils\";\n\nclass WebSocket {\n  constructor(){\n    this.socket = io(process.env.REACT_APP_WSS_URL, {\n      transports: ['websocket'],\n      withCredentials: true\n    })\n    this.events = [];\n    this.socket.on('connect', () => {\n      console.log('connect')\n      this.events.forEach(event => {\n        this.socket.emit(event[0],event[1]);\n      })\n    })\n    this.socket.on('disconnect',event => {\n      console.log('web socket disconnect,will reconnect auto')\n    })\n  }\n\n  subscribe(event = 'get_kline_update',params = {},onMessage,listener = 'kline_update'){\n    this.socket.on(listener,data => {\n      if (data.time_type === params.time_type && equalIgnoreCase(data.symbol,params.symbol) && onMessage) {\n        onMessage(data)\n      }\n    })\n    this.socket.emit(event, params)\n    if(this.findEvent(event,params) === -1){\n      this.events.push([event,params])\n    }\n  }\n\n  findEvent(event,params){\n    return this.events.findIndex(item => item[0] === event && item[1].symbol === params.symbol && item[1].time_type === params.time_type);\n  }\n\n  unsubscribe(event,params = {}){\n    this.socket.emit(event,params)\n    const pos = this.findEvent(event,params)\n    this.events.splice(pos,1)\n  }\n}\nexport default new WebSocket()","import { makeObservable, observable, action, computed } from \"mobx\";\nimport { restoreLocale, storeLocale } from \"../utils/utils\";\nimport supportedCatalog from '../locales/lang.json'\n\n\nconst cache = {}\n\nfunction importAll(r){\n  return r.keys().forEach(key => {\n    const path = key.split('/')\n    const lang = path[1]\n    const page = path[2].split('.')[0].toLowerCase()\n    if(!cache[lang]) {\n      cache[lang] = {}\n    }\n    \n    if(/mobile-/.test(page)){\n      const pageName= page.split('-')[1]\n      if(!cache[lang][pageName]){ \n        cache[lang][pageName] = {}\n      }\n      cache[lang][pageName]['mobile'] = r(key)\n    } else {\n      cache[lang][page] = r(key)\n    }\n  });\n}\n//lang.json 是语言包目录，需要排除在外\nimportAll(require.context(`../locales/`,true,/^((?!lang).)*\\.json$/))\n\nclass Intl {\n  locale = 'en'\n  constructor(){\n    makeObservable(this,{\n      locale : observable,\n      setLocale : action,\n      dict : computed,\n      localeLabel: computed\n    })\n    const language = navigator.language\n    const prefix = language && language.split('-')[0]\n    const locale = restoreLocale()\n    if(locale && Object.keys(supportedCatalog).includes(locale) ){\n      this.locale = locale\n    } else if(prefix && Object.keys(supportedCatalog).includes(prefix)){\n      this.locale = prefix\n    }\n  }\n\n  setLocale(locale){\n    if(locale && supportedCatalog[locale]){\n      this.locale = locale;\n      storeLocale(locale)\n    }\n  }\n\n  get(page,key){\n    return cache[this.locale][page][key]\n  }\n\n  get dict(){         \n    return cache[this.locale]\n  }\n\n  get localeLabel(){\n    const label = supportedCatalog[this.locale];\n    return label ? label.substr(0,2).toUpperCase() : \"EN\" \n  }\n}\n\nexport default new Intl();","import React from 'react'\nimport Modal from 'react-modal/lib/components/Modal';\nimport { inject, observer } from 'mobx-react';\n\nconst withModal = Component => {\n  const appElement = document.getElementById('root')\n  const customizeStyle =  {\n    overlay: {\n      position: 'fixed',\n      zIndex : 2,\n      background : 'rgb(0 0 0 / 0.5)'\n    },\n    content: {\n      position: 'absolute',\n      border : 0,\n      background : 'none',\n      inset : 0,\n      overflow : 'initial'\n    }\n  };\n\n  class WithModal extends React.Component {\n    constructor(props){\n      super(props)\n      this.state = {\n        modalIsOpen : false\n      }\n    }\n\n    render(){\n      const {modalIsOpen,className,overlay = {}} = this.props\n      const overlayMerged = Object.assign(customizeStyle.overlay,{...overlay})\n      const mergedStyle = Object.assign(customizeStyle,{overlay :overlayMerged})\n      return (\n        <Modal isOpen={modalIsOpen} style={mergedStyle} appElement={appElement} portalClassName={this.props.intl.locale}>\n          <div className={className}>\n            <Component {...this.props} className={className} onClose={this.props.onClose}/>\n          </div>\n        </Modal>\n      )\n    }\n  }\n\n  return inject('intl')(observer(WithModal)) ;\n}\nexport default withModal;","import { makeAutoObservable, observable, action, computed } from \"mobx\";\n\n\nclass Type {\n  current = null;\n  \n  constructor(){\n    makeAutoObservable(this,{\n      current:observable,\n      setCurrent : action,\n      isOption : computed,\n      isFuture : computed\n    })\n  }\n\n  setCurrent(type){\n    this.current = type;\n  }\n\n  get isOption() {\n    return this.current === 'option'\n  }\n\n  get isFuture() {\n    return this.current === 'future'\n  }\n}\nexport default new Type()","import Web3 from 'web3';\nimport BigNumber from 'bignumber.js';\n\n// lang\nexport const isObject = (value) => typeof value === 'object' && value !== null\nexport const isArray = (value) => typeof value === 'object' && Array.isArray(value)\nexport const isFunction = (value) => typeof value === 'function'\n\n// == bg\nBigNumber.config({\n  DECIMAL_PLACES: 18,\n  ROUNDING_MODE: BigNumber.ROUND_DOWN,\n  EXPONENTIAL_AT: 256,\n});\n\nexport const bg = (value, base = 0) => {\n  if (base === 0) {\n    return BigNumber(value);\n  }\n  if (base > 0) {\n    return BigNumber(value).times(BigNumber(`1${'0'.repeat(base)}`));\n  }\n  return BigNumber(value).div(BigNumber(`1${'0'.repeat(-base)}`));\n};\n\nexport const max = (value1, value2) => {\n  if (value1.gte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const min = (value1, value2) => {\n  if (value1.lte(value2)) {\n    return value1;\n  }\n  return value2;\n};\n\nexport const fromWei = (value, unit='ether') => Web3.utils.fromWei(value, unit)\n\nexport const toWei = (value, unit='ether') => Web3.utils.toWei(value, unit)\n\nexport const toNatural = (value, num = 0) => BigNumber(value).toFixed(num).toString();\n\nexport const toHex = (value) => Web3.utils.toHex(value);\n\nexport const toChecksumAddress = (value) => Web3.utils.toChecksumAddress(value);\n\nexport const hexToString = (value) => Web3.utils.hexToUtf8(value);\n\nexport const hexToNumber = (value) => Web3.utils.hexToNumber(value);\n\nexport const hexToNumberString = (value) => Web3.utils.hexToNumberString(value);\n\nexport const hexToDeri = (value) => bg(hexToNumberString(value));\n\nexport const hexToNatural = (value) => bg(hexToNumberString(value), -18);\n\n\nexport const deriToNatural = (value) => bg(value, -18);\n\nexport const naturalToDeri = (value) => bg(value, 18).toFixed(0);\n\nexport const deriToString = (value) => bg(value).toString();\n\nexport const deriToBool = (value) => {\n  if (bg(value).toNumber() === 1) {\n    return true;\n  }\n  return false;\n};\n\nexport const naturalWithPercentage = (value) =>\n  `${bg(value).sd(4).times(100).toFixed(4).toString()}%`;\n\nexport const formatBN = (bigNumber) =>\n  bigNumber.toFormat().replaceAll(',', '').toString();\n\n// == convert\nexport const numberToHex = (value) => Web3.utils.numberToHex(value);\n\n\n// == utils\nexport const isBrowser = () => typeof window !== 'undefined' && typeof window.document !== 'undefined'\nexport const isNodejs = () => typeof process !== 'undefined' && process.versions != null && process.versions.node != null\nexport const isJsDom = () => typeof window !== 'undefined' && navigator.userAgent.includes('jsdom')\n\n// == array set\nexport const isEqualSet = (set1, set2) => {\n  if (set1.size !== set2.size) return false;\n  for (let item of set1) {\n    if (!set2.has(item)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\nconst intRegex = /^\\d+$/\n\n// == contract gen\nexport const deleteIndexedKey = (obj) => {\n  if (isObject(obj) && Object.keys(obj).length > 0) {\n    const keys = Object.keys(obj);\n    const intKeyCount = keys.reduce(\n      (acc, k) => (intRegex.test(k) ? acc + 1 : acc),\n      0\n    );\n    if (intKeyCount * 2 === keys.length) {\n      let newObj = {};\n      Object.keys(obj).forEach((k) => {\n        if (!intRegex.test(k)) {\n          newObj[k] = obj[k];\n        }\n      });\n      return newObj;\n    }\n    return obj;\n  } else {\n    return obj;\n  }\n};\n\nexport const fromWeiForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = fromWei(obj[i]);\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\nexport const toNumberForObject = (obj, keyList = []) => {\n  return Object.keys(obj).reduce((acc, i) => {\n    if (keyList.includes(i)) {\n      acc[i] = bg(obj[i]).toNumber();\n    } else {\n      acc[i] = obj[i];\n    }\n    return acc;\n  }, {});\n};\n\n\n// for frontend to display symbols\nexport const sortOptionSymbols = (symbolList) => {\n  const symbolArr = symbolList\n    .map((s) => s.symbol)\n    .map((s) => {\n      return s.split('-');\n    });\n  const unique = (value, index, self) => self.indexOf(value) === index\n  const to2 = (i) => i < 10 ? `0${i}` : i\n  const symbol = symbolArr.map((s) => s[0]).filter(unique)\n  const direction = symbolArr.map((s) => s[2]).filter(unique)\n  const price = symbolArr\n    .map((s) => s[1])\n    .filter(unique)\n    .sort((a, b) => parseInt(b) - parseInt(a));\n  return symbolList.map((i, index) => {\n    const index1 =  symbol.indexOf(symbolArr[index][0]) + 1\n    const index2 =  to2(direction.indexOf(symbolArr[index][2]) + 1)\n    const index3 =  to2(price.indexOf(symbolArr[index][1]) + 1)\n    i.index = parseInt(`${index1}${index2}${index3}`)\n    return i\n  }).sort((a, b) => a.index - b.index).map((i) => {\n    delete i.index\n    return i\n  })\n}\n\n","import { makeAutoObservable, observable, action, computed } from \"mobx\";\nimport { storeVersion, restoreVersion } from \"../utils/utils\";\n\nclass Version {\n  current = null;\n\n  constructor(){\n    makeAutoObservable(this,{\n      current : observable,\n      setCurrent : action,\n      isV1 : computed,\n      isV2 : computed,\n      isV2Lite : computed\n    })\n  }\n\n\n  setCurrent(version){\n    this.current = version;\n  }\n\n  switch(){\n    if(this.current === 'v1'){\n      this.setCurrent('v2')\n    } else {\n      this.setCurrent('v1')\n    }\n  }\n\n  get isV1() {\n    return this.current === 'v1'\n  }\n\n  get isV2(){\n    return this.current === 'v2'\n  }\n\n  get isV2Lite (){\n    return this.current === 'v2_lite'\n  }\n\n  get isOpen(){\n    return this.current === 'v2_lite_open'\n  }\n}\nexport default new Version()","import { makeObservable, observable, action } from \"mobx\";\nimport { getContractAddressConfig, DeriEnv,sortOptionSymbols,openConfigListCache } from \"../lib/web3js/indexV2\";\n\nexport default class Config {\n  all = []\n\n  constructor(){\n    makeObservable(this,{\n      all : observable,\n      setAll : action\n    })\n  }\n\n  async load(version,isOptions){\n    let current = version && version.current;\n    if(isOptions){\n      current = 'option'\n    }\n    if(current === 'v2_lite_open'){\n       await openConfigListCache.update()\n    }\n    let configs = getContractAddressConfig(DeriEnv.get(),current)\n    if(isOptions){\n      configs = sortOptionSymbols(configs)\n    }\n    if(!isOptions && version){\n      configs = configs.filter(c => c.version === version.current && c.symbol !== '--')\n      //v2 不需要展示base token,需要合并相同的base token\n      if(version.isV2){\n        configs = configs.reduce((total,cur) => {\n          const pos = total.findIndex(c => c.symbol === cur.symbol && c.pool === cur.pool);\n          if(pos === -1 ){\n            total.push(cur)\n          }\n          return total;\n        },[])\n      }\n    }\n    this.setAll(configs)\n    return this.all;\n  }\n\n  setAll(all){\n    this.all = all;\n  }\n  \n}","\n\nimport BigNumber from 'bignumber.js'\nimport version from '../model/Version';\nimport type from '../model/Type';\nimport config from '../config.json'\n\nimport {\n  DeriEnv,\n  getPoolLiquidity,\n  getPoolInfoApy,\n  getUserInfoAll,\n  getLiquidityInfo\n} from '../lib/web3js/indexV2'\nconst versionKey = 'deri-current-version'\n\n\nconst env = DeriEnv.get();\nconst { chainInfo } = config[env]\n\nexport function bg(value, base = 0) {\n  if (base === 0) {\n    return BigNumber(value);\n  } else if (base > 0) {\n    return BigNumber(value).times(BigNumber(\"1\" + \"0\".repeat(base)));\n  } else {\n    return BigNumber(value).div(BigNumber(\"1\" + \"0\".repeat(-base)));\n  }\n}\n\nexport function deriNatural(value) {\n  return bg(value, -18);\n}\n\nexport function formatAddress(address){\n  return address && `${address.substr(0,6)}...${address.substr(-4)}`\n}\n\nexport function formatBalance(balance){\n  return balance && (+balance).toFixed(4)\n}\n\nexport function eqInNumber(str1,str2){\n  return (+str1) === (+str2)\n}\n\nexport function isLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd' || address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\nexport function isSushiLP(address){\n  return address === '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd'\n}\nexport function isCakeLP(address){\n  return address === '0x73feaa1eE314F8c655E354234017bE2193C9E24E'\n}\n\nexport function sessionStorageKey(version){\n  return `${version}-current-trading-pool`\n}\n\nexport function convertToInternationalCurrencySystem (labelValue) {\n  \n  // Nine Zeroes for Billions\n  return Number.isNaN(labelValue) ? ''\n  : Math.abs(Number(labelValue)) >= 1.0e+9\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+9).toFixed(2) + \"B\"\n  // Six Zeroes for Millions \n  : Math.abs(Number(labelValue)) >= 1.0e+6\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+6).toFixed(2) + \"M\"\n  // Three Zeroes for Thousands\n  : Math.abs(Number(labelValue)) >= 1.0e+3\n\n  ? (Math.abs(Number(labelValue)) / 1.0e+3).toFixed(2) + \"K\"\n\n  : Math.abs(Number(labelValue).toFixed(2));\n\n}\n\n\n// export function storeVersion(version){\n//   sessionStorage.setItem(versionKey,version)\n// }\n\n// export function restoreVersion(){\n//   return sessionStorage.getItem(versionKey)\n// }\n\nexport function storeConfig(version,config){\n  if(config){\n    const key = sessionStorageKey(version);\n    sessionStorage.setItem(key,JSON.stringify(config))\n  }\n}\n\nexport function getConfigFromStore(version){\n  return JSON.parse(sessionStorage.getItem(sessionStorageKey(version)))\n}\n\nexport function storeChain(chainInfo){\n  sessionStorage.setItem('current-chain',JSON.stringify(chainInfo))\n}\nexport function restoreChain(){\n  return JSON.parse(sessionStorage.getItem('current-chain')) || {code : ''};\n}\n\nexport function storeLocale(locale){\n  sessionStorage.setItem('current-locale',locale)\n}\n\nexport function restoreLocale(){\n  return sessionStorage.getItem('current-locale')\n}\n\nexport function addParam(param,value,urlString = window.location.href){\n  const url = new URL(urlString);\n  if(url.searchParams.has(param)){\n    url.searchParams.set(param,value);\n  } else {\n    url.searchParams.append(param,value);\n  }\n  return  url.toString();\n}\n\nexport function hasParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.has(param);\n}\n\nexport function getParam(param,urlString = window.location.href){\n  const url = new URL(urlString);\n  return url.searchParams.get(param);\n}\n\nexport function getFormatSymbol(symbol){\n  const curChain = restoreChain();\n  if(type.isOption){\n    if(symbol.indexOf('-MARKPRICE') !== -1) {\n      symbol = symbol.substr(0,symbol.indexOf('-MARKPRICE'))\n    } else {\n      symbol = symbol.split('-')[0]\n    }\n  }\n  return version.isV2 || version.isV2Lite || type.isOption || version.current === 'v2_lite_open' ? `${symbol}_V2_${curChain ? curChain.code.toUpperCase() : 'BSC'}` : symbol\n}\n\nexport function equalIgnoreCase(str1,str2){\n  return str1 && str1.toUpperCase() === str2 && str2.toUpperCase()\n}\n\nexport function stripSymbol(symbol){\n  if(!symbol){\n    return symbol;\n  }\n  if(/-/.test(symbol)){\n    symbol = symbol.split('-')[0]\n  }\n  return symbol\n}\n\n\nexport const  secondsInRange = {\n  '1' : 60,\n  '5' : 300,\n  '15' : 900,\n  '30' : 1800,\n  '60' : 3600,\n  '1D' : 3600 * 24,\n  '1W' : 3600 * 24 * 7\n}\nexport const intervalRange = {\n  '1' : 'min',\n  '5' : '5min',\n  '15' : '15min',\n  '30' : '30min',\n  '60' : 'hour',\n  '1D' : 'day',\n  '1W' : 'week'\n}\n\n \nexport function calcRange(interval){\n  const timestamp = new Date().getTime() /1000 ;\n  let from,to;\n  if(interval !== '1W') {\n    to = Math.floor(timestamp / secondsInRange[interval] ) * secondsInRange[interval]\n    from  = to - secondsInRange[interval] * 200\n  } else {\n    to = Math.floor((timestamp - 345600) /secondsInRange[interval]) * secondsInRange[interval] + 345600\n    from = to - secondsInRange[interval] * 200\n  }\n  return [from,to]\n \n}\n\nexport function groupByNetwork(pools){\n  const all = []\n  pools.reduce((total, pool) => {\n    const find = total.find(item => eqInNumber(item['pool']['address'], pool['address']))\n    if (find && find.list.length < 5) {\n      find['list'].push(pool)\n    } else {\n      const poolInfo = {\n        pool: {\n          network: pool.network,\n          symbol: pool.symbol,\n          address: pool.address,\n          formatAdd: pool.formatAdd,\n          version: pool.version,\n          // innoDisplay : pool.version=== 'v2_lite' ? Intl.get('mining','v2_lite') : pool.version,\n          chainId: pool.chainId,\n          airdrop: pool.airdrop,\n          type: pool.type,\n          bTokenSymbol: pool.bTokenSymbol,\n          bTokenId: pool.bTokenId,\n          symbolId: pool.symbolId\n        },\n        list: [pool]\n      }\n      total.push(poolInfo)\n    }\n    return total;\n  }, all)\n  return all;\n}\n\nexport function combineSymbolfromPoolConfig(configs){\n  return configs.reduce((total,config) => {\n    const pos = total.findIndex(item => item.chainId === config.chainId && (item.pool === config.pool) && config.version === item.version)\n    if((config.version === 'v2' || config.version === 'v2_lite' || config.version === 'option' || config.version === 'v2_lite_open')  \n        && pos > -1) {\n      if(total[pos].symbol.indexOf(config.symbol) === -1){\n        total[pos].symbol += `,${config.symbol}` \n      } else if(total.findIndex(item => item.bTokenSymbol === config.bTokenSymbol) === -1) {\n        total.push(config)\n      }\n    } else{\n      total.push(config)\n    }\n    return total;\n  },[]);\n}\n\nexport async function mapPoolInfo(config,wallet,chainInfo){\n  // const liqPool = await getPoolLiquidity(config.chainId,config.pool,config.bTokenId) || {}\n  // const apyPool = await getPoolInfoApy(config.chainId,config.pool,config.bTokenId) || {}\n  const pool = config.pool || ''\n  const item = { \n    network : chainInfo[config.chainId] && chainInfo[config.chainId].name,\n    // liquidity : liqPool.liquidity,\n    // apy :  ((+apyPool.apy) * 100).toFixed(2),\n    formatAdd : formatAddress(pool),\n    address : pool,\n    type : 'perpetual',\n    buttonText : 'STAKING',\n    multiplier : 1\n  }\n  // if(wallet && wallet.isConnected()){\n  //   const info = await getLiquidityInfo(config.chainId,config.pool,wallet.detail.account,config.bTokenId).catch(e => console.log(e));\n  //   const claimInfo = await getUserInfoAll(wallet.detail.account);\n  //   if(info){\n  //     item['pnl'] = info.pnl\n  //   }\n  //   if(claimInfo){\n  //     item['claimed'] = claimInfo.total;\n  //     item['unclaimed'] = claimInfo.amount\n  //   }\n  // }\n\n  return Object.assign(config,item)\n}\n\n\n\n","var map = {\n\t\"./de/Signin.json\": 567,\n\t\"./de/bridge.json\": 568,\n\t\"./de/broker.json\": 569,\n\t\"./de/dip-history-two.json\": 570,\n\t\"./de/dip-history.json\": 571,\n\t\"./de/footer.json\": 572,\n\t\"./de/governance.json\": 573,\n\t\"./de/header.json\": 574,\n\t\"./de/home.json\": 575,\n\t\"./de/lite.json\": 576,\n\t\"./de/mining.json\": 577,\n\t\"./de/mobile-lite.json\": 578,\n\t\"./de/nuls.json\": 579,\n\t\"./de/permission.json\": 580,\n\t\"./de/pro.json\": 581,\n\t\"./de/team.json\": 582,\n\t\"./de/trading-mining.json\": 583,\n\t\"./en/Signin.json\": 584,\n\t\"./en/bridge.json\": 585,\n\t\"./en/broker.json\": 586,\n\t\"./en/dip-history-two.json\": 587,\n\t\"./en/dip-history.json\": 588,\n\t\"./en/footer.json\": 589,\n\t\"./en/governance.json\": 590,\n\t\"./en/header.json\": 591,\n\t\"./en/home.json\": 592,\n\t\"./en/lite.json\": 593,\n\t\"./en/mining.json\": 594,\n\t\"./en/mobile-lite.json\": 595,\n\t\"./en/nuls.json\": 596,\n\t\"./en/permission.json\": 597,\n\t\"./en/pro.json\": 598,\n\t\"./en/team.json\": 599,\n\t\"./en/trading-mining.json\": 600,\n\t\"./zh/Signin.json\": 601,\n\t\"./zh/bridge.json\": 602,\n\t\"./zh/broker.json\": 603,\n\t\"./zh/dip-history-two.json\": 604,\n\t\"./zh/dip-history.json\": 605,\n\t\"./zh/footer.json\": 606,\n\t\"./zh/governance.json\": 607,\n\t\"./zh/header.json\": 608,\n\t\"./zh/home.json\": 609,\n\t\"./zh/lite.json\": 610,\n\t\"./zh/mining.json\": 611,\n\t\"./zh/mobile-lite.json\": 612,\n\t\"./zh/nuls.json\": 613,\n\t\"./zh/permission.json\": 614,\n\t\"./zh/pro.json\": 615,\n\t\"./zh/team.json\": 616,\n\t\"./zh/trading-mining.json\": 617\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 566;","import withModal from \"../hoc/withModal\"\nimport './loading.less'\n\nexport default withModal(() => (<div className='loading-mask'>\n  <div className=\"snippet\" data-title=\".dot-pulse\">\n      <div className=\"stage\">\n        <div className=\"dot-pulse\"></div>\n      </div>\n    </div>\n</div>))\n","import React, { useState, useEffect } from 'react'\nimport {isBrowser,isMobile,deviceDetect} from 'react-device-detect'\nimport LoadableComponent from './utils/LoadableComponent';\nimport { inject, observer } from 'mobx-react';\nimport LoadingMask from './components/Loading/LoadingMask';\nimport { useRouteMatch } from 'react-router-dom';\nimport type from './model/Type'\nconst DesktopApp = LoadableComponent(() => import('./desktop/index'))\nconst MobileApp = LoadableComponent(() => import('./mobile/index'))\nconst getIsDesktop = () => window.screen.width > 1024;\nfunction Mask({loading}){\n  const [isOpen, setIsOpen] = useState(false)\n  useEffect(() => {\n    setIsOpen(loading.isShowMask)\n    return () => {\n    }\n  }, [loading.isShowMask])\n  return <LoadingMask modalIsOpen={isOpen} overlay={{background : 'none',top : '80px'}}/>\n}\n\nconst MaskWrapper = inject('loading')(observer(Mask))\n\nfunction App({intl,loading}) {\n  const [isDesktop, setIsDesktop] = useState(getIsDesktop())\n  const isOptionsLite = useRouteMatch('/options/lite') ? true : false\n  const isOptionsPro = useRouteMatch('/options/pro') ? true : false\n  const isOption = isOptionsLite || isOptionsPro\n  const catagory = isOption ? 'option' : 'future'\n  type.setCurrent(catagory)\n\n  // useEffect(() => {\n  //   const onResize = () => {\n  //     if(getIsDesktop() !== isDesktop){\n  //       window.location.reload()\n  //     }\n  //   }\n  //   window.addEventListener(\"resize\", onResize);\n  //   return () => window.removeEventListener(\"resize\", onResize)\n  // },[]);\n  if(isBrowser){\n    return <><MaskWrapper/><DesktopApp locale={intl.locale}></DesktopApp></>\n  } else {\n    return <><MaskWrapper/><MobileApp locale={intl.locale}><Mask loading={loading}/></MobileApp></>\n  }\n}\n\nexport default inject('intl','loading')(observer(App)) ;\n","\nimport {getUserWalletBalance ,DeriEnv,connectWallet, isUnlocked,openConfigListCache, unlock } from \"../lib/web3js/indexV2\";\nimport config from '../config.json'\nimport { formatBalance, eqInNumber, storeChain } from \"../utils/utils\";\nimport { observable, computed, action, makeAutoObservable } from \"mobx\";\nimport version from './Version'\n\nclass Wallet {\n  \n  detail = {}\n  \n  constructor(){\n    makeAutoObservable(this,{\n      detail : observable,\n      setDetail : action,\n      supportV2 : computed,\n      supportV1 : computed,\n      supportAllVersion : computed,\n      supportChain : computed,\n      supportInnocation : computed,\n      supportOpen : computed\n    })\n  }\n\n  supportWeb3 = () => !!window.ethereum\n\n  isConnected = () => !!this.detail.account;\n\n\n  async isApproved(pool,bTokenId){\n    if(this.detail.chainId && this.supportChain){\n      if(version.isOpen){\n        await openConfigListCache.update()\n      }\n      const isApproved = await isUnlocked(this.detail.chainId,pool,this.detail.account,bTokenId).catch(e => console.error('load approve error'))\n      this.detail.isApproved = isApproved;\n      this.setDetail(this.detail)\n      return isApproved;\n    }\n  }\n\n  approve = async (pool,bTokenId) => {\n    if(this.detail.chainId){\n      const approved = await unlock(this.detail.chainId,pool,this.detail.account,bTokenId);\n      return approved\n    }\n  }\n\n  connect =  async () => {\n    const res = await connectWallet();\n    return new Promise(async (resolve,reject) => {\n      if(res.success){\n        const {chainId,account} = res\n        const wallet = await this.loadWalletBalance(chainId,account);      \n        resolve(wallet)\n      } else {\n        reject(null)\n      }\n    })\n  }\n\n  switchNetwork = async (network) => {\n    if(!this.isConnected()){\n      this.connect();\n    }\n    const chainInfo = config[DeriEnv.get()]['chainInfo']\n    const chainId =`0x${(parseInt(network.id)).toString(16)}`\n    network = chainInfo[parseInt(network.id)]\n    try {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId}],\n      });\n    } catch (error) {\n      // alert('err' + JSON.stringify(error))\n      if (error.code === 4902) {\n        try {\n          await window.ethereum.request({\n            method: 'wallet_addEthereumChain',\n            params: [{chainId,...network.metamask}],\n          });\n        } catch (addError) {\n          console.error('err' ,addError)\n        }\n      }\n    }\n  }\n\n  loadWalletBalance = async (chainId,account) => {\n    if(version.isOpen){\n      await openConfigListCache.update()\n    }\n    const balance = await getUserWalletBalance(chainId,account).catch(e => console.log('wallet account is not exist'))\n    const detail = {chainId,account,balance,formatBalance : formatBalance(balance)}\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    \n    if(chainInfo[chainId]){\n      Object.assign(detail,{...chainInfo[chainId],supported : true})\n      storeChain(chainInfo[chainId])\n    }\n    this.setDetail(detail)\n    return detail;\n  }\n\n  get = () => {\n    return this.detail;\n  }\n\n  setDetail(detail){\n    this.detail = detail;\n  }\n\n  refresh(){\n    this.loadWalletBalance(this.detail.chainId,this.detail.account);\n  }\n\n  isSupportChain(isOptions){\n    const chainId = this.detail.chainId\n    const env = DeriEnv.get();\n    const {chainInfo} = config[env]\n    if(isOptions){\n      return chainInfo[chainId] && chainInfo[chainId]['supportOptions']\n    } else {\n      return this.supportChain\n    }\n  }\n\n  get supportV2() {\n    return this.detail.supportV2\n  }\n\n  get supportV1(){\n    return this.detail.supportV1;\n  }\n\n  get supportAllVersion(){\n    return this.detail.supportV1 && this.detail.supportV2\n  }\n\n  get supportChain(){\n    return this.detail.supported\n  }\n\n  get supportInnovation(){\n    return this.detail.supportInnovation\n  }\n\n  get supportOpen(){\n    return this.detail.supportOpen\n  }\n\n\n}\n\nexport default Wallet;","import { makeAutoObservable, observable, action} from \"mobx\";\nimport { equalIgnoreCase } from \"../utils/utils\";\nimport webSocket from \"./WebSocket\";\n\nclass Oracle {\n  symbol = 'BTCUSD'\n  timeType = 'min'\n  index = 0.00\n  kData = []\n  ws = null\n  paused = false;\n  listeners = {}\n  already = false\n\n  constructor(){\n    makeAutoObservable(this,{\n      index : observable,\n      kData : observable,\n      setIndex : action,\n    })\n  }\n\n  load(symbol,timeType = 'min'){\n    webSocket.subscribe('get_kline_update',{symbol,time_type : 'min'},data => {\n      if(!this.paused && equalIgnoreCase(symbol,data.symbol)) {\n        this.setIndex(data.close)\n        for(const key of Object.keys(this.listeners)){\n          if(typeof this.listeners[key] === 'function'){\n            this.listeners[key](data)\n          }\n        }\n      }\n    })\n    if(symbol !== this.symbol){\n      this.unsubscribeBars(this.symbol)\n    }\n    this.setSymbol(symbol)\n    this.setTimeType(timeType);\n    this.already = true\n  }\n\n  addListener(id,listener){\n    if(!this.listeners[id]) {\n      this.listeners[id] = listener\n    }    \n  }\n\n  unsubscribeBars(symbol){\n    webSocket.unsubscribe('un_get_kline',{symbol : symbol,time_type : 'min'});\n  }\n\n\n  resume(){\n    this.setPause(false)\n  }\n\n  pause(){\n    this.setPause(true)\n  }\n\n  clean(){\n    this.unsubscribeBars(this.symbol);\n  }\n\n  setIndex(index){\n    if(!this.paused) {\n      this.index = index;\n    }\n  }\n\n  setSymbol(symbol){\n    this.symbol = symbol\n  }\n\n  setTimeType(timeType){\n    this.timeType = timeType;\n  }\n  setPause(paused){\n    this.paused = paused\n  }\n}\n\nexport default Oracle","import { getPositionInfo ,bg,getPositionInfos} from \"../lib/web3js/indexV2\"\nimport { eqInNumber } from '../utils/utils';\nimport type from \"./Type\";\n\nexport default class Position {\n\n   callback = () => {}\n   callbackALL = ()=>{}\n   wallet = null;\n   spec = null\n   counter = 0\n \n   mockPositionInfo = {\n    averageEntryPrice: \"\",\n    liquidationPrice: \"\",\n    margin: \"20000\",\n    marginHeld: \"10068.26538\",\n    marginHeldBySymbol : \"293.16152\",\n    unrealizedPnl: \"3.1311\",\n    volume: \"800\",\n    premiumFundingAccrued:'',\n    deltaFundingAccrued:'',\n    strikePrice:0,\n    timePrice:0,\n    volatility:0,\n    isCall:false,\n   }\n\n   async load(wallet,spec,callback){\n     this.wallet= wallet; \n     this.spec = spec\n     if(callback){\n      this.callback = callback\n     }\n     if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      const position = await getPositionInfo(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      if(position){\n        if(this.callback){\n          this.callback(position)\n        }\n      }\n      return position;\n     }\n   }\n\n   async loadAll(wallet,spec,callback){\n    this.wallet= wallet; \n    this.spec = spec\n    if(callback){\n     this.callbackALL = callback\n    }\n    if(wallet && wallet.isConnected() && wallet.isSupportChain(type.isOption) && spec && spec.pool){\n      let res  = await getPositionInfos(wallet.detail.chainId,spec.pool,wallet.detail.account,spec.symbolId)\n      let positions = [] \n      if(res.length) {\n        positions = res.map(item => {\n          item.balanceContract = bg(item.margin).plus(item.unrealizedPnl).toString()\n          item.direction = (+item.volume) > 0 ? 'LONG' : (!item.volume || eqInNumber(item.volume, 0) || !item.volume ? '--' : 'SHORT')\n          return item\n        })\n      }\n      if(positions){\n        if(this.callbackALL){\n          this.callbackALL(positions)\n        }\n      }\n      return positions;\n    }\n   }\n\n   startAll(){\n    this.paused = false;\n    if(!this.started){\n      this.runInAction(async () => await this.loadAll(this.wallet,this.spec))\n    }\n    this.started = true\n  }\n\n   start(){   \n    this.paused = false;\n    if(!this.startedAll){\n      this.runInAction(async () => await this.load(this.wallet,this.spec))\n    }\n    this.startedAll = true\n   }\n\n   runInAction(action){\n    this.timer = window.setTimeout(async () => {\n      if(!this.paused){\n        const position = await action();\n        if(position) {\n          this.runInAction(action);\n        }\n      }\n    },3000)\n   }\n\n   pause(){\n    this.paused = true\n   }\n\n   resume(){\n    this.clean();\n    this.start(this.callback)\n   }\n\n   clean(){\n     this.started = false;\n     this.startedAll = false;\n     this.paused = false;\n     this.timer = null;\n   }\n \n}","import { getSpecification } from \"../lib/web3js/indexV2\";\nimport { makeObservable, observable, action, computed } from \"mobx\";\nimport Intl from \"./Intl\";\nimport version from \"./Version\";\nimport type from \"./Type\";\n\nexport default class Contract {\n  info = {\n    bTokenSymbol:[\"BUSD\"],\n    symbol:'BTCUSD',\n    multiplier:'0.0001',\n    fundingRateCoefficient:'0.0000025',\n    deltaFundingCoefficient:'0.2',\n    minInitialMarginRatio:0.1,\n    initialMarginRatio:0.1,\n    minMaintenanceMarginRatio:0.05,\n    maintenanceMarginRatio:0.05,\n    feeRatio:0.0005,\n    underlier :'',\n    strike:0,\n    optionType:'C',\n    bTokenSymbolDisplay : ['BUSD']\n  }\n  // constructor(){\n  //   makeObservable(this,{\n  //     info : observable,\n  //     setInfo : action,\n  //     bTokenSymbolDisplay : computed\n  //   })\n  // }\n\n  async load(wallet,config){\n    if(wallet && wallet.supportChain && config && config.pool !== this.info.pool){\n      const spec = await getSpecification(wallet.detail.chainId,config.pool,config.symbolId);\n      spec.bTokenSymbol = this.bTokenSymbolDisplay(spec)\n      if(type.isOption){\n        spec.underlier = this.getUnderlierStrike(spec).underlier\n        spec.strike = this.getUnderlierStrike(spec).strike\n        spec.optionType = this.getUnderlierStrike(spec).optionType\n      }\n      this.setInfo(spec)\n    }\n    return this.info\n  }\n\n  setInfo(info){\n    this.info = info\n  }\n\n  getUnderlierStrike(spec){\n    let underlier = spec.symbol.split('-')[0]\n    let strike = spec.symbol.split('-')[1]\n    let optionType = spec.symbol.split('-')[2]\n    return {\n      underlier:underlier,\n      strike:strike,\n      optionType:optionType\n    }\n  }\n\n  bTokenSymbolDisplay(spec){\n    if(version.isV1 || version.isV2Lite || type.isOption || version.isOpen){\n      return [spec.bTokenSymbol];\n    }\n    return spec.bTokenSymbol;\n  }\n}","import { getTradeHistory } from \"../lib/web3js/indexV2\";\n\n\nexport default class History {\n\n   async load(wallet,config,isOptions){\n      if(wallet && wallet.isSupportChain(isOptions) && wallet.detail.chainId && config && config.pool){\n         const all = await getTradeHistory(wallet.detail.chainId,config.pool,wallet.detail.account,config.symbolId); \n         return all;\n      } else {\n         return []\n      }\n   }\n}","import { observable, action, computed, makeObservable } from \"mobx\";\nimport Oracle from \"./Oracle\";\nimport Position from \"./Position\";\nimport Contract from \"./Contract\";\nimport History from './History'\nimport Config from \"./Config\";\nimport { eqInNumber, storeConfig, getConfigFromStore, restoreChain, getFormatSymbol } from \"../utils/utils\";\nimport { getFundingRate, priceCache } from \"../lib/web3js/indexV2\";\nimport { bg } from \"../lib/web3js/indexV2\";\nimport Intl from \"./Intl\";\nimport version from './Version'\nimport type from './Type'\nimport Type from \"./Type\";\n\n/**\n * 交易模型\n * 关联对象\n * 1. chain\n * 2. Oracle\n * 3. position\n * 4. contract\n * 5. history\n * 计算\n * 1. dynamic balance\n * 2. available blance\n * 响应事件\n * 1. chain change\n * 2. chain’s symbol changed\n * 3. index update\n * 4. volum change\n * 5. margin change\n * 输出\n * 1. dynamic balance\n * 2. margin\n * 3. available balance\n * 4. volume\n * 5. specs\n * 6. spec\n * 7. position\n * 8. contract\n * 9. fundingRate\n */\n\nexport default class Trading {\n  version = null;\n  wallet = null;\n  type = null;\n  configs = [] \n  config = null;\n  index = ''\n  volume = ''\n  paused = false\n  slideIncrementMargin = 0\n  position = {}\n  positions = []\n  contract = {}\n  fundingRate = {}\n  history = []\n  userSelectedDirection = 'long'\n  supportChain = true\n  optionsConfigs = {}\n\n  constructor(){\n    makeObservable(this,{\n      index : observable,\n      volume : observable,\n      slideIncrementMargin : observable,\n      fundingRate : observable,\n      position : observable,\n      positions : observable,\n      history : observable,\n      contract : observable,\n      userSelectedDirection : observable,\n      supportChain : observable,\n      setWallet :action,\n      setConfigs : action,\n      setOptionConfigs : action,\n      setConfig : action,\n      setIndex : action,\n      setContract : action,\n      setPosition : action,\n      setPositions : action,\n      setVolume : action,\n      setUserSelectedDirection : action,\n      // setSupportChain : action,\n      setFundingRate : action,\n      setHistory : action,\n      setSlideMargin : action,\n      amount : computed,\n      fundingRateTip : computed,\n      optionFundingRateTip : computed,\n      initialMarginRatioTip : computed,\n      maintenanceMarginRatioTip : computed,\n      TransactionFeeTip : computed,\n      multiplierTip : computed,\n      direction : computed,\n      volumeDisplay : computed,\n      isNegative : computed,\n      isPositive : computed\n    })\n    this.configInfo = new Config();\n    this.oracle = new Oracle();\n    this.positionInfo = new Position()\n    this.contractInfo = new Contract();\n    this.historyInfo = new History()\n  }\n\n  /**\n   * 初始化\n   * wallet and version changed will init\n   */\n  async init(wallet,finishedCallback){  \n    const isOption = Type.isOption\n    const all = await this.configInfo.load(version,isOption);\n    //如果连上钱包，有可能当前链不支持\n    if(wallet.isConnected()){\n      this.setWallet(wallet);\n      this.setConfigs(all.filter(c => eqInNumber(wallet.detail.chainId,c.chainId)))\n      let defaultConfig = this.getDefaultConfig(this.configs,wallet);\n      //如果还是为空，则默认用所有config的第一条\n      if(!defaultConfig){\n        defaultConfig = all.length > 0 ? all[0] : {}\n      }\n      this.setConfig(defaultConfig);\n      //如果没有钱包或者链接的链不一致，设置默认config，BTCUSD\n    } else if(!wallet.isConnected() || !wallet.supportWeb3()){\n      //没有钱包插件\n      version.setCurrent('v2')\n      const all = await this.configInfo.load(version,isOption);\n      const defaultConfig = all.find(c => c.symbol === 'BTCUSD')\n      this.setConfig(defaultConfig)\n    }\n    this.loadByConfig(this.wallet,this.config,true,finishedCallback,isOption)\n    this.setVolume('')\n  }\n\n  async onSymbolChange(spec,finishedCallback,isOption){\n    const config = this.configs.find(config => config.pool === spec.pool && config.symbolId === spec.symbolId)\n    //v1 只需要比较池子地址，v2 需要比较symbolId\n    const changed = version.isV1 ? spec.pool !== this.config.pool : spec.symbolId !== this.config.symbolId\n    this.onChange(config,changed,finishedCallback,isOption)\n  }\n\n  async onChange(config,changed,finishedCallback,isOption){\n    if(config){\n      this.pause();\n      this.setConfig(config)\n      this.loadByConfig(this.wallet,config,changed,finishedCallback,isOption);  \n      if(changed){\n        this.store(config)\n      }    \n      this.resume()\n      this.setVolume('')\n    } else{\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  async loadByConfig(wallet,config,symbolChanged,finishedCallback,isOption){\n     //切换指数\n    if(symbolChanged && config){\n      this.oracle.addListener('trading',data => {\n        this.setIndex(data.close)\n      })\n    }\n    if(wallet && wallet.isConnected && config){\n      Promise.all([\n        this.positionInfo.load(wallet,config,(position) => {\n          this.setPosition(position)\n          this.syncFundingRate(wallet,config,isOption)\n        }),\n        this.contractInfo.load(wallet,config,isOption),\n        this.loadFundingRate(wallet,config,isOption),\n        this.historyInfo.load(wallet,config,isOption),\n        this.positionInfo.loadAll(wallet,config,positions => this.setPositions(positions)),\n      ]).then(results => {\n        if(results.length === 5){\n          results[0] && this.setIndex(results[0].price) && this.setPosition(results[0]);\n          results[1] && this.setContract(results[1]);\n          results[2] && this.setFundingRate(results[2]);\n          results[3] && this.setHistory(results[3]);\n          results[4] && this.setPositions(results[4]);\n          // this.refreshCache();\n        } \n      }).finally(e => {\n        finishedCallback && finishedCallback()\n        this.oracle.load(getFormatSymbol(config.symbol))\n        this.positionInfo.start()\n        this.positionInfo.startAll();\n      })\n    } else {\n      finishedCallback && finishedCallback()\n    }\n  }\n\n  refreshCache(){\n    const {pool} = this.config;\n    const symbol = type.isOption ? this.config.symbol.split('-')[0] : this.config.symbol\n    priceCache.clear();\n    priceCache.update(pool,symbol)\n  }\n\n\n  //优先使用session storage 的，如果缓存跟用户当前链一直，则命中缓存，否则取当前配置第一条\n  getDefaultConfig(configs = [],wallet){\n    let defaultConfig = null;\n    if(configs.length > 0){    \n      const fromStore = this.getFromStore();\n      if(fromStore && eqInNumber(wallet.detail.chainId,fromStore.chainId)){\n        defaultConfig = fromStore;\n      }\n      if(defaultConfig){\n        //虽然从缓存获得config ，需要判断池子地址是否一致，否则用可用config的第一条\n        const pos = configs.findIndex(c => c.pool === defaultConfig.pool);\n        if(pos === -1){\n          defaultConfig = configs[0];\n        }\n      } else {\n        defaultConfig = configs[0]\n      }   \n    }\n    return defaultConfig;    \n  }\n \n  //存起来\n  store(config){\n    storeConfig(version.current,config)\n  }\n\n  getFromStore(){\n    return getConfigFromStore(version.current)\n  }\n\n  async syncFundingRate(){\n    //资金费率和仓位同步\n    const fundingRate = await this.loadFundingRate(this.wallet,this.config)   \n    if(fundingRate){\n      this.setFundingRate(fundingRate)      \n    }\n  }\n\n  async refresh(){\n    this.pause()\n    this.positionInfo.load(this.wallet,this.config, position  => {       \n      this.setPosition(position);\n      this.syncFundingRate();\n    });\n    type.isOption && this.positionInfo.loadAll(this.wallet,this.config,positions => this.setPositions(positions))\n    this.syncFundingRate();\n    this.wallet.loadWalletBalance(this.wallet.detail.chainId,this.wallet.detail.account)\n    const history = await this.historyInfo.load(this.wallet,this.config)\n    if(history){\n      this.setHistory(history)\n    }\n    this.positionInfo.start();\n    this.positionInfo.startAll();\n    this.setVolume('')\n    this.resume();\n  }\n\n  /**\n   * 暂停实时读取index和定时读取position\n   */\n  pause(){\n    this.setPaused(true)\n    this.oracle.pause();\n    this.positionInfo.pause();\n  }\n\n  /**\n   * 恢复读取\n   */\n  resume(){\n    this.setPaused(false)\n    this.oracle.resume();\n    this.positionInfo.resume();\n  }\n\n  setWallet(wallet){\n    this.wallet = wallet;\n  }\n\n  setConfigs(configs){\n    if(type.isOption){\n      this.setOptionConfigs(configs)\n    } \n    this.configs = configs\n  }\n\n  setOptionConfigs(configs){\n    this.optionsConfigs = this.groupConfigBySymbol(configs)\n  }\n\n  groupConfigBySymbol(configs = []){\n    return configs.reduce((total,config) => {\n      const symbol = config.symbol.split('-')[0]\n      if(!total[symbol]){\n        total[symbol] = []\n      }\n      total[symbol].push(config)\n      return total;\n    },[])\n  }\n\n  setConfig(config){\n    this.config = config\n  }\n\n  setIndex(index){\n    this.index = index;\n  }\n\n  setPosition(position){\n    if(position){\n      this.position = position\n    }\n  }\n\n  setPositions(positions){\n    if(positions){\n      this.positions = positions\n    }\n  }\n\n  setContract(contract){\n    this.contract = contract\n  }\n\n  setHistory(history){\n    this.history = history\n  }\n\n  setFundingRate(fundingRate){\n    this.fundingRate = fundingRate;\n  }\n\n  setVolume(volume){\n    this.volume = volume;\n  }\n\n  setPaused(paused){\n    this.paused = paused\n  }\n\n  setUserSelectedDirection(direction){\n    this.userSelectedDirection = direction\n  }\n\n  setSlideMargin(slideIncrementMargin){\n    if(slideIncrementMargin !== ''){\n      this.slideIncrementMargin =  slideIncrementMargin\n      const position = this.position;\n      const price = position.price || this.index\n      const increment = slideIncrementMargin - position.marginHeld\n      let MarginRatio = type.isOption ? this.contract.initialMarginRatio : this.contract.minInitialMarginRatio;\n      let volume =  increment / (price * this.contract.multiplier * MarginRatio);\n      // if(type.isOption){\n        volume = +volume * +this.contract.multiplier\n        let index = this.contract.multiplier.indexOf('.')\n        let num = this.contract.multiplier.slice(index);\n        let length = num.length \n        let value = volume.toString()\n        if(value.indexOf(\".\") !== '-1'){\n          value = value.substring(0,value.indexOf(\".\") + length)\n        }\n        this.setVolume(value)\n      // }else{\n      //   this.setVolume(volume.toFixed(0))\n      // }\n    }\n  }\n\n  clean(){\n    this.oracle.clean();\n    this.positionInfo.clean();\n    this.version = null;\n    this.configs = [] \n    this.config = null;\n    this.index = ''\n    this.volume = ''\n    this.fundingRate = {}\n    this.position = {}\n    this.positions = []\n    this.contract = {}\n    this.history = []\n    this.userSelectedDirection = 'long'\n    this.optionsConfigs = {}\n  }\n\n  get volumeDisplay(){\n    if((type.isFuture && Math.abs(this.volume) === 0 && isNaN(this.volume) )|| this.volume === '' || this.volume === '-' || this.volume === 'e') {\n      return '';\n    } else {\n      return Math.abs(this.volume)\n    }\n  }\n  \n  get amount(){\n    const position = this.position\n    const contract = this.contract;\n    let initVolume = this.volume === '' || isNaN(this.volume) ? 0 : Math.abs(this.volume)\n    // let optionVolume = type.isOption ? (+initVolume / +this.contract.multiplier):initVolume;\n    let optionVolume = (+initVolume / +this.contract.multiplier);\n    const volume = optionVolume\n    let {margin, marginHeldBySymbol:currentSymbolMarginHeld ,marginHeld,unrealizedPnl} = position\n    const price = position.price || this.index\n    //v2\n    let otherMarginHeld = bg(marginHeld).minus(currentSymbolMarginHeld)\n    otherMarginHeld = otherMarginHeld.isNaN() ? bg(0) : otherMarginHeld;\n    const contractValue = volume * price * contract.multiplier;\n    const incrementMarginHeld =  type.isOption ? contractValue * contract.initialMarginRatio : contractValue * contract.minInitialMarginRatio\n    let totalMarginHeld = bg(marginHeld) ;\n\n    //如果当前仓位为正仓用户做空或者当前仓位为负仓用户做多，总仓位相减,取绝对值\n    if((this.isPositive && this.userSelectedDirection === 'short') || (this.isNegative && this.userSelectedDirection === 'long')){\n      totalMarginHeld = totalMarginHeld.minus(incrementMarginHeld);\n      if(totalMarginHeld.lt(otherMarginHeld)){\n        totalMarginHeld =  otherMarginHeld.plus(otherMarginHeld.minus(totalMarginHeld).abs())        \n      } \n      currentSymbolMarginHeld = bg(currentSymbolMarginHeld).minus(incrementMarginHeld).abs().toFixed(2)\n    } else {\n      totalMarginHeld = bg(marginHeld).plus(incrementMarginHeld)\n      if(currentSymbolMarginHeld){\n        currentSymbolMarginHeld = bg(currentSymbolMarginHeld).plus(incrementMarginHeld).toFixed(2);\n      }\n    }\n\n    const dynBalance = margin && bg(margin).plus(unrealizedPnl).toFixed(2);    \n    //总保证金和当前symbol保证金不能超过余额\n    totalMarginHeld = totalMarginHeld.gt(dynBalance) ? dynBalance : totalMarginHeld.toFixed(2)\n    if(currentSymbolMarginHeld){\n      currentSymbolMarginHeld = (+currentSymbolMarginHeld) > (+dynBalance) ? dynBalance : (+currentSymbolMarginHeld).toFixed(2);\n    }\n    let available = bg(dynBalance).minus(totalMarginHeld).toFixed(2)\n    const exchanged = bg(volume).multipliedBy(contract.multiplier).toFixed(4)\n    const totalVolume = this.userSelectedDirection === 'short' ? (-this.volumeDisplay + (+position.volume)) : ((+this.volumeDisplay) +  (+position.volume))    \n    const totalContractValue = (+totalVolume) * price \n    const curContractValue = (+this.volumeDisplay) * price\n    const leverage = Math.abs(curContractValue / (+dynBalance)).toFixed(1);\n    const afterLeverage = Math.abs((+totalContractValue) / (+dynBalance)).toFixed(1); \n    available = (+available) < 0 ? 0 : available\n    return {\n      volume : this.volume,\n      dynBalance : dynBalance,\n      margin : totalMarginHeld,\n      available : available,\n      exchanged : exchanged,\n      currentSymbolMarginHeld : currentSymbolMarginHeld,\n      leverage : leverage,\n      afterLeverage : afterLeverage\n    }\n  }\n\n  get direction(){    \n    // 正仓\n    if(this.margin !== ''){\n      if((+this.position.volume) > 0) {\n        if(Math.abs(this.volume) > Math.abs(this.position.volume)) {\n          return 'long'\n        } else {\n          return 'short'\n        }\n      } else if((+this.position.volume) < 0){\n        //负仓\n        if((+this.volume) > Math.abs(+this.position.volume)){\n          return 'short'\n        } else {\n          return 'long'\n        }\n      }\n    }\n    return 0\n  }\n\n  //正仓\n  get isPositive(){\n    return bg(this.position.volume).gt(0);\n  }\n\n  //负仓\n  get isNegative(){\n    return bg(this.position.volume).isNegative();\n  }\n\n  //资金费率\n  async loadFundingRate(wallet,config,isOption){\n    if(config){\n      const chainId = wallet && wallet.isConnected() && wallet.isSupportChain(isOption) ? wallet.detail.chainId : config.chainId\n      if(config){    \n        const res = await getFundingRate(chainId,config.pool,config.symbolId).catch(e => console.error('getFundingRate was error,maybe network is wrong'))\n        return res;\n      }\n    }\n  }\n\n  get fundingRateTip(){    \n    if(version && version.isV2){\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n ${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol}`        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} (${this.fundingRate.fundingRatePerBlock} * ${Intl.get('lite','index-price-camelize')} * ${this.contract.multiplier} ) ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')}`        \n        }\n        \n      }\n    } else {\n      if(this.fundingRate && this.fundingRate.fundingRatePerBlock && this.config){\n        if(Intl.locale === 'zh'){\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','per-block')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} `        \n        } else {\n          return `${Intl.get('lite','funding-rate-per-block')} = ${this.fundingRate.fundingRatePerBlock}` +\n        `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.fundingRatePerBlock} ${this.config.bTokenSymbol} ${Intl.get('lite','per-block')})`        \n        }        \n      }\n    }\n    return ''\n  }\n\n  get optionFundingRateTip(){\n    if(this.fundingRate && this.fundingRate.premiumFundingPerSecond && this.config){\n      if(Intl.locale === 'zh'){\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n ${Intl.get('lite','per-second')} ${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} `        \n      } else {\n        return `${Intl.get('lite','funding-rate-per-second')} = ${this.fundingRate.premiumFundingPerSecond}` +\n      `\\n${Intl.get('lite','1-long-contract-pays-1-short-contract')} ${this.fundingRate.premiumFundingPerSecond} ${this.config.bTokenSymbol} ${Intl.get('lite','per-second')}`        \n      }\n    }\n    return ''\n  }\n\n  get initialMarginRatioTip(){\n    if(this.contract && this.contract.initialMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-initial')} = ${this.contract.initialMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-initial')} = ${Intl.get('lite','in-max')}(${this.contract.initialMarginRatioOrigin}${Intl.get('lite','otm-ratio-initial')} ${this.contract.initialMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n  get maintenanceMarginRatioTip(){\n    if(this.contract && this.contract.maintenanceMarginRatioOrigin){\n      return `${Intl.get('lite','in-the-money-maintenance')} = ${this.contract.maintenanceMarginRatioOrigin}` +\n      `\\n${Intl.get('lite','out-of-money-maintenance')} = ${Intl.get('lite','in-max')}(${this.contract.maintenanceMarginRatioOrigin}${Intl.get('lite','otm-ratio-maintenance')} ${this.contract.maintenanceMarginRatioOrigin / 10})` +\n      `\\n\\n${Intl.get('lite','otm-ratio-max')}`\n    }\n    return ''\n  }\n\n  get multiplierTip(){\n    if(this.contract && this.config){\n      return `${Intl.get('lite','the-notional-value-of')} ${this.contract.multiplier}${this.config.unit}`\n    }\n    return ''\n  }\n\n  get TransactionFeeTip(){\n    if(this.contract && (this.contract.feeRatioITM && this.contract.feeRatioOTM)){\n        return `${Intl.get('lite','transaction-fee-tip-in-the-money')} ${this.contract.underlier} ${Intl.get('lite','price')}  * ${bg(this.contract.feeRatioITM).times(bg(100)).toString()} %` +\n        `\\n ${Intl.get('lite','transaction-fee-tip-out-of-money')} * ${bg(this.contract.feeRatioOTM).times(bg(100)).toString()} %`\n    }\n    return ''\n  }\n\n}","import { makeObservable, observable, action, computed } from \"mobx\";\n\nclass Loading {\n  isLoading = false\n  constructor(){\n    makeObservable(this,{\n      isLoading : observable,\n      setIsLoading : action,\n      loading : action,\n      isShowMask : computed\n    })\n  }\n\n  setIsLoading(isLoading){\n    this.isLoading = isLoading\n  }\n\n  loading(){\n    this.setIsLoading(true)\n  }\n\n  loaded(){\n    this.setIsLoading(false)\n  }\n\n  get isShowMask(){\n    return this.isLoading === true;\n  }\n\n  \n}\n\nexport default new Loading();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom'\nimport App from './App';\nimport './assets/deri.less';\nimport { Provider } from 'mobx-react';\nimport Wallet from './model/Wallet';\nimport Trading from './model/Trading';\nimport { DeriEnv } from './lib/web3js/indexV2';\nimport version from './model/Version';\nimport intl from './model/Intl';\nimport loading from './model/Loading';\nimport type from './model/Type';\n\nconst wallet = new Wallet();\nconst trading = new Trading()\n\nif(process.env.NODE_ENV === 'production') {\n  DeriEnv.set('prod')\n}\nDeriEnv.set('prod')\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider wallet={wallet} type={type}  trading={trading} version={version} intl={intl} loading={loading}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}