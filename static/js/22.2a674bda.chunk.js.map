{"version":3,"sources":["utils/DeriNumberFormat.js","components/UnderlineText/UnderlineText.js","components/Input/Input.js","pages/Bridge/Spinner.js","pages/Bridge/img/stage-one.svg","pages/Bridge/img/stage-two.svg","pages/Bridge/img/stage-three.svg","pages/Bridge/img/succeed.svg","pages/Bridge/img/pending.svg","pages/Bridge/Operate.js","pages/Bridge/img/arrow-left.svg","pages/Bridge/img/disabled-down.svg","pages/Bridge/Bridge.js"],"names":["Wrapper","styled","NumberFormat","props","width","LoadLine","div","test","height","DeriNumberFormat","useState","className","renderablity","setRenderablity","firstTime","setFirstTime","isValidate","allowZero","value","undefined","isNaN","Math","abs","useEffect","closeShowLoadingEffectAfterLoaded","wallet","defaultValue","others","bg","toFixed","decimalScale","countDecimal","toPlainString","displayType","fixedDecimalScale","thousandSeparator","timeout","window","setTimeout","clearTimeout","suffix","block","isWin","UnderlineText","text","id","String","Date","getTime","random","tip","multiline","html","element","children","tiggerEvent","isWindows","data-for","data-tip","ReactDOMServer","renderToString","data-event","isMobile","data-html","padding","place","overridePosition","position","currentEvent","currentTarget","refNode","desiredPlace","effect","offset","rect","getBoundingClientRect","tooltipNodeRect","left","x","top","y","document","documentElement","clientWidth","clientHeight","borderRadius","inputWidth","unitPadding","Input","unit","unitTip","max","step","onChange","styles","focus","placeholder","minTradeVolume","decimal","readOnly","disabled","onBlur","onFocus","inputRef","useRef","current","setCustomValidity","style","type","ref","e","regStr","reg","RegExp","target","gt","integerValue","filter","substring","indexOf","Spinner","class","Operate","lang","amount","balance","initialize","isClaim","setSending","sending","setAmount","setIsClaim","isWalletConnected","config","useConfig","alert","useAlert","history","useHistory","isApprove","setIsApprove","isValid","setIsValid","bridgeState","setBridgeState","claimState","setClaimState","isClickClaim","setIsClickClaim","Button","PRIMARY","fontSize","label","actionElement","setActionElement","connect","valid","a","isConnected","apiProxy","request","detail","account","res","switchNetwork","toChainId","send","error","isFromConnected","isNetwork","from_chainId","netWork","stageOne","chainId","to_chainId","includeResponse","success","stageTwo","setInterval","claim","isToConnected","reset","push","approve","loadApprove","result","stageThree","onClick","alt","src","succeed","toLowerCase","from_network","to_network","obj","img","ETH","BSC","HECO","inject","observer","setBalance","isdev","DeriEnv","get","netWork_text","fromList","setFromList","toList","setToList","setInitialize","dropdownList_from","setDropdownList_from","dropdownList_to","setDropdownList_to","From_img","setFrom_img","To_img","setTo_img","selectListClassFrom","classNames","selectListClassTo","setIsWalletConnected","getValid","fromChainId","toString","getBalance","to_arr","from_one","p","from_two","from_three","disabledDown","up","down","map","item","index","Init","JSON","parse","stringify","select_from","arrow","select_to","deriLogo","rel","href"],"mappings":"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","file":"static/js/22.2a674bda.chunk.js","sourcesContent":["import React,{useState,useEffect,useRef} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport NumberFormat from 'react-number-format'\r\nimport { inject, observer } from 'mobx-react';\r\nimport styled from 'styled-components';\r\nimport { toPlainString,countDecimal } from './utils';\r\nimport { bg } from '../lib/web3js';\r\nconst Wrapper = styled(NumberFormat)`\r\n  width : ${props => props.width}px;\r\n`\r\nconst LoadLine = styled.div`\r\n  width : ${props => /px$/.test(props.width) ? props.width : `${props.width}px`};\r\n  height : ${props => /px$/.test(props.height) ? props.height : `${props.height}px`};\r\n`\r\nfunction DeriNumberFormat(props){\r\n  const [renderablity, setRenderablity] = useState(<span className='loading-line'></span>);\r\n  const [firstTime, setFirstTime] = useState(true)\r\n  const isValidate = () => {\r\n    const {allowZero} = props \r\n    return (typeof props.value !== 'object' && props.value !== undefined && props.value !== ''  && !isNaN(props.value) && props.value !== 'NaN') \r\n          || ((Math.abs(props.value)) === 0 && allowZero === true )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const {allowZero,wallet,closeShowLoadingEffectAfterLoaded,defaultValue = '--',...others} = props \r\n\r\n    if(isValidate()) {\r\n      //如果精度截取之后为0，则动态获取精度，取到不为0为止\r\n      if(!allowZero && others.value && /\\d+\\.0*[1-9]+/.test(others.value)  && (+bg(others.value).toFixed((+others.decimalScale || 2))) === 0){\r\n        others.decimalScale = countDecimal(Math.abs(others.value)) + 2\r\n      }\r\n      others.value = toPlainString(others.value)\r\n      if(others.value && /\\d+.9{6}/.test(others.value)){\r\n        others.value = (+others.value).toFixed(5)\r\n      }\r\n      setRenderablity(<Wrapper {...others}  displayType = 'text'  fixedDecimalScale={true} thousandSeparator={true}/>)\r\n    } else if(firstTime){\r\n      const {width,height} = props\r\n      setRenderablity(<LoadLine className='loading-line' width={width} height={height}></LoadLine>)\r\n      if(closeShowLoadingEffectAfterLoaded){\r\n        setFirstTime(false)\r\n      }\r\n    } \r\n    const timeout = window.setTimeout(() => {\r\n      // && wallet && (!wallet.isConnected() || !wallet.supportChain)\r\n      if(!isValidate()){\r\n        setRenderablity(defaultValue)\r\n      }\r\n    },60000)\r\n    return () => {\r\n      clearTimeout(timeout)\r\n    };\r\n  }, [props.value,props.decimalScale,props.suffix]);\r\n\r\n  return renderablity;\r\n}\r\nexport default DeriNumberFormat\r\n// export default inject('wallet')(observer(DeriNumberFormat))","/* eslint-disable react/no-danger-with-children */\r\nimport styled from 'styled-components';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport Tooltip from '../Tooltip/Tooltip';\r\nimport {isMobile} from '../../utils/utils';\r\nimport {isWindows} from 'react-device-detect'\r\n\r\nconst Wrapper = styled.div`\r\n  display:${props => props.block};\r\n  .text {\r\n    border-bottom : 1px dashed #93A1B8;\r\n    width : max-content;\r\n    cursor : pointer;\r\n    display:${props => props.block}\r\n  }\r\n  \r\n  .__react_component_tooltip.tooltip.show {\r\n    font-weight : ${props => props.isWin ? 400 : 600} \r\n  }\r\n`\r\n\r\n\r\nexport default function UnderlineText({ text, id = String(new Date().getTime()) + Math.random(), tip, multiline, html, className, element = '', block = 'block', width = 'auto', children, tiggerEvent }) {\r\n  const calculatePosition = (position, currentEvent, currentTarget, refNode, place, desiredPlace, effect, offset) => {\r\n    const rect = currentTarget.getBoundingClientRect();\r\n    const tooltipNodeRect = refNode.getBoundingClientRect();\r\n    //位置被遮盖\r\n    let { x: left, y: top, height, width } = rect\r\n    const { left: originLeft, top: originTop } = position\r\n    // top = top + height\r\n    if (left + tooltipNodeRect.width / 2 > document.documentElement.clientWidth) {\r\n      left = left - Math.abs(width - tooltipNodeRect.width);\r\n    } else if (left - (tooltipNodeRect.width - width) / 2 < 0) {\r\n      left = left - width\r\n    } else {\r\n      left = left - (tooltipNodeRect.width - width) / 2\r\n    }\r\n    if (top + height + tooltipNodeRect.height >= document.documentElement.clientHeight) {\r\n      top = top + height - tooltipNodeRect.height\r\n    } else {\r\n      top = top + height\r\n    }\r\n    if (left < 0) {\r\n      left = 0\r\n    }\r\n    if (top < 0) {\r\n      top = 0\r\n    }\r\n    return { top: top, left: left }\r\n  }\r\n\r\n  return (\r\n    <Wrapper className={className} block={block} isWin={isWindows}>\r\n      <div className='text' data-for={id} data-tip={ html ? ReactDOMServer.renderToString(element) : tip} data-event={isMobile() ? 'click' : tiggerEvent} data-html={html} >\r\n        {text || children}\r\n      </div>\r\n      {tip && <Tooltip id={id} width={width} padding='12' place='bottom' overridePosition={calculatePosition} html={html} borderRadius={8} multiline={multiline}>\r\n      </Tooltip>}\r\n    </Wrapper>\r\n  )\r\n}","import { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { bg } from '../../lib/web3js';\r\nimport UnderlineText from '../UnderlineText/UnderlineText';\r\n\r\nconst Wrapper = styled.div`\r\ndisplay : flex;\r\nfont-size : 14px;\r\nalign-items : center;\r\nbackground: rgba(85, 119, 253, 0.1);\r\nborder-radius: 4px;\r\njustify-content: space-between;\r\ninput {\r\n  background: transparent;\r\n  border-radius: 4px;\r\n  // min-width: 240px;\r\n  border: 0;\r\n  width : ${props => props.inputWidth};\r\n  height: 56px;\r\n  color : #E0ECFF;\r\n  font-size : 18px;\r\n  padding-left: 16px;\r\n}\r\ninput:focus {\r\n  outline: none;\r\n}\r\n.unit {\r\n  margin-right: ${props => props.unitPadding};\r\n}\r\n`\r\nexport default function Input({value,unit,unitTip,max,step,onChange,styles = {},focus,placeholder='',unitPadding = '24px',minTradeVolume,decimal = 2,readOnly,inputWidth = '50%',className,disabled = false,onBlur,onFocus}){\r\n  const inputRef = useRef(null);\r\n  const change = e => {\r\n    const regStr = `\\\\d+\\\\.\\\\d{0,${decimal}}$`\r\n    const reg = new RegExp(regStr)\r\n    const {value} = e.target\r\n    if(max && bg(value).gt(max)){    \r\n      onChange && onChange(max)\r\n    } else if(value < 0 || isNaN(value)) {\r\n      onChange && onChange('')\r\n    } else if(value){\r\n      if(minTradeVolume >= 1) {\r\n        if(value / minTradeVolume >=1) {\r\n          onChange && onChange(bg(value).div(minTradeVolume).integerValue() * minTradeVolume) \r\n        } else {\r\n          const validValue = value * minTradeVolume\r\n          onChange && onChange(validValue) \r\n        }\r\n      } else if(/\\d+\\./.test(value) && !reg.test(value)){\r\n        const filter = value.substring(0,value.indexOf('.') + 1 + decimal)\r\n        onChange && onChange(filter)\r\n      } else {\r\n        onChange && onChange(value)\r\n      }\r\n    } else {\r\n      onChange && onChange(value)\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    inputRef.current.setCustomValidity('')\r\n    if(inputRef.current && focus){\r\n      inputRef.current.focus();\r\n    }\r\n  },[focus])\r\n\r\n\r\n  return (\r\n    <Wrapper  unitPadding={unitPadding} inputWidth={inputWidth} className={className} style={{...styles}}>\r\n      <input placeholder={placeholder} type='number'  onBlur={onBlur} onFocus={onFocus} disabled = {disabled} value={value} step = {step} ref={inputRef} onChange={change} readOnly={readOnly}/>\r\n      <div className='unit'>{unitTip ? <UnderlineText tip={unitTip} text={unit}/> : unit}</div>\r\n    </Wrapper>    \r\n  )\r\n}","import './spinner.less'\r\nexport default function Spinner() {\r\n  return (\r\n    <div class=\"sleepContentView\">\r\n      <div class=\"circle\">\r\n      </div>\r\n    </div>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/stage-one.7a1f5b00.svg\";","export default __webpack_public_path__ + \"static/media/stage-two.768445a6.svg\";","export default __webpack_public_path__ + \"static/media/stage-three.ee3fc1c4.svg\";","export default __webpack_public_path__ + \"static/media/succeed.02ebda03.svg\";","export default __webpack_public_path__ + \"static/media/pending.8925603e.svg\";","import { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport Button from '../../components/Button/Button'\r\nimport { PRIMARY } from '../../utils/Constants';\r\nimport useConfig from '../../hooks/useConfig'\r\nimport { useAlert } from 'react-alert'\r\nimport Spinner from './Spinner'\r\nimport BSC from '../../assets/img/bsc-logo.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport stageOne from './img/stage-one.svg'\r\nimport stageTwo from './img/stage-two.svg'\r\nimport stageThree from './img/stage-three.svg'\r\nimport apiProxy from '../../model/ApiProxy';\r\nimport succeed from './img/succeed.svg'\r\nimport pending from './img/pending.svg'\r\nexport default function Operate({ lang, wallet, amount, balance, initialize, isClaim, setSending, sending, setAmount, setIsClaim, isWalletConnected }) {\r\n  const config = useConfig();\r\n  const alert = useAlert();\r\n  const history = useHistory();\r\n  const [isApprove, setIsApprove] = useState(false);\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [bridgeState, setBridgeState] = useState({});\r\n  const [claimState, setClaimState] = useState({});\r\n  const [isClickClaim, setIsClickClaim] = useState(false);\r\n  const [actionElement, setActionElement] = useState(<Button type={PRIMARY} className='button-bridge' fontSize='18' label={lang['approve']} ></Button>);\r\n  const connect = () => {\r\n    wallet.connect()\r\n  }\r\n  const valid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        wallet.switchNetwork(config[res.toChainId])\r\n        setIsClaim(true)\r\n\r\n      }\r\n      setIsValid(res.valid)\r\n    }\r\n  }\r\n  const send = async () => {\r\n    if (amount === '' || amount === 0) {\r\n      alert.error(lang['amount-must-be-greater-than-zero'])\r\n      return;\r\n    }\r\n    if (+amount > balance) {\r\n      alert.error(lang['there-is-not-enough-amount'])\r\n      return;\r\n    }\r\n    if (!isWalletConnected.isFromConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.from_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setSending(true)\r\n    setBridgeState({\r\n      stageOne: false\r\n    })\r\n    let res = await apiProxy.request('freeze', [wallet.detail.chainId, wallet.detail.account, initialize.to_chainId, amount], { includeResponse: true })\r\n    if (res.success) {\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: false\r\n      })\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      setSending(false)\r\n    }\r\n  }\r\n  const claim = async () => {\r\n    if (!isWalletConnected.isToConnected) {\r\n      alert.error(`${lang['send-finished-one']} ${isNetwork(initialize.to_chainId, lang).netWork} ${lang['send-finished-two']}`)\r\n      return;\r\n    }\r\n    setIsClickClaim(true)\r\n    setClaimState({\r\n      stageOne: false,\r\n    })\r\n    let res = await apiProxy.request('mintDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: false,\r\n      })\r\n      setActionElement(<Button type={PRIMARY} className='button-bridge' label={lang['processing']} />)\r\n      window.setInterval(() => {\r\n        valid()\r\n      }, 3000)\r\n    } else {\r\n      alert.error(lang['claim-faild'])\r\n    }\r\n  }\r\n  const reset = ()=>{\r\n    history.push('/bridge')\r\n  }\r\n  const approve = async () => {\r\n    const res = await apiProxy.request('unlockDeri', [wallet.detail.chainId, wallet.detail.account], { includeResponse: true })\r\n    if (res.success) {\r\n      setIsApprove(true);\r\n      loadApprove();\r\n    } else {\r\n      setIsApprove(false)\r\n      alert.error(lang['approve-faild'])\r\n    }\r\n  }\r\n  const loadApprove = async () => {\r\n    if (wallet.isConnected()) {\r\n      const result = await apiProxy.request('isDeriUnlocked', [wallet.detail.chainId, wallet.detail.account])\r\n      setIsApprove(result);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (wallet.isConnected()) {\r\n      loadApprove();\r\n      valid()\r\n    }\r\n  }, [wallet.detail, initialize]);\r\n  useEffect(() => {\r\n    if (isValid) {\r\n      setBridgeState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n    } else if (isClickClaim) {\r\n      setClaimState({\r\n        stageOne: true,\r\n        stageTwo: true,\r\n        stageThree: true,\r\n      })\r\n      setSending(false)\r\n      setAmount('')\r\n    } else {\r\n    }\r\n  }, [isValid, initialize]);\r\n  useEffect(() => {\r\n    let element;\r\n    if (wallet.isConnected()) {\r\n      if (isValid) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['claim']} onClick={claim} />\r\n      } else if (!isApprove) {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['approve']} onClick={approve} />\r\n      } else if(isClickClaim){\r\n        element = <button className='complete' onClick={reset}> <img alt='' src={succeed}/> {lang['complete']} </button>\r\n      }else {\r\n        element = <Button type={PRIMARY} className='button-bridge' label={lang['send']} onClick={send} ></Button>\r\n      }\r\n    } else {\r\n      element = <Button type={PRIMARY} className='button-bridge' label={lang['connect-wallet']} onClick={connect} ></Button>\r\n    }\r\n    setActionElement(element)\r\n  }, [isValid, wallet.detail, isApprove, amount, initialize, isWalletConnected,isClickClaim])\r\n  return (\r\n    <div className='operate'>\r\n      <div className='from-to-title'>\r\n        {lang['bridge']} {amount}  DERI {lang['from'].toLowerCase()} {initialize.from_network} {lang['to'].toLowerCase()} {initialize.to_network}\r\n      </div>\r\n      <div className='btn'>\r\n        {actionElement}\r\n      </div>\r\n      <div className='hint'>\r\n        {!isClaim && <div className='sending'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['sending-deri-to-wormhole']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!sending && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sign']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && <>\r\n                  {bridgeState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!sending || !bridgeState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['bridge-signed']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {sending && <>\r\n                {bridgeState.stageOne && bridgeState.stageTwo && <>\r\n                  {bridgeState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!sending || !bridgeState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n        {isClaim && <div className='claiming'>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageOne} /></div>\r\n              <div className='stage-text'>{lang['claim-deri-ing']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne ? <div className='succeed'>\r\n                  <img alt='' src={succeed} />\r\n                </div> : <div className='pending'>\r\n                    <Spinner />\r\n                  </div>}\r\n              </>}\r\n              {!isClickClaim && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageTwo} /></div>\r\n              <div className='stage-text'>{lang['waiting-for-bridge-to-sync']} </div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && <>\r\n                  {claimState.stageTwo ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageOne) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n          <div className='stage'>\r\n            <div className='stage-img-text'>\r\n              <div className='stage-img'> <img alt='' src={stageThree} /></div>\r\n              <div className='stage-text'>{lang['finished']}</div>\r\n            </div>\r\n            <div className='ok-pending'>\r\n              {isClickClaim && <>\r\n                {claimState.stageOne && claimState.stageTwo && <>\r\n                  {claimState.stageThree ? <div className='succeed'>\r\n                    <img alt='' src={succeed} />\r\n                  </div> : <div className='pending'>\r\n                      <Spinner />\r\n                    </div>}\r\n                </>}\r\n\r\n              </>}\r\n              {(!isClickClaim || !claimState.stageTwo) && <div className='staic'></div>}\r\n            </div>\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}","export default __webpack_public_path__ + \"static/media/arrow-left.3530813d.svg\";","export default __webpack_public_path__ + \"static/media/disabled-down.3f7df0de.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { inject, observer } from 'mobx-react';\r\nimport { DeriEnv, bg } from \"../../lib/web3js/index\";\r\nimport Input from '../../components/Input/Input'\r\nimport Operate from './Operate'\r\nimport DeriNumberFormat from '../../utils/DeriNumberFormat'\r\nimport apiProxy from '../../model/ApiProxy'\r\nimport arrow from './img/arrow-left.svg'\r\nimport disabledDown from './img/disabled-down.svg'\r\nimport BSC from '../../assets/img/BNB.svg';\r\nimport ETH from '../../assets/img/ethereum.svg'\r\nimport deriLogo from '../../assets/img/logo.svg'\r\nimport HECO from '../../assets/img/heco.svg'\r\nimport down from '../../assets/img/arrow-down.svg'\r\nimport up from '../../assets/img/arrow-up.svg'\r\nimport classNames from 'classnames'\r\nimport './bridge.less'\r\nfunction Bridge({ wallet, lang }) {\r\n  const [amount, setAmount] = useState('');\r\n  const [balance, setBalance] = useState(0);\r\n  const isdev = DeriEnv.get() !== 'prod' ? true : false;\r\n  const netWork_text = isdev ?\r\n    [\r\n      {\r\n        text: lang['ropsten'],\r\n        id: 3,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc-testnet'],\r\n        id: 97,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco-testnet'],\r\n        id: 256,\r\n        img: HECO,\r\n      }\r\n    ]\r\n    : [\r\n\r\n      {\r\n        text: lang['ethereum'],\r\n        id: 1,\r\n        img: ETH,\r\n      },\r\n      {\r\n        text: lang['bsc'],\r\n        id: 56,\r\n        img: BSC,\r\n      },\r\n      {\r\n        text: lang['heco'],\r\n        id: 128,\r\n        img: HECO,\r\n      }\r\n\r\n    ]\r\n\r\n  const [fromList, setFromList] = useState(netWork_text)\r\n  const [toList, setToList] = useState(netWork_text)\r\n  const [sending, setSending] = useState(false);\r\n  const [initialize, setInitialize] = useState(isdev ?\r\n    {\r\n      from_chainId: 97,\r\n      from_network: lang['bsc-testnet'],\r\n      to_chainId: 3,\r\n      to_network: lang['ropsten']\r\n    } : {\r\n      from_chainId: 1,\r\n      from_network: lang['ethereum'],\r\n      to_chainId: 56,\r\n      to_network: lang['bsc']\r\n    });\r\n  const [isClaim, setIsClaim] = useState(false);\r\n  const [dropdownList_from, setDropdownList_from] = useState(false);\r\n  const [dropdownList_to, setDropdownList_to] = useState(false);\r\n  const [From_img, setFrom_img] = useState(isNetwork(initialize.from_chainId, lang).img);\r\n  const [To_img, setTo_img] = useState(isNetwork(initialize.to_chainId, lang).img);\r\n  const selectListClassFrom = classNames('from-network-list', { 'show': dropdownList_from })\r\n  const selectListClassTo = classNames('to-network-list', { 'show': dropdownList_to })\r\n  const [isWalletConnected, setIsWalletConnected] = useState(\r\n    {\r\n      isFromConnected: false,\r\n      isToConnected: false\r\n    }\r\n  );\r\n  const isConnected = () => {\r\n    let isFromConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.from_chainId ? true : false) : false;\r\n    let isToConnected = wallet.isConnected() ? (+wallet.detail.chainId === +initialize.to_chainId ? true : false) : false;\r\n    let obj = {\r\n      isFromConnected: isFromConnected,\r\n      isToConnected: isToConnected\r\n    }\r\n    setIsWalletConnected(obj)\r\n  }\r\n\r\n  const showListFrom = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const showListTo = () => {\r\n    if (sending) {\r\n      return;\r\n    }\r\n    setDropdownList_to(!dropdownList_to)\r\n  }\r\n\r\n  const getValid = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getUserWormholeSignature', [wallet.detail.account]);\r\n      if (res.valid) {\r\n        setInitialize({\r\n          from_chainId: res.fromChainId,\r\n          from_network: isNetwork(res.fromChainId, lang).netWork,\r\n          to_chainId: res.toChainId,\r\n          to_network: isNetwork(res.toChainId, lang).netWork,\r\n        })\r\n        setFrom_img(isNetwork(res.fromChainId, lang).img)\r\n        setTo_img(isNetwork(res.toChainId, lang).img)\r\n        setAmount(bg(res.amount, -18).toString())\r\n        setSending(res.valid)\r\n      }\r\n    }\r\n  }\r\n\r\n  const getBalance = async () => {\r\n    if (wallet.isConnected()) {\r\n      let res = await apiProxy.request('getDeriBalance', [wallet.detail.chainId, wallet.detail.account])\r\n      setBalance(res)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBalance()\r\n  }, [wallet.detail, initialize]);\r\n\r\n  useEffect(() => {\r\n    getValid()\r\n  }, [wallet.detail])\r\n\r\n  const select_from = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.to_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.from_chainId = obj.id;\r\n      Init.from_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_from(!dropdownList_from)\r\n  }\r\n  const select_to = obj => {\r\n    let Init = JSON.parse(JSON.stringify(initialize));\r\n    if (Init.from_chainId === obj.id) {\r\n      Init.from_chainId = initialize.to_chainId;\r\n      Init.from_network = initialize.to_network;\r\n      Init.to_chainId = initialize.from_chainId;\r\n      Init.to_network = initialize.from_network;\r\n    } else {\r\n      Init.to_chainId = obj.id;\r\n      Init.to_network = obj.text;\r\n    }\r\n    setInitialize(Init)\r\n    setDropdownList_to(!dropdownList_to)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    let from_arr;\r\n    let to_arr;\r\n    let from_one = netWork_text.filter(p => p.id === +initialize.from_chainId)[0]\r\n    let from_two = netWork_text.filter(p => p.id !== +initialize.from_chainId)[0]\r\n    let from_three = netWork_text.filter(p => p.id !== +initialize.from_chainId)[1]\r\n    let to_one = netWork_text.filter(p => p.id === +initialize.to_chainId)[0]\r\n    let to_two = netWork_text.filter(p => p.id !== +initialize.to_chainId)[0]\r\n    let to_three = netWork_text.filter(p => p.id !== +initialize.to_chainId)[1]\r\n    from_arr = [from_one, from_two, from_three]\r\n    to_arr = [to_one, to_two, to_three]\r\n    setFromList(from_arr)\r\n    setToList(to_arr)\r\n    setFrom_img(isNetwork(initialize.from_chainId, lang).img)\r\n    setTo_img(isNetwork(initialize.to_chainId, lang).img)\r\n    isConnected()\r\n\r\n  }, [initialize, wallet.detail])\r\n\r\n  const getAmount = (value) => {\r\n    setAmount(value)\r\n  }\r\n\r\n  return (\r\n    <div className='bridge-big-box'>\r\n      <div className='bridge-box'>\r\n        <div className='bridge-title'>\r\n          <div className='title'>\r\n            {lang['bridge']}\r\n          </div>\r\n          <div className='birdge-des'>\r\n            {lang['bridge-des']}\r\n          </div>\r\n        </div>\r\n        <div className='bridge-info'>\r\n          <div className='select-network-box'>\r\n            <div className='select-network-title'>\r\n              {lang['select-networks']}\r\n            </div>\r\n            <div className='select-network-from-to'>\r\n              <div className='from-network'>\r\n                <div className='from-title'>\r\n                  {lang['from']}\r\n                </div>\r\n                <div className='from-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListFrom() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={From_img} alt='' />\r\n                      <span>{initialize.from_network}</span>\r\n                      <div className={isClaim ? 'connected-hide' : !isWalletConnected.isFromConnected ? 'is-connected' : 'connected'}>\r\n                        {(!isClaim && isWalletConnected.isFromConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_from ? up  : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassFrom}>\r\n                    {fromList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.from_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_from(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li>:''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className='arrow'>\r\n                <img src={arrow} alt='' />\r\n              </div>\r\n              <div className='to-network'>\r\n                <div className='to-title'>\r\n                  {lang['to']}\r\n                </div>\r\n                <div className='to-dropdown-list'>\r\n                  <div className={sending ? \"drop drop-disabled\" : \"drop\"} onClick={() => { showListTo() }}>\r\n                    <div className='network-logo-connected'>\r\n                      <img src={To_img} alt='' />\r\n                      <span>{initialize.to_network}</span>\r\n                      <div className={!isClaim ? 'connected-hide' : !isWalletConnected.isToConnected ? 'is-connected' : 'connected'}>\r\n                        {(isClaim && isWalletConnected.isToConnected) ? lang['connected'] : lang['unconnected']}\r\n                      </div>\r\n                    </div>\r\n                    <img className='down-icon' src={sending ? disabledDown : dropdownList_to ? up  : down} alt='' />\r\n                  </div>\r\n                  <ul className={selectListClassTo}>\r\n                    {toList.map((item, index) => {\r\n                      return (\r\n                        <>\r\n                          {initialize.to_network !== item.text ? <li key={index} className='wallet-li' onClick={() => select_to(item)}>\r\n                            <div className='li-logo-network'>\r\n                              <img alt='' src={item.img} /> <span> {item.text} </span>\r\n                            </div>\r\n                          </li>:''}\r\n                        </>\r\n                      )\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='set-amount'>\r\n            <div className='set-amount-title'>\r\n              {lang['set-amount']}\r\n            </div>\r\n            <div className='set-amount-box'>\r\n              <div className='input-deri'>\r\n                <Input placeholder='0' value={amount} onChange={getAmount} disabled={sending} className='input-box' />\r\n                <span><img alt='' src={deriLogo} className='amount-img' /> DERI</span>\r\n              </div>\r\n              <div className='total-deri'>\r\n                {lang['total-amount']} <DeriNumberFormat value={balance} decimalScale={4} thousandSeparator={true} /> DERI\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='bridge-operate-hint'>\r\n            <Operate lang={lang} sending={sending} wallet={wallet} balance={balance} isWalletConnected={isWalletConnected} amount={amount} isClaim={isClaim} initialize={initialize} setIsClaim={setIsClaim} setSending={setSending} setAmount={setAmount} />\r\n          </div>\r\n          <div className='bridge-to-polygon'>\r\n            <div>\r\n              <div className='birdge-to-polygon-title'>\r\n                {lang['bridge-to-polygon']} <span className='polygon-title'>\r\n                  <a rel='noreferrer' target='_blank' href='https://wallet.matic.network/bridge'>Polygon</a>\r\n                </span>\r\n              </div>\r\n              <div className='bridge-to-polygon-des'>\r\n                {lang['bridge-to-polygon-des']}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction isNetwork(chainId, lang) {\r\n  chainId = +chainId\r\n  let obj = {}\r\n  switch (chainId) {\r\n    case 1:\r\n      obj.netWork = lang[\"ethereum\"];\r\n      obj.chainId = 1;\r\n      obj.img = ETH;\r\n      break;\r\n    case 56:\r\n      obj.netWork = lang[\"bsc\"];\r\n      obj.chainId = 56;\r\n      obj.img = BSC;\r\n      break;\r\n    case 128:\r\n      obj.netWork = lang[\"heco\"];\r\n      obj.chainId = 128;\r\n      obj.img = HECO;\r\n      break;\r\n    case 97:\r\n      obj.netWork = lang[\"bsc-testnet\"];\r\n      obj.chainId = 97;\r\n      obj.img = BSC;\r\n      break;\r\n    case 3:\r\n      obj.netWork = lang[\"ropsten\"];\r\n      obj.chainId = 3;\r\n      obj.img = ETH;\r\n      break;\r\n    case 256:\r\n      obj.netWork = lang[\"heco-testnet\"];\r\n      obj.chainId = 256;\r\n      obj.img = HECO;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return obj;\r\n}\r\nexport default inject('wallet')(observer(Bridge))"],"sourceRoot":""}