{"version":3,"sources":["pages/Faucet/Faucet.js"],"names":["inject","observer","wallet","lang","alert","useAlert","mint","token","a","isConnected","param","detail","chainId","account","apiProxy","request","includeResponse","res","success","error","className","rel","target","href","map","item","index","width","height","fontWeight","label","onClick"],"mappings":"+OAiHeA,sBAAO,SAAPA,CAAiBC,aA1GhC,YAAmC,IAAjBC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAClBC,EAAQC,cAsDRC,EAAI,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,0DACPN,EAAOO,cADA,uBAELC,EAAQ,CAACR,EAAOS,OAAOC,QAASV,EAAOS,OAAOE,QAASN,GAFlD,SAGOO,IAASC,QAAQ,cAAeL,EAAO,CAAEM,iBAAiB,IAHjE,QAGLC,EAHK,SAIIA,EAAIC,QAGfd,EAAMc,QAAQ,gBAFdd,EAAMe,MAAM,aALL,sBAUTf,EAAMe,MAAM,yBAVH,2CAAH,sDAcV,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACGjB,EAAK,0BAER,sBAAKiB,UAAU,WAAf,UACE,8BAAMjB,EAAK,mBACX,qBAAKiB,UAAU,aAAf,SACE,mBAAGC,IAAI,aAAaC,OAAO,SAASC,KAAK,2CAAzC,sBAKJ,qBAAKH,UAAU,aAAf,SAjFa,CACjB,CACEb,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAO,QAET,CACEA,MAAO,SAET,CACEA,MAAO,QAET,CACEA,MAAO,QAET,CACEA,MAAO,OAET,CACEA,MAAM,QAER,CACEA,MAAM,QAER,CACEA,MAAM,OAER,CACEA,MAAM,QAER,CACEA,MAAM,SAgCUiB,KAAI,SAACC,EAAMC,GACrB,OACE,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,IAAD,CAAMb,MAAOkB,EAAKlB,MAAOoB,MAAO,GAAIC,OAAQ,OAE9C,qBAAKR,UAAU,aAAf,SACGK,EAAKlB,QAER,qBAAKa,UAAU,eAAf,SACE,cAAC,IAAD,CAAQS,WAAY,IAAKC,MAAO3B,EAAI,KAAUwB,MAAO,GAAIC,OAAQ,GAAIG,QAAS,kBAAMzB,EAAKmB,EAAKlB,cAR7DmB","file":"static/js/27.61f4935e.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport Icon from '../../components/Icon/Icon'\nimport Button from '../../components/Button/Button'\nimport apiProxy from '../../model/ApiProxy'\nimport { useAlert } from 'react-alert'\nimport './faucet.less'\nimport { inject, observer } from 'mobx-react'\nfunction Faucet({ wallet, lang }) {\n  const alert = useAlert();\n  const tonkenList = [\n    {\n      token: 'BUSD'\n    },\n    {\n      token: 'SXP'\n    },\n    {\n      token: 'ETH'\n    },\n    {\n      token: 'LTC'\n    },\n    {\n      token: 'XRP'\n    },\n    {\n      token: 'BTCB'\n    },\n    {\n      token: 'ADA'\n    },\n    {\n      token: 'CAKE'\n    },\n    {\n      token: 'MATIC'\n    },\n    {\n      token: 'AAVE'\n    },\n    {\n      token: 'TUSD'\n    },\n    {\n      token: 'TRX'\n    },\n    {\n      token:'USDT'\n    },\n    {\n      token:'USDC'\n    },\n    {\n      token:'UST'\n    },\n    {\n      token:'LUNA'\n    },\n    {\n      token:'DOGE'\n    },\n  ]\n  const mint = async (token) => {\n    if (wallet.isConnected()) {\n      let param = [wallet.detail.chainId, wallet.detail.account, token]\n      let res = await apiProxy.request('mintTokenV3', param, { includeResponse: true })\n      if (!res || !res.success) {\n        alert.error('mint fail')\n      } else {\n        alert.success('mint success')\n      }\n    } else {\n      alert.error('Please connect wallet')\n    }\n\n  }\n  return (\n    <div className='testnet-faucet'>\n      <div className='faucet-info'>\n        <div className='faucet-title'>\n          {lang['obtain-testnet-token']}\n        </div>\n        <div className='mint-bnb'>\n          <div>{lang['go-to-min-bnb']}</div>\n          <div className='bnb-button'>\n            <a rel='norelerror' target='_blank' href='https://testnet.binance.org/faucet-smart'>\n              BNB\n            </a>\n          </div>\n        </div>\n        <div className='mint-token'>\n          {tonkenList.map((item, index) => {\n            return (\n              <div className='mint-token-box' key={index}>\n                <div className='token-logo'>\n                  <Icon token={item.token} width={60} height={60} />\n                </div>\n                <div className='token-name'>\n                  {item.token}\n                </div>\n                <div className='token-button'>\n                  <Button fontWeight={300} label={lang['mint']} width={88} height={31} onClick={() => mint(item.token)} />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n      </div>\n\n    </div>\n  )\n}\nexport default inject('wallet')(observer(Faucet))"],"sourceRoot":""}